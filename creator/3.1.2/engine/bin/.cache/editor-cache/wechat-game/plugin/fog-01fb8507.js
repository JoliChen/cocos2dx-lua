System.register([],(function(e){"use strict";return{execute:function(){e({$:void 0,A:void 0,E:void 0,F:void 0,G:void 0,H:void 0,I:void 0,J:void 0,K:void 0,L:void 0,M:void 0,N:void 0,O:void 0,Q:void 0,S:void 0,T:void 0,U:void 0,V:void 0,W:void 0,X:void 0,Y:void 0,Z:void 0,_:A,a:v,a0:void 0,a1:void 0,a2:void 0,a3:void 0,a4:void 0,a5:void 0,a6:void 0,a7:void 0,a8:void 0,a9:void 0,aa:void 0,ab:void 0,b:y,b1:void 0,b7:Gs,b8:Hs,b9:ks,bI:Wh,bJ:function(e,t){for(var n=Object.entries(t),i=!1,o=0;o<n.length;o++)e[n[o][0]]!==n[o][1]&&(e[n[o][0]]=n[o][1],i=!0);return i},bK:void 0,bM:$h,bO:void 0,bQ:q_,bT:function(e,t,n,i){void 0===i&&(i=!0);for(var o=t.length(e),a=0;a<o;a++){var r=t.get(e,a);r&&n.free(r)}i?t.free(e):t.clear(e)},bU:void 0,ba:js,bb:Ws,by:void 0,c:I,c$:$n,c8:void 0,cA:void 0,cC:void 0,cE:void 0,cG:void 0,cI:void 0,cK:void 0,cM:void 0,cO:void 0,cQ:void 0,cS:void 0,cX:Qn,cZ:On,ca:void 0,cc:void 0,ce:void 0,cg:void 0,ci:void 0,ck:void 0,cm:void 0,co:void 0,cq:void 0,cs:void 0,cu:void 0,cw:void 0,cy:void 0,d:w,d1:kn,d4:Yn,d7:ni,d9:oi,dF:function(e){e>0&&(ae=e)},dG:void 0,dH:void 0,dI:void 0,dJ:$s,dK:Hg,dL:kg,dO:fn,dQ:ui,dR:oh,dT:vp,db:wn,dd:function(e,t){return Math.abs(e-t)<=dn*Math.max(1,Math.abs(e),Math.abs(t))},de:function(e,t,n){return n=n||dn,Math.abs(e-t)<=n},df:pn,dg:function(e){return e<0?0:e>1?1:e},dh:function(e,t,n){return e+(t-e)*n},di:function(e){return e*mn},dj:vn,dl:xn,dm:function(e,t){return Math.floor(xn(e,t))},dn:yn,dp:En,dq:function(e,t,n){return Math.floor(En(e,t,n))},dr:function(e){return--e,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e},ds:Sn,dt:An,du:Cn,dv:Tn,dw:function(e,t){return Math.abs(e)>Math.abs(t)?e:t},dx:dt,dy:pt,dz:xt,e:x,e0:xi,eA:i_,eE:ge,eL:Vp,eN:de,eS:function(e,t){if(t&&e!==Co){for(var n=t.vertices,i=Ko.VERTICES,o=0;o<8;++o)$o.setVec3(e,i,n[o]),i+=3;for(var a=t.planes,r=Ko.PLANES,s=0;s<6;s++,r+=4)$o.setVec4(e,r,a[s])}},eW:void 0,ec:z,ed:F,ee:L,ef:void 0,ej:void 0,ev:ue,ew:le,ex:xe,f:b,f4:Au,f7:void 0,f9:void 0,fG:void 0,fQ:Ue,fT:A_,fV:g_,fY:Nt,fZ:fe,f_:S_,fp:S,fr:void 0,ft:void 0,g:M,g$:Rt,g0:void 0,g1:Ke,g3:void 0,g4:function(e,t){if(e[Gm]<1)throw new Error(L(5304,e[Gm]));nh(e,!0,t),ih(e);for(var n=new ah(e[Gm]),i=e[Hm],o=e[km],a=e[Vm],r=e[jm],s=e[Wm],c=0;c<s.length;++c)s[c].unshift(n,i,o,a,r);return s},g5:function(e,t,n){return[1,0,0,[e],0,n?[t,-1]:[t],[0],0,[],[],[]]},g6:C_,g9:rh,gA:function(){},gB:Ae,gC:Ce,gK:void 0,gM:Z,gN:J,gR:function(e){return zu(Bu({formerlySerializedAs:e}))},gT:ut,gY:Dt,gZ:void 0,gb:void 0,gf:Xe,gk:y_,gq:void 0,gu:function(e){return"function"==typeof e.lerp},gv:void 0,gw:void 0,gy:function(){},gz:E,h1:void 0,h2:K,h5:Mt,h6:Lt,h9:Se,ha:zu,hb:he,hc:st,i:Mi,j:Di,k:zi,m:Li,n:Fi,o:Ui,p:Bi,q:Gi,r:ki,s:Hi,t:ve,v:void 0,w:g,x:void 0,y:void 0,z:void 0});const t=e("eM",!1),n=e("gh",!1),i=e("fv",!1),o=e("fw",!0),a=e("fu",!1);var r="undefined"==typeof window?global:window,s=e("l",{_global:r});s.internal={},r.CC_BUILD=!0,r.CC_TEST=!1,r.CC_EDITOR=t,r.CC_PREVIEW=n,r.CC_DEV=!1,r.CC_DEBUG=!1,r.CC_JSB=a,r.CC_BYTEDANCE=!1,r.CC_WECHAT=!0,r.CC_ALIPAY=!1,r.CC_XIAOMI=!1,r.CC_BAIDU=!1,r.CC_COCOSPLAY=!1,r.CC_HUAWEI=!1,r.CC_OPPO=!1,r.CC_VIVO=!1,r.CC_MINIGAME=o,r.CC_RUNTIME_BASED=i,r.CC_SUPPORT_JIT=!1;var c=e("cU","3.1.2");r.CocosEngine=s.ENGINE_VERSION=c,r.cc=s;var l="https://github.com/cocos-creator/engine/blob/3d/EngineErrorMap.md",f=null,u=console.log.bind(console),_=u,m=u,h=function(e,t){if(!e){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];console.log("ASSERT: "+p.apply(void 0,[t].concat(i)))}},d=u;function p(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return s.js.formatStr.apply(null,[e].concat(n))}function v(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return u.apply(void 0,[e].concat(n))}function g(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return _.apply(void 0,[e].concat(n))}function x(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return m.apply(void 0,[e].concat(n))}function y(e,t){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];return h.apply(void 0,[e,t].concat(i))}function E(){return d.apply(void 0,arguments)}function S(e){if(u=_=m=h=d=function(){},e!==N.NONE){if(e>N.ERROR){var t=function(e){if(s.game.canvas){if(!f){var t=document.createElement("Div");t.setAttribute("id","logInfoDiv"),t.setAttribute("width","200"),t.setAttribute("height",s.game.canvas.height);var n=t.style;n.zIndex="99999",n.position="absolute",n.top=n.left="0",(f=document.createElement("textarea")).setAttribute("rows","20"),f.setAttribute("cols","30"),f.setAttribute("disabled","true");var i=f.style;i.backgroundColor="transparent",i.borderBottom="1px solid #cccccc",i.borderTopWidth=i.borderLeftWidth=i.borderRightWidth="0px",i.borderTopStyle=i.borderLeftStyle=i.borderRightStyle="none",i.padding="0px",i.margin="0px",t.appendChild(f),s.game.canvas.parentNode.appendChild(t)}f.value=f.value+e+"\r\n",f.scrollTop=f.scrollHeight}};m=function(e){for(var n=arguments.length,i=new Array(n>1?n-1:0),o=1;o<n;o++)i[o-1]=arguments[o];t("ERROR :  "+p.apply(void 0,[e].concat(i)))},h=function(e,n){if(!e){for(var i=arguments.length,o=new Array(i>2?i-2:0),a=2;a<i;a++)o[a-2]=arguments[a];t("ASSERT: "+p.apply(void 0,[n].concat(o)))}},e!==N.ERROR_FOR_WEB_PAGE&&(_=function(e){for(var n=arguments.length,i=new Array(n>1?n-1:0),o=1;o<n;o++)i[o-1]=arguments[o];t("WARN :  "+p.apply(void 0,[e].concat(i)))}),e===N.INFO_FOR_WEB_PAGE&&(u=function(e){for(var n=arguments.length,i=new Array(n>1?n-1:0),o=1;o<n;o++)i[o-1]=arguments[o];t(p.apply(void 0,[e].concat(i)))})}else console&&(console.error||(console.error=console.log),console.warn||(console.warn=console.log),m=console.error.bind?console.error.bind(console):function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return console.error.apply(console,[e].concat(n))},h=function(e,t){if(!e){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];var a=p.apply(void 0,[t].concat(i));throw new Error(a)}});if(e!==N.ERROR&&(_=console.warn.bind?console.warn.bind(console):function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return console.warn.apply(console,[e].concat(n))}),e===N.INFO&&(u=console.log.bind?console.log.bind(console):function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return console.log.apply(console,[e].concat(n))}),e<=N.VERBOSE&&"function"==typeof console.debug){var n=console.debug;d=function(){return n.apply(void 0,arguments)}}}}function A(e){x(e.stack||e)}function C(e){return function(t){for(var n=e+" "+t+", please go to "+l+"#"+t+" to see details.",i=arguments.length,o=new Array(i>1?i-1:0),a=1;a<i;a++)o[a-1]=arguments[a];return 0===o.length?n:n+" Arguments: "+o.join(", ")}}var T=C("Log");function I(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];v(T.apply(void 0,[e].concat(n)))}var P=C("Warning");function w(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];g(P.apply(void 0,[e].concat(n)))}var R=C("Error");function b(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];x(R.apply(void 0,[e].concat(n)))}var N,O,D=C("Assert");function M(e,t){if(!e){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];y(!1,D.apply(void 0,[t].concat(i)))}}function L(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return R.apply(void 0,[e].concat(n))}function z(){return!!s.profiler&&s.profiler.isShowingStats()}function F(e){s.profiler&&(e?s.profiler.showStats():s.profiler.hideStats(),s.game.config.showFPS=!!e)}!function(e){e[e.NONE=0]="NONE",e[e.VERBOSE=1]="VERBOSE",e[e.INFO=2]="INFO",e[e.WARN=3]="WARN",e[e.ERROR=4]="ERROR",e[e.INFO_FOR_WEB_PAGE=5]="INFO_FOR_WEB_PAGE",e[e.WARN_FOR_WEB_PAGE=6]="WARN_FOR_WEB_PAGE",e[e.ERROR_FOR_WEB_PAGE=7]="ERROR_FOR_WEB_PAGE"}(N||(N=e("ef",{}))),e("h",Object.freeze({__proto__:null,log:v,warn:g,error:x,assert:y,debug:E,_resetDebugSetting:S,_throw:A,logID:I,warnID:w,errorID:b,assertID:M,get DebugMode(){return N},getError:L,isDisplayStats:z,setDisplayStats:F})),function(e){e[e.PORTRAIT=1]="PORTRAIT",e[e.PORTRAIT_UPSIDE_DOWN=2]="PORTRAIT_UPSIDE_DOWN",e[e.LANDSCAPE_LEFT=4]="LANDSCAPE_LEFT",e[e.LANDSCAPE_RIGHT=8]="LANDSCAPE_RIGHT",e[e.LANDSCAPE=12]="LANDSCAPE"}(O||(O={}));var U,B,G=e("eX",{});U=G,B=wx,Object.keys(B).forEach((function(e){"function"!=typeof B[e]?U[e]=B[e]:U[e]=B[e].bind(B)}));var H=wx.getSystemInfoSync();G.testAndUpdateSystemInfoCache=function(e,t){var n=0,i=null;i=setInterval((function(){var t=wx.getSystemInfoSync();H.screenWidth===t.screenWidth&&H.screenHeight===t.screenHeight?++n>=e&&null!==i&&(clearInterval(i),i=null):n=0,H=t}),t)},G.testAndUpdateSystemInfoCache(10,500),G.getSystemInfoSync=function(){return H};var k=G.getSystemInfoSync();G.isDevTool="devtools"===k.platform,Object.defineProperty(G,"isLandscape",{get:function(){var e=wx.getSystemInfoSync();return"string"==typeof e.deviceOrientation?e.deviceOrientation.startsWith("landscape"):e.screenWidth>e.screenHeight}});var V,j,W,q,Y=O.LANDSCAPE_RIGHT;"android"!==k.platform.toLocaleLowerCase()&&wx.onDeviceOrientationChange((function(e){"landscape"===e.value?Y=O.LANDSCAPE_RIGHT:"landscapeReverse"===e.value&&(Y=O.LANDSCAPE_LEFT)})),Object.defineProperty(G,"orientation",{get:function(){return G.isLandscape?Y:O.PORTRAIT}}),G.onAccelerometerChange=function(e){G.offAccelerometerChange(),V=function(t){var n=t.x,i=t.y;if(G.isLandscape){var o=Y===O.LANDSCAPE_RIGHT?1:-1,a=n;n=-i*o,i=a*o}var r={x:n,y:i,z:t.z};e(r)}},G.offAccelerometerChange=function(){V&&(wx.offAccelerometerChange(V),V=void 0)},G.startAccelerometer=function(e){V&&wx.onAccelerometerChange(V),wx.startAccelerometer(e)},G.createInnerAudioContext=(j=wx,W={onPlay:!0,onPause:!0,onStop:!0,onSeek:!1},void 0===(q=!0)&&(q=!1),function(){var e=j.createInnerAudioContext();if(W.onPlay){var t=e.play,n=null;Object.defineProperty(e,"onPlay",{configurable:!0,value:function(e){n=e}}),Object.defineProperty(e,"play",{configurable:!0,value:function(){t.call(e),n&&(q?setTimeout(n,0):n())}})}if(W.onPause){var i=e.pause,o=null;Object.defineProperty(e,"onPause",{configurable:!0,value:function(e){o=e}}),Object.defineProperty(e,"pause",{configurable:!0,value:function(){i.call(e),o&&(q?setTimeout(o,0):o())}})}if(W.onStop){var a=e.stop,r=null;Object.defineProperty(e,"onStop",{configurable:!0,value:function(e){r=e}}),Object.defineProperty(e,"stop",{configurable:!0,value:function(){a.call(e),r&&(q?setTimeout(r,0):r())}})}if(W.onSeek){var s=e.seek,c=null;Object.defineProperty(e,"onSeeked",{configurable:!0,value:function(e){c=e}}),Object.defineProperty(e,"seek",{configurable:!0,value:function(t){s.call(e,t),c&&(q?setTimeout(c,0):c())}})}return e}),G.getSafeArea=function(){return wx.getSystemInfoSync().safeArea};var X=e("h4",2147483647);function K(e){return(e>0)-(e<0)}function J(e){var t,n;return t=(e>65535)<<4,t|=n=((e>>>=t)>255)<<3,t|=n=((e>>>=n)>15)<<2,(t|=n=((e>>>=n)>3)<<1)|(e>>>=n)>>1}function Q(e){var t=32;return(e&=-e)&&t--,65535&e&&(t-=16),16711935&e&&(t-=8),252645135&e&&(t-=4),858993459&e&&(t-=2),1431655765&e&&(t-=1),t}function Z(e){return e+=0===e,--e,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,1+(e|=e>>>16)}var $=new Array(256);!function(e){for(var t=0;t<256;++t){var n=t,i=t,o=7;for(n>>>=1;n;n>>>=1)i<<=1,i|=1&n,--o;e[t]=i<<o&255}}($),e("cV",Object.freeze({__proto__:null,INT_BITS:32,INT_MAX:X,INT_MIN:-2147483648,sign:K,abs:function(e){var t=e>>31;return(e^t)-t},min:function(e,t){return t^(e^t)&-(e<t)},max:function(e,t){return e^(e^t)&-(e<t)},isPow2:function(e){return!(e&e-1||!e)},log2:J,log10:function(e){return e>=1e9?9:e>=1e8?8:e>=1e7?7:e>=1e6?6:e>=1e5?5:e>=1e4?4:e>=1e3?3:e>=100?2:e>=10?1:0},popCount:function(e){return 16843009*((e=(858993459&(e-=e>>>1&1431655765))+(e>>>2&858993459))+(e>>>4)&252645135)>>>24},countTrailingZeros:Q,nextPow2:Z,prevPow2:function(e){return e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,(e|=e>>>16)-(e>>>1)},parity:function(e){return e^=e>>>16,e^=e>>>8,e^=e>>>4,27030>>>(e&=15)&1},reverse:function(e){return $[255&e]<<24|$[e>>>8&255]<<16|$[e>>>16&255]<<8|$[e>>>24&255]},interleave2:function(e,t){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e&=65535)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t&=65535)|t<<8))|t<<4))|t<<2))|t<<1))<<1},deinterleave2:function(e,t){return(e=65535&((e=16711935&((e=252645135&((e=858993459&((e=e>>>t&1431655765)|e>>>1))|e>>>2))|e>>>4))|e>>>16))<<16>>16},interleave3:function(e,t,n){return e=1227133513&((e=3272356035&((e=251719695&((e=4278190335&((e&=1023)|e<<16))|e<<8))|e<<4))|e<<2),(e|=(t=1227133513&((t=3272356035&((t=251719695&((t=4278190335&((t&=1023)|t<<16))|t<<8))|t<<4))|t<<2))<<1)|(n=1227133513&((n=3272356035&((n=251719695&((n=4278190335&((n&=1023)|n<<16))|n<<8))|n<<4))|n<<2))<<2},deinterleave3:function(e,t){return(e=1023&((e=4278190335&((e=251719695&((e=3272356035&((e=e>>>t&1227133513)|e>>>2))|e>>>4))|e>>>8))|e>>>16))<<22>>22},nextCombination:function(e){var t=e|e-1;return t+1|(~t&-~t)-1>>>Q(e)+1}}));var ee,te,ne,ie,oe,ae=10,re=0,se=new Map;function ce(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function le(e,t,n){return t&&ce(e.prototype,t),n&&ce(e,n),e}function fe(){return(fe=e("fZ",Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e})).apply(this,arguments)}function ue(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,_e(e,t)}function _e(e,t){return(_e=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function me(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function he(t,n,i){return(he=me()?e("hb",Reflect.construct):e("hb",(function(e,t,n){var i=[null];i.push.apply(i,t);var o=new(Function.bind.apply(e,i));return n&&_e(o,n.prototype),o}))).apply(null,arguments)}function de(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function pe(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function ve(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return pe(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?pe(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var i=0;return function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(n=e[Symbol.iterator]()).next.bind(n)}function ge(e,t,n,i){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(i):void 0})}function xe(e,t,n,i,o){var a={};return Object.keys(i).forEach((function(e){a[e]=i[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,("value"in a||a.initializer)&&(a.writable=!0),a=n.slice().reverse().reduce((function(n,i){return i(e,t,n)||n}),a),o&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(o):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}ne=function(e,t,n,i,o,a,r){var s=se.get(a);s&&s.logTimes>s.count&&(o("'%s' is deprecated, please use '%s' instead. "+r,e+"."+t,n+"."+i),s.count++)},ee=e("dG",(function(e,t,n){null!=e&&n.forEach((function(n){var i=re++;se.set(i,{id:i,count:0,logTimes:void 0!==n.logTimes?n.logTimes:ae});var o=null!=n.target?n.target:e,a=null!=n.newName?n.newName:n.name,r=null!=n.targetName?n.targetName:t,s=o===e,c=n.suggest?"("+n.suggest+")":"";if(null!=n.customFunction)e[n.name]=function(){var e;return ne(t,n.name,r,a,g,i,c),(e=n.customFunction).call.apply(e,[this].concat(Array.prototype.slice.call(arguments)))};else if(null!=n.customSetter||null!=n.customGetter){var l=null!=n.customSetter,f=null!=n.customGetter;l&&f?Object.defineProperty(e,n.name,{get:function(){return ne(t,n.name,r,a,g,i,c),n.customGetter.call(this)},set:function(e){ne(t,n.name,r,a,g,i,c),n.customSetter.call(this,e)},enumerable:!1}):l?Object.defineProperty(e,n.name,{set:function(e){ne(t,n.name,r,a,g,i,c),n.customSetter.call(this,e)},enumerable:!1}):f&&Object.defineProperty(e,n.name,{get:function(){return ne(t,n.name,r,a,g,i,c),n.customGetter.call(this)},enumerable:!1})}else Object.defineProperty(e,n.name,{get:function(){return ne(t,n.name,r,a,g,i,c),s?this[a]:o[a]},set:function(e){ne(t,n.name,r,a,g,i,c),s?this[a]=e:o[a]=e},enumerable:!1})}))})),oe=function(e,t,n,i,o){var a=se.get(i);a&&a.logTimes>a.count&&(n("'%s' has been removed. "+o,e+"."+t),a.count++)},te=e("dH",(function(e,t,n){null!=e&&n.forEach((function(n){var i=re++;se.set(i,{id:i,count:0,logTimes:void 0!==n.logTimes?n.logTimes:ae});var o=n.suggest?"("+n.suggest+")":"";Object.defineProperty(e,n.name,{get:function(){return oe(t,n.name,x,i,o)},set:function(){oe(t,n.name,x,i,o)},enumerable:!1})}))})),ie=function(e,t,n,i,o){var a=se.get(i);a&&a.logTimes>a.count&&(n("'%s' is deprecated. "+o,e+"."+t),a.count++)},e("dI",(function(e,t,n){if(null!=e){var i=function(t,n,i,o,a,r){if(t.get){var s=t.get;t.get=function(){return ie(n,i,o,a,r),s.call(this)}}if(t.set){var c=t.set;t.set=function(e){ie(n,i,o,a,r),c.call(this,e)}}Object.defineProperty(e,i,t)};n.forEach((function(n){var o=n.name,a=Object.getOwnPropertyDescriptor(e,o);if(a&&a.configurable){var r=re++;se.set(r,{id:r,count:0,logTimes:void 0!==n.logTimes?n.logTimes:ae});var s=n.suggest?"("+n.suggest+")":"";if(null!=a.value)if("function"==typeof a.value){var c=a.value;e[o]=function(){return ie(t,o,g,r,s),c.call.apply(c,[this].concat(Array.prototype.slice.call(arguments)))}}else i(a,t,o,g,r,s);else i(a,t,o,g,r,s);Object.defineProperty(e,o,{enumerable:!1})}}))}}));var ye=e("eP",function(){function e(e){this.i=0,this.array=e}var t=e.prototype;return t.remove=function(e){var t=this.array.indexOf(e);t>=0&&this.removeAt(t)},t.removeAt=function(e){this.array.splice(e,1),e<=this.i&&--this.i},t.fastRemove=function(e){var t=this.array.indexOf(e);t>=0&&this.fastRemoveAt(t)},t.fastRemoveAt=function(e){var t=this.array;t[e]=t[t.length-1],--t.length,e<=this.i&&--this.i},t.push=function(e){this.array.push(e)},le(e,[{key:"length",get:function(){return this.array.length},set:function(e){this.array.length=e,this.i>=e&&(this.i=e-1)}}]),e}());function Ee(e,t){e.splice(t,1)}function Se(e,t){var n=e.length;t<0||t>=n||(e[t]=e[n-1],e.length=n-1)}function Ae(e,t){var n=e.indexOf(t);return n>=0&&(Ee(e,n),!0)}function Ce(e,t){return e.indexOf(t)>=0}var Te=Object.freeze({__proto__:null,removeAt:Ee,fastRemoveAt:Se,remove:Ae,fastRemove:function(e,t){var n=e.indexOf(t);n>=0&&(e[n]=e[e.length-1],--e.length)},removeIf:function(e,t){var n=e.findIndex(t);if(n>=0){var i=e[n];return Ee(e,n),i}},verifyType:function(e,t){if(e&&e.length>0)for(var n,i=ve(e);!(n=i()).done;)if(!(n.value instanceof t))return I(1300),!1;return!0},removeArray:function(e,t){for(var n=0,i=t.length;n<i;n++)Ae(e,t[n])},appendObjectsAt:function(e,t,n){return e.splice.apply(e,[n,0].concat(t)),e},contains:Ce,copy:function(e){for(var t=e.length,n=new Array(t),i=0;i<t;i+=1)n[i]=e[i];return n},MutableForwardIterator:ye}),Ie=e("fR",function(){function e(e){this.id=void 0,this.prefix=void 0,this.id=0|998*Math.random(),this.prefix=e?e+".":""}return e.prototype.getNewId=function(){return this.prefix+ ++this.id},e}());Ie.global=new Ie("global");var Pe=new Ie("TmpCId."),we="undefined"==typeof Symbol?"__aliases__":Symbol("[[Aliases]]"),Re="__cid__";function be(e){return"number"==typeof e||e instanceof Number}function Ne(e){return"string"==typeof e||e instanceof String}function Oe(e){for(var t in e)return!1;return!0}var De,Me=(De={value:void 0,enumerable:!1,writable:!1,configurable:!0},function(e,t,n,i,o){De.value=n,De.writable=i,De.enumerable=o,Object.defineProperty(e,t,De),De.value=void 0}),Le=function(){var e={get:void 0,set:void 0,enumerable:!1};return function(t,n,i,o,a,r){void 0===a&&(a=!1),void 0===r&&(r=!1),"boolean"==typeof o&&(a=o,o=void 0),e.get=i,e.set=o,e.enumerable=a,e.configurable=r,Object.defineProperty(t,n,e),e.get=void 0,e.set=void 0}}(),ze=function(){var e={get:void 0,enumerable:!1,configurable:!1};return function(t,n,i,o,a){e.get=i,e.enumerable=o,e.configurable=a,Object.defineProperty(t,n,e),e.get=void 0}}(),Fe=function(){var e={set:void 0,enumerable:!1,configurable:!1};return function(t,n,i,o,a){e.set=i,e.enumerable=o,e.configurable=a,Object.defineProperty(t,n,e),e.set=void 0}}();function Ue(e){var t=Object.create(null);return e&&(t["."]=1,t["/"]=1,delete t["."],delete t["/"]),t}function Be(e){if("function"==typeof e){var t=e.prototype;if(t&&t.hasOwnProperty("__classname__")&&t.__classname__)return t.__classname__;var n="";if(e.name&&(n=e.name),e.toString){var i,o=e.toString();(i="["===o.charAt(0)?o.match(/\[\w+\s*(\w+)\]/):o.match(/function\s*(\w+)/))&&2===i.length&&(n=i[1])}return"Object"!==n?n:""}return e&&e.constructor?Be(e.constructor):""}function Ge(e,t,n,i){var o=/([^.]+)$/,a=o.exec(t)[0],r=o.exec(n)[0];function s(){return this[r]}i?Le(e,a,s,(function(e){this[r]=e})):ze(e,a,s)}function He(e,t,n,i){for(var o in n)Ge(e,t+"."+o,n[o],i)}var ke=/(%d)|(%s)/,Ve=/%s/;function je(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];if(0===arguments.length)return"";if(0===n.length)return""+e;var o="string"==typeof e&&ke.test(e);if(o)for(var a,r=ve(n);!(a=r()).done;){var s=a.value,c="number"==typeof s?ke:Ve;if(c.test(e)){var l=""+s;e=e.replace(c,l)}else e+=" "+s}else for(var f,u=ve(n);!(f=u()).done;){var _=f.value;e+=" "+_}return e}function We(){for(var e=arguments.length-1,t=new Array(e),n=0;n<e;++n)t[n]=arguments[n+1];return t}function qe(e,t){for(;e;){var n=Object.getOwnPropertyDescriptor(e,t);if(n)return n;e=Object.getPrototypeOf(e)}return null}function Ye(e,t,n){var i=qe(t,e);i&&Object.defineProperty(n,e,i)}function Xe(e){e=e||{};for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];for(var o=0,a=n;o<a.length;o++){var r=a[o];if(r){if("object"!=typeof r){b(5402,r);continue}for(var s in r)s in e||Ye(s,r,e)}}return e}function Ke(e){e=e||{};for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];for(var o=0,a=n;o<a.length;o++){var r=a[o];if(r){if("object"!=typeof r){b(5403,r);continue}for(var s in r)Ye(s,r,e)}}return e}function Je(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e.prototype=Object.create(t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),e}function Qe(e){var t=e.prototype,n=t&&Object.getPrototypeOf(t);return n&&n.constructor}function Ze(e,t){if(e&&t){if("function"!=typeof e)return!1;if("function"!=typeof t)return!1;if(e===t)return!0;for(;;){if(!(e=Qe(e)))return!1;if(e===t)return!0}}return!1}function $e(e){for(var t=0,n=Object.keys(e);t<n.length;t++)delete e[n[t]]}function et(e){return"string"!=typeof e||e.startsWith(Pe.prefix)}var tt=Ue(!0),nt=Ue(!0);function it(e,t){return function(n,i){if(i.prototype.hasOwnProperty(e)&&delete t[i.prototype[e]],Me(i.prototype,e,n),n){var o=t[n];o&&o!==i?x("A Class already exists with the same "+e+' : "'+n+'".'):t[n]=i}}}var ot=it("__cid__",tt),at=it("__classname__",nt);function rt(e,t){if(at(e,t),!t.prototype.hasOwnProperty(Re)){var n=e||Pe.getNewId();n&&ot(n,t)}}function st(e,t){var n=nt[t],i=tt[t],o=!0;if(n&&n!==e&&(x('"'+t+'" has already been set as name or alias of another class.'),o=!1),i&&i!==e&&(x('"'+t+'" has already been set as id or alias of another class.'),o=!1),o){var a=e[we];a||(a=[],e[we]=a),a.push(t),nt[t]=e,tt[t]=e}}function ct(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];for(var i=0,o=t;i<o.length;i++){var a=o[i],r=a.prototype,s=r.__cid__;s&&delete tt[s];var c=r.__classname__;c&&delete nt[c];var l=r[we];if(l)for(var f=0;f<l.length;++f){var u=l[f];delete nt[u],delete tt[u]}}}function lt(e){return tt[e]}function ft(e){return nt[e]}function ut(e,n){var i;if(n=void 0===n||n,"function"==typeof e&&e.prototype.hasOwnProperty(Re))return i=e.prototype.__cid__,!n&&t&&et(i)?"":i;if(e&&e.constructor){var o=e.constructor.prototype;if(o&&o.hasOwnProperty(Re))return i=e.__cid__,!n&&t&&et(i)?"":i}return""}var _t=e("eQ",function(){var e=t.prototype;function t(e,t){this.count=void 0,this._pool=void 0,this._cleanup=void 0;var n=void 0===t?e:t,i=void 0===t?null:e;this.count=0,this._pool=new Array(n),this._cleanup=i}return e.get=function(){return this._get()},e._get=function(){if(this.count>0){--this.count;var e=this._pool[this.count];return this._pool[this.count]=null,e}return null},e.put=function(e){var t=this._pool;if(this.count<t.length){if(this._cleanup&&!1===this._cleanup(e))return;t[this.count]=e,++this.count}},e.resize=function(e){e>=0&&(this._pool.length=e,this.count>e&&(this.count=e))},t}()),mt=e("eO",Te),ht=e("fU",{IDGenerator:Ie,Pool:_t,array:Te,isNumber:be,isString:Ne,isEmptyObject:Oe,getPropertyDescriptor:qe,addon:Xe,mixin:Ke,extend:Je,getSuper:Qe,isChildClassOf:Ze,clear:$e,value:Me,getset:Le,get:ze,set:Fe,unregisterClass:ct,getClassName:Be,setClassName:rt,setClassAlias:st,getClassByName:ft,get _registeredClassNames(){return fe({},nt)},set _registeredClassNames(e){$e(nt),Object.assign(nt,e)},get _registeredClassIds(){return fe({},tt)},set _registeredClassIds(e){$e(tt),Object.assign(tt,e)},_getClassId:ut,_setClassId:ot,_getClassById:lt,obsolete:Ge,obsoletes:He,formatStr:je,shiftArguments:We,createMap:Ue});function dt(e){if("__bitmask__"in e)return e;Me(e,"__bitmask__",null,!0);for(var t=-1,n=Object.keys(e),i=0;i<n.length;i++){var o=n[i],a=e[o];if(-1===a)a=++t,e[o]=a;else if("number"==typeof a)t=a;else if("string"==typeof a&&Number.isInteger(parseFloat(o)))continue;var r=""+a;o!==r&&Me(e,r,o)}return e}function pt(e){return"__enums__"in e?e:(Me(e,"__enums__",null,!0),pt.update(e))}function vt(e){e.hasOwnProperty("__enums__")}function gt(e){vt(e);var t=e.__enums__||[];for(var n in t.length=0,e){var i=e[n];Number.isInteger(i)&&t.push({name:n,value:i})}return t.sort((function(e,t){return e.value-t.value})),e.__enums__=t,t}function xt(e){"__enums__"in e||Me(e,"__enums__",null,!0)}s.js=ht,e("dB",Object.freeze({__proto__:null,array:mt,js:ht,IDGenerator:Ie,Pool:_t,isNumber:be,isString:Ne,isEmptyObject:Oe,value:Me,getset:Le,get:ze,set:Fe,createMap:Ue,getClassName:Be,obsolete:Ge,obsoletes:He,formatStr:je,shiftArguments:We,getPropertyDescriptor:qe,addon:Xe,mixin:Ke,extend:Je,getSuper:Qe,isChildClassOf:Ze,clear:$e,_idToClass:tt,_nameToClass:nt,_setClassId:ot,setClassName:rt,setClassAlias:st,unregisterClass:ct,_getClassById:lt,getClassByName:ft,_getClassId:ut})),dt.isBitMask=function(e){return e&&e.hasOwnProperty("__bitmask__")},dt.getList=function(e){if(e.__bitmask__)return e.__bitmask__;var t=e.__bitmask__=[];for(var n in e){var i=e[n];Number.isInteger(i)&&t.push({name:n,value:i})}return t.sort((function(e,t){return e.value-t.value})),t},s.BitMask=dt,pt.update=function(e){for(var t=-1,n=Object.keys(e),i=0;i<n.length;i++){var o=n[i],a=e[o];if(-1===a)a=++t,e[o]=a;else if("number"==typeof a)t=a;else if("string"==typeof a&&Number.isInteger(parseFloat(o)))continue;var r=""+a;o!==r&&Me(e,r,o)}return Array.isArray(e.__enums__)&&gt(e),e},pt||(pt=e("dy",{})),pt.isEnum=function(e){return e&&e.hasOwnProperty("__enums__")},pt.getList=function(e){return vt(e),e.__enums__?e.__enums__:gt(e)},s.Enum=pt;var yt=e("dA",function(){function e(){}var t=e.prototype;return t.clone=function(){return b(100,Be(this)+".clone"),this},t.equals=function(){return!1},t.set=function(){b(100,Be(this)+".set")},t.toString=function(){return""+{}},e}());rt("cc.ValueType",yt),s.ValueType=yt;var Et=e("eh",{SUPPORT_TEXTURE_FORMATS:[".astc",".pkm",".pvr",".webp",".jpg",".jpeg",".bmp",".png"],KEY:{none:0,back:6,menu:18,backspace:8,tab:9,enter:13,shift:16,ctrl:17,alt:18,pause:19,capslock:20,escape:27,space:32,pageup:33,pagedown:34,end:35,home:36,left:37,up:38,right:39,down:40,select:41,insert:45,Delete:46,0:48,1:49,2:50,3:51,4:52,5:53,6:54,7:55,8:56,9:57,a:65,b:66,c:67,d:68,e:69,f:70,g:71,h:72,i:73,j:74,k:75,l:76,m:77,n:78,o:79,p:80,q:81,r:82,s:83,t:84,u:85,v:86,w:87,x:88,y:89,z:90,num0:96,num1:97,num2:98,num3:99,num4:100,num5:101,num6:102,num7:103,num8:104,num9:105,"*":106,"+":107,"-":109,numdel:110,"/":111,f1:112,f2:113,f3:114,f4:115,f5:116,f6:117,f7:118,f8:119,f9:120,f10:121,f11:122,f12:123,numlock:144,scrolllock:145,";":186,semicolon:186,equal:187,"=":187,",":188,comma:188,dash:189,".":190,period:190,forwardslash:191,grave:192,"[":219,openbracket:219,backslash:220,"]":221,closebracket:221,quote:222,dpadLeft:1e3,dpadRight:1001,dpadUp:1003,dpadDown:1004,dpadCenter:1005},RAD:Math.PI/180,DEG:180/Math.PI,REPEAT_FOREVER:Number.MAX_VALUE-1,FLT_EPSILON:1.192092896e-7,ORIENTATION_PORTRAIT:1,ORIENTATION_LANDSCAPE:2,ORIENTATION_AUTO:3,ENABLE_TILEDMAP_CULLING:!0,TOUCH_TIMEOUT:5e3,ENABLE_TRANSPARENT_CANVAS:!1,ENABLE_WEBGL_ANTIALIAS:!0,CLEANUP_IMAGE_CACHE:!1,ENABLE_MULTI_TOUCH:!0,MAX_LABEL_CANVAS_POOL_SIZE:20});s.macro=Et;for(var St=/^(?:cc|dragonBones|sp|ccsg)\..+/,At=new Array(123),Ct=0;Ct<123;++Ct)At[Ct]=64;for(var Tt=0;Tt<64;++Tt)At["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charCodeAt(Tt)]=Tt;var It=At;function Pt(e,t,n){function i(e,t,n,i){var o=Object.getOwnPropertyDescriptor(e,t);if(o)o.get&&(e[n]=o.get),o.set&&i&&(e[i]=o.set);else{var a=e[n];Le(e,t,a,e[i])}}for(var o,a=e.prototype,r=0;r<t.length;r++){var s=(o=t[r])[0].toUpperCase()+o.slice(1);i(a,o,"get"+s,"set"+s)}for(o in n){var c=n[o];i(a,o,c[0],c[1])}}function wt(e,t,n,i){var o=e[t];o?Array.isArray(o)?i?(o.push(o[0]),o[0]=n):o.push(n):e[t]=i?[n,o]:[o,n]:e[t]=n}function Rt(e,t){if("function"==typeof e.contains)return e.contains(t);if("function"==typeof e.compareDocumentPosition)return!!(16&e.compareDocumentPosition(t));var n=t.parentNode;if(n)do{if(n===e)return!0;n=n.parentNode}while(null!==n);return!1}function bt(e){return"object"==typeof window&&"function"==typeof Node?e instanceof Node:e&&"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName}function Nt(e,t,n){e&&setTimeout((function(){e(t,n)}),0)}function Ot(e){return!(!e||e.constructor!==Object)&&Oe(e)}function Dt(e,t,n){if(t>n){var i=t;t=n,n=i}return e<t?t:e<n?e:n}function Mt(e){return e*Et.RAD}function Lt(e){return e*Et.DEG}s.misc={BUILTIN_CLASSID_RE:St,BASE64_VALUES:It,propertyDefine:Pt,pushToMap:wt,contains:Rt,isDomNode:bt,callInNextTick:Nt,isPlainEmptyObj_DEV:Ot,clampf:Dt,degreesToRadians:Mt,radiansToDegrees:Lt},e("dC",Object.freeze({__proto__:null,BUILTIN_CLASSID_RE:St,BASE64_VALUES:It,propertyDefine:Pt,pushToMap:wt,contains:Rt,isDomNode:bt,callInNextTick:Nt,tryCatchFunctor_EDITOR:function(e){return Function("target","try {\n  target."+e+"();\n}\ncatch (e) {\n  cc._throw(e);\n}")},isPlainEmptyObj_DEV:Ot,clampf:Dt,degreesToRadians:Mt,radiansToDegrees:Lt}));var zt="$_$";function Ft(e,t){var n=t?Object.create(t):{};return Me(e,"__attrs__",n),n}function Ut(e){if("function"!=typeof e)return Ft(e,Gt(e.constructor));for(var t,n=s.Class.getInheritanceChain(e),i=n.length-1;i>=0;i--){var o=n[i];o.hasOwnProperty("__attrs__")&&o.__attrs__||Ft(o,(t=n[i+1])&&t.__attrs__)}return Ft(e,(t=n[0])&&t.__attrs__),e.__attrs__}function Bt(e,t){var n=Gt(e),i=t+zt,o={};for(var a in n)a.startsWith(i)&&(o[a.slice(i.length)]=n[a]);return o}function Gt(e){return e.hasOwnProperty("__attrs__")&&e.__attrs__||Ut(e)}function Ht(e,t,n,i){Gt(e)[t+zt+n]=i}var kt=function(){function e(e,t){this.name=void 0,this.default=void 0,this.name=e,this.default=t}return e.prototype.toString=function(){return this.name},e}(),Vt=e("dU",new kt("Integer",0));s.Integer=Vt,s.CCInteger=Vt;var jt=e("dV",new kt("Float",0));s.Float=jt,s.CCFloat=jt;var Wt=e("dW",new kt("Boolean",!1));s.Boolean=Wt,s.CCBoolean=Wt;var qt=e("dX",new kt("String",""));function Yt(e,t){return function(n,i){var o='"'+Be(n)+"."+i+'"',a=Bt(n,i),r=a.type;if(r===Vt||r===jt?r="Number":r!==qt&&r!==Wt||(r=""+r),r===e){if(a.hasOwnProperty("default")){var s=a.default;if(void 0!==s&&!Array.isArray(s)&&!Ot(s)){var c=typeof s,l=e.toLowerCase();if(c===l)if("object"===l){if(!s||s instanceof a.ctor)return;w(3605,o,Be(a.ctor))}else"Number"!==e&&w(3606,t,o,e);else{if("function"===c)return;e===qt.default&&null==s?w(3607,o):w(3611,t,o,c)}delete a.type}}}else w(3604,o)}}s.String=qt,s.CCString=qt;var Xt=Object.freeze({__proto__:null,DELIMETER:zt,createAttrsSingle:Ft,createAttrs:Ut,attr:Bt,getClassAttrs:Gt,setClassAttr:Ht,PrimitiveType:kt,CCInteger:Vt,CCFloat:jt,CCBoolean:Wt,CCString:qt,getTypeChecker_ET:Yt,getObjTypeChecker_ET:function(e){return function(t,n){Yt("Object","type")(t,n);var i=Gt(t)[n+zt+"default"],o=s.Class.getDefault(i);if(!Array.isArray(o)&&Ze(e,s.ValueType)){var a=Be(e),r=je('No need to specify the "type" of "%s.%s" because %s is a child class of ValueType.',Be(t),n,a);i?v(r):w(3612,r,a,Be(t),n,a)}}}}),Kt={default:{},serializable:{},editorOnly:{},formerlySerializedAs:{}};function Jt(e,t,n,i){if(!e.get&&!e.set&&e.hasOwnProperty("default")){var o="_N$"+t;e.get=function(){return this[o]},e.set=function(e){var t=this[o];this[o]=e,n.call(this,t)};var a={};for(var r in i[o]=a,Kt){var s=Kt[r];e.hasOwnProperty(r)&&(a[r]=e[r],s.canUsedInGet||delete e[r])}}}function Qt(e,t,n,i){if(Array.isArray(t)){if(!(t.length>0))return b(5508,n,i);e.type=t=t[0]}"function"==typeof t&&(t===String?e.type=s.String:t===Boolean?e.type=s.Boolean:t===Number&&(e.type=s.Float))}function Zt(e,t,n){var i=e?{_short:!0}:{_short:!0,default:t};return n&&(i.type=n),i}function $t(e,t){if(!e||e.constructor!==Object){if(Array.isArray(e)&&e.length>0)return Zt(t,[],e);if("function"==typeof e){var n=e;return Zt(t,Ze(n,s.ValueType)?new n:null,n)}return Zt(t,e instanceof kt?e.default:e)}return null}var en=[];function tn(){return en[en.length-1]}s._RF={push:function(e,t,n,i){void 0===n&&(n=t,t=""),en.push({uuid:t,script:n,module:e,exports:e.exports,beh:null,importMeta:i})},pop:function(){var e=en.pop(),t=e.module,n=t.exports;if(n===e.exports){for(var i in n)return;t.exports=n=e.cls}},peek:tn};var nn=zt,on={datas:null,push:function(e){if(this.datas)this.datas.push(e);else{this.datas=[e];var t=this;setTimeout((function(){t.init()}),0)}},init:function(){var e=this.datas;if(e){for(var t=0;t<e.length;++t){var n=e[t],i=n.cls,o=n.props;"function"==typeof o&&(o=o());var a=Be(i);o?ln(i,a,o,i.$super,n.mixins):b(3633,a)}this.datas=null}}};function an(e,t,n,i){!function(e,t){!function(e,t){e.indexOf(t)<0&&e.push(t)}(e.__props__,t)}(e,n),_n(e,i,t,n)}function rn(e,t,n,i){var o=i.get;i.set,o&&(_n(e,i,t,n),Ht(e,n,"serializable",!1))}function sn(e){return"function"==typeof e?e():e}function cn(e,t,n){for(var i in t)e.hasOwnProperty(i)||n&&!n(i)||Object.defineProperty(e,i,qe(t,i))}function ln(e,t,n,i,o){if(e.__props__=[],i&&i.__props__&&(e.__props__=i.__props__.slice()),o)for(var a=0;a<o.length;++a){var r=o[a];r.__props__&&(e.__props__=e.__props__.concat(r.__props__.filter((function(t){return e.__props__.indexOf(t)<0}))))}if(n)for(var s in function(e,t){for(var n in e){var i=e[n],o=$t(i,!1);if(o&&(i=e[n]=o),i){var a=i.notify;a&&Jt(i,n,a,e),"type"in i&&Qt(i,i.type,t,n)}}}(n,t),n){var c=n[s];c.get||c.set?rn(e,t,s,c):an(e,t,s,c)}var l=Gt(e);e.__values__=e.__props__.filter((function(e){return!1!==l[e+nn+"serializable"]}))}function fn(e){var t=e.name,n=e.extends,i=e.mixins,o=function(e,t,n,i){var o=s.Component,a=tn();if(a&&Ze(t,o)){if(Ze(a.cls,o))return b(3615),null;e=e||a.script}var r=function(e,t,n,i){var o=i.ctor,a=[o],r=o;Me(r,"__ctors__",a.length>0?a:null,!0);var s=r.prototype;if(t&&(r.$super=t),n){for(var c=n.length-1;c>=0;c--){var l=n[c];cn(s,l.prototype),fn._isCCClass(l)&&cn(Gt(r),Gt(l))}s.constructor=r}return rt(e,r),r}(e,t,n,i);if(a)if(Ze(t,o)){var c=a.uuid;c&&ot(c,r),a.cls=r}else Ze(a.cls,o)||(a.cls=r);return r}(t,n,i,e);t||(t=s.js.getClassName(o)),o._sealed=!0,n&&(n._sealed=!1);var a=e.properties;"function"==typeof a||n&&null===n.__props__||i&&i.some((function(e){return null===e.__props__}))?(on.push({cls:o,props:a,mixins:i}),o.__props__=o.__values__=null):ln(o,t,a,n,e.mixins);var r=e.editor;return r&&Ze(n,s.Component)&&s.Component._registerEditorProps(o,r),o}fn._isCCClass=function(e){var t;return null==e||null===(t=e.hasOwnProperty)||void 0===t?void 0:t.call(e,"__ctors__")},fn.fastDefine=function(e,t,n){rt(e,t);for(var i=t.__props__=t.__values__=Object.keys(n),o=Gt(t),a=0;a<i.length;a++){var r=i[a];o[r+nn+"visible"]=!1,o[r+nn+"default"]=n[r]}},fn.Attr=Xt,fn.attr=Bt,fn.getInheritanceChain=function(e){for(var t=[];e=Qe(e);)e!==Object&&t.push(e);return t};var un={Integer:"Number",Float:"Number",Boolean:"Boolean",String:"String"};function _n(e,t,n,i){var o=null,a="";function r(){return a=i+nn,o=Gt(e)}"type"in t&&void 0===t.type&&w(3660,i,n);var s=t.type;s&&(un[s]?(o||r())[a+"type"]=s:"Object"===s||("object"==typeof s?pt.isEnum(s)?((o||r())[a+"type"]="Enum",o[a+"enumList"]=pt.getList(s)):dt.isBitMask(s)&&((o||r())[a+"type"]="BitMask",o[a+"bitmaskList"]=dt.getList(s)):"function"==typeof s&&((o||r())[a+"type"]="Object",o[a+"ctor"]=s))),"default"in t&&((o||r())[a+"default"]=t.default);var c,l=function(e,n){if(e in t){var i=t[e];typeof i===n&&((o||r())[a+e]=i)}};t.editorOnly&&((o||r())[a+"editorOnly"]=!0),t.__noImplicit?(o||r())[a+"serializable"]=null!==(c=t.serializable)&&void 0!==c&&c:!1===t.serializable&&((o||r())[a+"serializable"]=!1),l("formerlySerializedAs","string");var f=t.range;f&&Array.isArray(f)&&f.length>=2&&((o||r())[a+"min"]=f[0],o[a+"max"]=f[1],f.length>2&&(o[a+"step"]=f[2])),l("min","number"),l("max","number"),l("step","number")}fn.isArray=function(e){return e=sn(e),Array.isArray(e)},fn.getDefault=sn,fn.escapeForJS=function(e){return JSON.stringify(e).replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")},fn.IDENTIFIER_RE=/^[A-Za-z_$][0-9A-Za-z_$]*$/,fn.getNewValueTypeCode=!1,s.Class=fn;var mn=Math.PI/180,hn=180/Math.PI,dn=e("dc",1e-6);function pn(e,t,n){if(t>n){var i=t;t=n,n=i}return e<t?t:e>n?n:e}function vn(e){return e*hn}var gn=e("dk",Math.random);function xn(e,t){return Math.random()*(t-e)+e}function yn(e){return(e=(9301*e+49297)%233280)/233280}function En(e,t,n){return yn(e)*(n-t)+t}function Sn(e,t){return e-Math.floor(e/t)*t}function An(e,t){return e=Sn(e,2*t),t-Math.abs(e-t)}function Cn(e,t,n){return(n-e)/(t-e)}function Tn(e){return Math.abs(e.x)>Math.abs(e.y)?Math.abs(e.x)>Math.abs(e.z)?e.x:e.z:Math.abs(e.y)>Math.abs(e.z)?e.y:e.z}var In=1/255,Pn=e("da",function(e){function t(t,n,i,o){var a;return(a=e.call(this)||this)._val=0,"string"==typeof t?a.fromHEX(t):void 0!==n?a.set(t,n,i,o):a.set(t),a}ue(t,e),t.clone=function(e){var n=new t;return e._val?n._val=e._val:n._val=(e.a<<24>>>0)+(e.b<<16)+(e.g<<8)+e.r,n},t.copy=function(e,t){return e.r=t.r,e.g=t.g,e.b=t.b,e.a=t.a,e},t.set=function(e,t,n,i,o){return e.r=t,e.g=n,e.b=i,e.a=o,e},t.fromHEX=function(e,t){return t=0===t.indexOf("#")?t.substring(1):t,e.r=parseInt(t.substr(0,2),16)||0,e.g=parseInt(t.substr(2,2),16)||0,e.b=parseInt(t.substr(4,2),16)||0,e.a=parseInt(t.substr(6,2),16)||255,e._val=(e.a<<24>>>0)+(e.b<<16)+(e.g<<8)+e.r,e},t.add=function(e,t,n){return e.r=t.r+n.r,e.g=t.g+n.g,e.b=t.b+n.b,e.a=t.a+n.a,e},t.subtract=function(e,t,n){return e.r=t.r-n.r,e.g=t.g-n.g,e.b=t.b-n.b,e.a=t.a-n.a,e},t.multiply=function(e,t,n){return e.r=t.r*n.r,e.g=t.g*n.g,e.b=t.b*n.b,e.a=t.a*n.a,e},t.divide=function(e,t,n){return e.r=t.r/n.r,e.g=t.g/n.g,e.b=t.b/n.b,e.a=t.a/n.a,e},t.scale=function(e,t,n){return e.r=t.r*n,e.g=t.g*n,e.b=t.b*n,e.a=t.a*n,e},t.lerp=function(e,t,n,i){var o=t.r,a=t.g,r=t.b,s=t.a;return o+=(n.r-o)*i,a+=(n.g-a)*i,r+=(n.b-r)*i,s+=(n.a-s)*i,e._val=Math.floor((s<<24>>>0)+(r<<16)+(a<<8)+o),e},t.toArray=function(e,n,i){void 0===i&&(i=0);var o=n instanceof t||n.a>1?1/255:1;return e[i+0]=n.r*o,e[i+1]=n.g*o,e[i+2]=n.b*o,e[i+3]=n.a*o,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),t.r=255*e[n+0],t.g=255*e[n+1],t.b=255*e[n+2],t.a=255*e[n+3],t},t.strictEquals=function(e,t){return e.r===t.r&&e.g===t.g&&e.b===t.b&&e.a===t.a},t.equals=function(e,t,n){return void 0===n&&(n=dn),Math.abs(e.r-t.r)<=n*Math.max(1,Math.abs(e.r),Math.abs(t.r))&&Math.abs(e.g-t.g)<=n*Math.max(1,Math.abs(e.g),Math.abs(t.g))&&Math.abs(e.b-t.b)<=n*Math.max(1,Math.abs(e.b),Math.abs(t.b))&&Math.abs(e.a-t.a)<=n*Math.max(1,Math.abs(e.a),Math.abs(t.a))},t.hex=function(e){return(255*e.r<<24|255*e.g<<16|255*e.b<<8|255*e.a)>>>0};var n=t.prototype;return n.clone=function(){var e=new t;return e._val=this._val,e},n.equals=function(e){return e&&this._val===e._val},n.lerp=function(e,t){var n=this.r,i=this.g,o=this.b,a=this.a;return n+=(e.r-n)*t,i+=(e.g-i)*t,o+=(e.b-o)*t,a+=(e.a-a)*t,this._val=Math.floor((a<<24>>>0)+(o<<16)+(i<<8)+n),this},n.toString=function(){return"rgba("+this.r.toFixed()+", "+this.g.toFixed()+", "+this.b.toFixed()+", "+this.a.toFixed()+")"},n.toCSS=function(e){return void 0===e&&(e="rgba"),"rgba"===e?"rgba("+this.r+","+this.g+","+this.b+","+(this.a*In).toFixed(2)+")":"rgb"===e?"rgb("+this.r+","+this.g+","+this.b+")":"#"+this.toHEX(e)},n.fromHEX=function(e){e=0===e.indexOf("#")?e.substring(1):e;var t=parseInt(e.substr(0,2),16)||0,n=parseInt(e.substr(2,2),16)||0,i=parseInt(e.substr(4,2),16)||0,o=parseInt(e.substr(6,2),16)||255;return this._val=(o<<24>>>0)+(i<<16)+(n<<8)+(0|t),this},n.toHEX=function(e){void 0===e&&(e="#rrggbb");var t="0",n=[(this.r<16?t:"")+this.r.toString(16),(this.g<16?t:"")+this.g.toString(16),(this.b<16?t:"")+this.b.toString(16)];return"#rgb"===e?(n[0]=n[0][0],n[1]=n[1][0],n[2]=n[2][0]):"#rrggbbaa"===e&&n.push((this.a<16?t:"")+this.a.toString(16)),n.join("")},n.toRGBValue=function(){return 16777215&this._val},n.fromHSV=function(e,t,n){var i=0,o=0,a=0;if(0===t)i=o=a=n;else if(0===n)i=o=a=0;else{1===e&&(e=0),e*=6;var r=Math.floor(e),s=e-r,c=n*(1-t),l=n*(1-t*s),f=n*(1-t*(1-s));switch(r){case 0:i=n,o=f,a=c;break;case 1:i=l,o=n,a=c;break;case 2:i=c,o=n,a=f;break;case 3:i=c,o=l,a=n;break;case 4:i=f,o=c,a=n;break;case 5:i=n,o=c,a=l}}return i*=255,o*=255,a*=255,this._val=(this.a<<24>>>0)+(a<<16)+(o<<8)+(0|i),this},n.toHSV=function(){var e=this.r*In,t=this.g*In,n=this.b*In,i={h:0,s:0,v:0},o=Math.max(e,t,n),a=Math.min(e,t,n),r=0;return i.v=o,i.s=o?(o-a)/o:0,i.s?(r=o-a,i.h=e===o?(t-n)/r:t===o?2+(n-e)/r:4+(e-t)/r,i.h/=6,i.h<0&&(i.h+=1)):i.h=0,i},n.set=function(e,t,n,i){return"object"==typeof e?null!=e._val?this._val=e._val:(t=e.g||0,n=e.b||0,i="number"==typeof e.a?e.a:255,e=e.r||0,this._val=(i<<24>>>0)+(n<<16)+(t<<8)+(0|e)):(e=e||0,t=t||0,n=n||0,i="number"==typeof i?i:255,this._val=(i<<24>>>0)+(n<<16)+(t<<8)+(0|e)),this},n.multiply=function(e){var t=(255&this._val)*e.r>>8,n=(65280&this._val)*e.g>>8,i=(16711680&this._val)*e.b>>8,o=((4278190080&this._val)>>>8)*e.a;return this._val=4278190080&o|16711680&i|65280&n|255&t,this},n._set_r_unsafe=function(e){return this._val=(4294967040&this._val|e)>>>0,this},n._set_g_unsafe=function(e){return this._val=(4294902015&this._val|e<<8)>>>0,this},n._set_b_unsafe=function(e){return this._val=(4278255615&this._val|e<<16)>>>0,this},n._set_a_unsafe=function(e){return this._val=(16777215&this._val|e<<24)>>>0,this},le(t,[{key:"r",get:function(){return 255&this._val},set:function(e){e=~~pn(e,0,255),this._val=(4294967040&this._val|e)>>>0}},{key:"g",get:function(){return(65280&this._val)>>8},set:function(e){e=~~pn(e,0,255),this._val=(4294902015&this._val|e<<8)>>>0}},{key:"b",get:function(){return(16711680&this._val)>>16},set:function(e){e=~~pn(e,0,255),this._val=(4278255615&this._val|e<<16)>>>0}},{key:"a",get:function(){return(4278190080&this._val)>>>24},set:function(e){e=~~pn(e,0,255),this._val=(16777215&this._val|e<<24)>>>0}},{key:"x",get:function(){return this.r*In},set:function(e){this.r=255*e}},{key:"y",get:function(){return this.g*In},set:function(e){this.g=255*e}},{key:"z",get:function(){return this.b*In},set:function(e){this.b=255*e}},{key:"w",get:function(){return this.a*In},set:function(e){this.a=255*e}}]),t}(yt));function wn(e,t,n,i){return new Pn(e,t,n,i)}Pn.WHITE=Object.freeze(new Pn(255,255,255,255)),Pn.GRAY=Object.freeze(new Pn(127,127,127,255)),Pn.BLACK=Object.freeze(new Pn(0,0,0,255)),Pn.TRANSPARENT=Object.freeze(new Pn(0,0,0,0)),Pn.RED=Object.freeze(new Pn(255,0,0,255)),Pn.GREEN=Object.freeze(new Pn(0,255,0,255)),Pn.BLUE=Object.freeze(new Pn(0,0,255,255)),Pn.CYAN=Object.freeze(new Pn(0,255,255,255)),Pn.MAGENTA=Object.freeze(new Pn(255,0,255,255)),Pn.YELLOW=Object.freeze(new Pn(255,255,0,255)),fn.fastDefine("cc.Color",Pn,{r:0,g:0,b:0,a:255}),s.Color=Pn,s.color=wn;var Rn=e("cY",function(e){function t(t,n,i){var o;return o=e.call(this)||this,t&&"object"==typeof t?(o.x=t.x,o.y=t.y,o.z=t.z):(o.x=t||0,o.y=n||0,o.z=i||0),o}ue(t,e),t.zero=function(e){return e.x=0,e.y=0,e.z=0,e},t.clone=function(e){return new t(e.x,e.y,e.z)},t.copy=function(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e},t.set=function(e,t,n,i){return e.x=t,e.y=n,e.z=i,e},t.add=function(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e.z=t.z+n.z,e},t.subtract=function(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e.z=t.z-n.z,e},t.multiply=function(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e.z=t.z*n.z,e},t.divide=function(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e.z=t.z/n.z,e},t.ceil=function(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e.z=Math.ceil(t.z),e},t.floor=function(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e.z=Math.floor(t.z),e},t.min=function(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e.z=Math.min(t.z,n.z),e},t.max=function(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e.z=Math.max(t.z,n.z),e},t.round=function(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e.z=Math.round(t.z),e},t.multiplyScalar=function(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e},t.scaleAndAdd=function(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e},t.distance=function(e,t){var n=t.x-e.x,i=t.y-e.y,o=t.z-e.z;return Math.sqrt(n*n+i*i+o*o)},t.squaredDistance=function(e,t){var n=t.x-e.x,i=t.y-e.y,o=t.z-e.z;return n*n+i*i+o*o},t.len=function(e){var t=e.x,n=e.y,i=e.z;return Math.sqrt(t*t+n*n+i*i)},t.lengthSqr=function(e){var t=e.x,n=e.y,i=e.z;return t*t+n*n+i*i},t.negate=function(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e},t.invert=function(e,t){return e.x=1/t.x,e.y=1/t.y,e.z=1/t.z,e},t.invertSafe=function(e,t){var n=t.x,i=t.y,o=t.z;return Math.abs(n)<dn?e.x=0:e.x=1/n,Math.abs(i)<dn?e.y=0:e.y=1/i,Math.abs(o)<dn?e.z=0:e.z=1/o,e},t.normalize=function(e,t){var n=t.x,i=t.y,o=t.z,a=n*n+i*i+o*o;return a>0&&(a=1/Math.sqrt(a),e.x=n*a,e.y=i*a,e.z=o*a),e},t.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z},t.cross=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=n.x,s=n.y,c=n.z;return e.x=o*c-a*s,e.y=a*r-i*c,e.z=i*s-o*r,e},t.lerp=function(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e},t.random=function(e,t){t=t||1;var n=2*gn()*Math.PI,i=2*gn()-1,o=Math.sqrt(1-i*i);return e.x=o*Math.cos(n)*t,e.y=o*Math.sin(n)*t,e.z=i*t,e},t.transformMat4=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=n.m03*i+n.m07*o+n.m11*a+n.m15;return r=r?Math.abs(1/r):1,e.x=(n.m00*i+n.m04*o+n.m08*a+n.m12)*r,e.y=(n.m01*i+n.m05*o+n.m09*a+n.m13)*r,e.z=(n.m02*i+n.m06*o+n.m10*a+n.m14)*r,e},t.transformMat4Normal=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=n.m03*i+n.m07*o+n.m11*a;return r=r?Math.abs(1/r):1,e.x=(n.m00*i+n.m04*o+n.m08*a)*r,e.y=(n.m01*i+n.m05*o+n.m09*a)*r,e.z=(n.m02*i+n.m06*o+n.m10*a)*r,e},t.transformMat3=function(e,t,n){var i=t.x,o=t.y,a=t.z;return e.x=i*n.m00+o*n.m03+a*n.m06,e.y=i*n.m01+o*n.m04+a*n.m07,e.z=i*n.m02+o*n.m05+a*n.m08,e},t.transformAffine=function(e,t,n){var i=t.x,o=t.y,a=t.z;return e.x=n.m00*i+n.m04*o+n.m08*a+n.m12,e.y=n.m01*i+n.m05*o+n.m09*a+n.m13,e.x=n.m02*i+n.m06*o+n.m10*a+n.m14,e},t.transformQuat=function(e,t,n){var i=n.w*t.x+n.y*t.z-n.z*t.y,o=n.w*t.y+n.z*t.x-n.x*t.z,a=n.w*t.z+n.x*t.y-n.y*t.x,r=-n.x*t.x-n.y*t.y-n.z*t.z;return e.x=i*n.w+r*-n.x+o*-n.z-a*-n.y,e.y=o*n.w+r*-n.y+a*-n.x-i*-n.z,e.z=a*n.w+r*-n.z+i*-n.y-o*-n.x,e},t.transformRTS=function(e,t,n,i,o){var a=t.x*o.x,r=t.y*o.y,s=t.z*o.z,c=n.w*a+n.y*s-n.z*r,l=n.w*r+n.z*a-n.x*s,f=n.w*s+n.x*r-n.y*a,u=-n.x*a-n.y*r-n.z*s;return e.x=c*n.w+u*-n.x+l*-n.z-f*-n.y+i.x,e.y=l*n.w+u*-n.y+f*-n.x-c*-n.z+i.y,e.z=f*n.w+u*-n.z+c*-n.y-l*-n.x+i.z,e},t.transformInverseRTS=function(e,t,n,i,o){var a=t.x-i.x,r=t.y-i.y,s=t.z-i.z,c=n.w*a-n.y*s+n.z*r,l=n.w*r-n.z*a+n.x*s,f=n.w*s-n.x*r+n.y*a,u=n.x*a+n.y*r+n.z*s;return e.x=(c*n.w+u*n.x+l*n.z-f*n.y)/o.x,e.y=(l*n.w+u*n.y+f*n.x-c*n.z)/o.y,e.z=(f*n.w+u*n.z+c*n.y-l*n.x)/o.z,e},t.rotateX=function(e,t,n,i){var o=t.x-n.x,a=t.y-n.y,r=t.z-n.z,s=Math.cos(i),c=Math.sin(i),l=o,f=a*s-r*c,u=a*c+r*s;return e.x=l+n.x,e.y=f+n.y,e.z=u+n.z,e},t.rotateY=function(e,t,n,i){var o=t.x-n.x,a=t.y-n.y,r=t.z-n.z,s=Math.cos(i),c=Math.sin(i),l=r*c+o*s,f=a,u=r*s-o*c;return e.x=l+n.x,e.y=f+n.y,e.z=u+n.z,e},t.rotateZ=function(e,t,n,i){var o=t.x-n.x,a=t.y-n.y,r=t.z-n.z,s=Math.cos(i),c=Math.sin(i),l=o*s-a*c,f=o*c+a*s,u=r;return e.x=l+n.x,e.y=f+n.y,e.z=u+n.z,e},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e},t.strictEquals=function(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z},t.equals=function(e,t,n){void 0===n&&(n=dn);var i=e.x,o=e.y,a=e.z,r=t.x,s=t.y,c=t.z;return Math.abs(i-r)<=n*Math.max(1,Math.abs(i),Math.abs(r))&&Math.abs(o-s)<=n*Math.max(1,Math.abs(o),Math.abs(s))&&Math.abs(a-c)<=n*Math.max(1,Math.abs(a),Math.abs(c))},t.angle=function(e,n){t.normalize(bn,e),t.normalize(Nn,n);var i=t.dot(bn,Nn);return i>1?0:i<-1?Math.PI:Math.acos(i)},t.projectOnPlane=function(e,n,i){return t.subtract(e,n,t.project(e,n,i))},t.project=function(e,n,i){var o=t.lengthSqr(i);return o<1e-6?t.set(e,0,0,0):t.multiplyScalar(e,i,t.dot(n,i)/o)};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y,this.z)},n.set=function(e,t,n){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y,this.z=e.z):(this.x=e||0,this.y=t||0,this.z=n||0),this},n.equals=function(e,t){return void 0===t&&(t=dn),Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))&&Math.abs(this.z-e.z)<=t*Math.max(1,Math.abs(this.z),Math.abs(e.z))},n.equals3f=function(e,t,n,i){return void 0===i&&(i=dn),Math.abs(this.x-e)<=i*Math.max(1,Math.abs(this.x),Math.abs(e))&&Math.abs(this.y-t)<=i*Math.max(1,Math.abs(this.y),Math.abs(t))&&Math.abs(this.z-n)<=i*Math.max(1,Math.abs(this.z),Math.abs(n))},n.strictEquals=function(e){return this.x===e.x&&this.y===e.y&&this.z===e.z},n.strictEquals3f=function(e,t,n){return this.x===e&&this.y===t&&this.z===n},n.toString=function(){return"("+this.x.toFixed(2)+", "+this.y.toFixed(2)+", "+this.z.toFixed(2)+")"},n.lerp=function(e,t){return this.x+=t*(e.x-this.x),this.y+=t*(e.y-this.y),this.z+=t*(e.z-this.z),this},n.add=function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this},n.add3f=function(e,t,n){return this.x+=e,this.y+=t,this.z+=n,this},n.subtract=function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this},n.subtract3f=function(e,t,n){return this.x-=e,this.y-=t,this.z-=n,this},n.multiplyScalar=function(e){return"object"==typeof e&&console.warn("should use Vec3.multiply for vector * vector operation"),this.x*=e,this.y*=e,this.z*=e,this},n.multiply=function(e){return"object"!=typeof e&&console.warn("should use Vec3.scale for vector * scalar operation"),this.x*=e.x,this.y*=e.y,this.z*=e.z,this},n.multiply3f=function(e,t,n){return this.x*=e,this.y*=t,this.z*=n,this},n.divide=function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},n.divide3f=function(e,t,n){return this.x/=e,this.y/=t,this.z/=n,this},n.negative=function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},n.clampf=function(e,t){return this.x=pn(this.x,e.x,t.x),this.y=pn(this.y,e.y,t.y),this.z=pn(this.z,e.z,t.z),this},n.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z},n.cross=function(e){var t=this.x,n=this.y,i=this.z,o=e.x,a=e.y,r=e.z;return this.x=n*r-i*a,this.y=i*o-t*r,this.z=t*a-n*o,this},n.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},n.lengthSqr=function(){return this.x*this.x+this.y*this.y+this.z*this.z},n.normalize=function(){var e=this.x,t=this.y,n=this.z,i=e*e+t*t+n*n;return i>0&&(i=1/Math.sqrt(i),this.x=e*i,this.y=t*i,this.z=n*i),this},n.transformMat4=function(e){var t=this.x,n=this.y,i=this.z,o=e.m03*t+e.m07*n+e.m11*i+e.m15;return o=o?1/o:1,this.x=(e.m00*t+e.m04*n+e.m08*i+e.m12)*o,this.y=(e.m01*t+e.m05*n+e.m09*i+e.m13)*o,this.z=(e.m02*t+e.m06*n+e.m10*i+e.m14)*o,this},t}(yt));Rn.UNIT_X=Object.freeze(new Rn(1,0,0)),Rn.UNIT_Y=Object.freeze(new Rn(0,1,0)),Rn.UNIT_Z=Object.freeze(new Rn(0,0,1)),Rn.RIGHT=Object.freeze(new Rn(1,0,0)),Rn.UP=Object.freeze(new Rn(0,1,0)),Rn.FORWARD=Object.freeze(new Rn(0,0,-1)),Rn.ZERO=Object.freeze(new Rn(0,0,0)),Rn.ONE=Object.freeze(new Rn(1,1,1)),Rn.NEG_ONE=Object.freeze(new Rn(-1,-1,-1));var bn=new Rn,Nn=new Rn;function On(e,t,n){return new Rn(e,t,n)}fn.fastDefine("cc.Vec3",Rn,{x:0,y:0,z:0}),s.Vec3=Rn,s.v3=On;var Dn=e("d2",function(e){function t(t,n,i,o,a,r,s,c,l){var f;return void 0===t&&(t=1),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=1),void 0===r&&(r=0),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=1),f=e.call(this)||this,"object"==typeof t?(f.m00=t.m00,f.m01=t.m01,f.m02=t.m02,f.m03=t.m03,f.m04=t.m04,f.m05=t.m05,f.m06=t.m06,f.m07=t.m07,f.m08=t.m08):(f.m00=t,f.m01=n,f.m02=i,f.m03=o,f.m04=a,f.m05=r,f.m06=s,f.m07=c,f.m08=l),f}ue(t,e),t.clone=function(e){return new t(e.m00,e.m01,e.m02,e.m03,e.m04,e.m05,e.m06,e.m07,e.m08)},t.copy=function(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e},t.set=function(e,t,n,i,o,a,r,s,c,l){return e.m00=t,e.m01=n,e.m02=i,e.m03=o,e.m04=a,e.m05=r,e.m06=s,e.m07=c,e.m08=l,e},t.identity=function(e){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=1,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e},t.transpose=function(e,t){if(e===t){var n=t.m01,i=t.m02,o=t.m05;e.m01=t.m03,e.m02=t.m06,e.m03=n,e.m05=t.m07,e.m06=i,e.m07=o}else e.m00=t.m00,e.m01=t.m03,e.m02=t.m06,e.m03=t.m01,e.m04=t.m04,e.m05=t.m07,e.m06=t.m02,e.m07=t.m05,e.m08=t.m08;return e},t.invert=function(e,t){var n=t.m00,i=t.m01,o=t.m02,a=t.m03,r=t.m04,s=t.m05,c=t.m06,l=t.m07,f=t.m08,u=f*r-s*l,_=-f*a+s*c,m=l*a-r*c,h=n*u+i*_+o*m;return 0===h?(e.m00=0,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=0,e.m06=0,e.m07=0,e.m08=0,e):(h=1/h,e.m00=u*h,e.m01=(-f*i+o*l)*h,e.m02=(s*i-o*r)*h,e.m03=_*h,e.m04=(f*n-o*c)*h,e.m05=(-s*n+o*a)*h,e.m06=m*h,e.m07=(-l*n+i*c)*h,e.m08=(r*n-i*a)*h,e)},t.determinant=function(e){var t=e.m00,n=e.m01,i=e.m02,o=e.m03,a=e.m04,r=e.m05,s=e.m06,c=e.m07,l=e.m08;return t*(l*a-r*c)+n*(-l*o+r*s)+i*(c*o-a*s)},t.multiply=function(e,t,n){var i=t.m00,o=t.m01,a=t.m02,r=t.m03,s=t.m04,c=t.m05,l=t.m06,f=t.m07,u=t.m08,_=n.m00,m=n.m01,h=n.m02,d=n.m03,p=n.m04,v=n.m05,g=n.m06,x=n.m07,y=n.m08;return e.m00=_*i+m*r+h*l,e.m01=_*o+m*s+h*f,e.m02=_*a+m*c+h*u,e.m03=d*i+p*r+v*l,e.m04=d*o+p*s+v*f,e.m05=d*a+p*c+v*u,e.m06=g*i+x*r+y*l,e.m07=g*o+x*s+y*f,e.m08=g*a+x*c+y*u,e},t.multiplyMat4=function(e,t,n){var i=t.m00,o=t.m01,a=t.m02,r=t.m03,s=t.m04,c=t.m05,l=t.m06,f=t.m07,u=t.m08,_=n.m00,m=n.m01,h=n.m02,d=n.m04,p=n.m05,v=n.m06,g=n.m08,x=n.m09,y=n.m10;return e.m00=_*i+m*r+h*l,e.m01=_*o+m*s+h*f,e.m02=_*a+m*c+h*u,e.m03=d*i+p*r+v*l,e.m04=d*o+p*s+v*f,e.m05=d*a+p*c+v*u,e.m06=g*i+x*r+y*l,e.m07=g*o+x*s+y*f,e.m08=g*a+x*c+y*u,e},t.transform=function(e,t,n){var i=t.m00,o=t.m01,a=t.m02,r=t.m03,s=t.m04,c=t.m05,l=t.m06,f=t.m07,u=t.m08,_=n.x,m=n.y;return e.m00=i,e.m01=o,e.m02=a,e.m03=r,e.m04=s,e.m05=c,e.m06=_*i+m*r+l,e.m07=_*o+m*s+f,e.m08=_*a+m*c+u,e},t.scale=function(e,t,n){var i=n.x,o=n.y;return e.m00=i*t.m00,e.m01=i*t.m01,e.m02=i*t.m02,e.m03=o*t.m03,e.m04=o*t.m04,e.m05=o*t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e},t.rotate=function(e,t,n){var i=t.m00,o=t.m01,a=t.m02,r=t.m03,s=t.m04,c=t.m05,l=t.m06,f=t.m07,u=t.m08,_=Math.sin(n),m=Math.cos(n);return e.m00=m*i+_*r,e.m01=m*o+_*s,e.m02=m*a+_*c,e.m03=m*r-_*i,e.m04=m*s-_*o,e.m05=m*c-_*a,e.m06=l,e.m07=f,e.m08=u,e},t.fromMat4=function(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m04,e.m04=t.m05,e.m05=t.m06,e.m06=t.m08,e.m07=t.m09,e.m08=t.m10,e},t.fromViewUp=function(e,n,i){return Rn.lengthSqr(n)<dn*dn?(t.identity(e),e):(i=i||Rn.UNIT_Y,Rn.normalize(Mn,Rn.cross(Mn,i,n)),Rn.lengthSqr(Mn)<dn*dn?(t.identity(e),e):(Rn.cross(Ln,n,Mn),t.set(e,Mn.x,Mn.y,Mn.z,Ln.x,Ln.y,Ln.z,n.x,n.y,n.z),e))},t.fromTranslation=function(e,t){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=1,e.m05=0,e.m06=t.x,e.m07=t.y,e.m08=1,e},t.fromScaling=function(e,t){return e.m00=t.x,e.m01=0,e.m02=0,e.m03=0,e.m04=t.y,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e},t.fromRotation=function(e,t){var n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=n,e.m02=0,e.m03=-n,e.m04=i,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e},t.fromQuat=function(e,t){var n=t.x,i=t.y,o=t.z,a=t.w,r=n+n,s=i+i,c=o+o,l=n*r,f=i*r,u=i*s,_=o*r,m=o*s,h=o*c,d=a*r,p=a*s,v=a*c;return e.m00=1-u-h,e.m03=f-v,e.m06=_+p,e.m01=f+v,e.m04=1-l-h,e.m07=m-d,e.m02=_-p,e.m05=m+d,e.m08=1-l-u,e},t.inverseTransposeMat4=function(e,t){var n=t.m00,i=t.m01,o=t.m02,a=t.m03,r=t.m04,s=t.m05,c=t.m06,l=t.m07,f=t.m08,u=t.m09,_=t.m10,m=t.m11,h=t.m12,d=t.m13,p=t.m14,v=t.m15,g=n*s-i*r,x=n*c-o*r,y=n*l-a*r,E=i*c-o*s,S=i*l-a*s,A=o*l-a*c,C=f*d-u*h,T=f*p-_*h,I=f*v-m*h,P=u*p-_*d,w=u*v-m*d,R=_*v-m*p,b=g*R-x*w+y*P+E*I-S*T+A*C;return b?(b=1/b,e.m00=(s*R-c*w+l*P)*b,e.m01=(c*I-r*R-l*T)*b,e.m02=(r*w-s*I+l*C)*b,e.m03=(o*w-i*R-a*P)*b,e.m04=(n*R-o*I+a*T)*b,e.m05=(i*I-n*w-a*C)*b,e.m06=(d*A-p*S+v*E)*b,e.m07=(p*y-h*A-v*x)*b,e.m08=(h*S-d*y+v*g)*b,e):null},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.m00,e[n+1]=t.m01,e[n+2]=t.m02,e[n+3]=t.m03,e[n+4]=t.m04,e[n+5]=t.m05,e[n+6]=t.m06,e[n+7]=t.m07,e[n+8]=t.m08,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.m00=t[n+0],e.m01=t[n+1],e.m02=t[n+2],e.m03=t[n+3],e.m04=t[n+4],e.m05=t[n+5],e.m06=t[n+6],e.m07=t[n+7],e.m08=t[n+8],e},t.add=function(e,t,n){return e.m00=t.m00+n.m00,e.m01=t.m01+n.m01,e.m02=t.m02+n.m02,e.m03=t.m03+n.m03,e.m04=t.m04+n.m04,e.m05=t.m05+n.m05,e.m06=t.m06+n.m06,e.m07=t.m07+n.m07,e.m08=t.m08+n.m08,e},t.subtract=function(e,t,n){return e.m00=t.m00-n.m00,e.m01=t.m01-n.m01,e.m02=t.m02-n.m02,e.m03=t.m03-n.m03,e.m04=t.m04-n.m04,e.m05=t.m05-n.m05,e.m06=t.m06-n.m06,e.m07=t.m07-n.m07,e.m08=t.m08-n.m08,e},t.multiplyScalar=function(e,t,n){return e.m00=t.m00*n,e.m01=t.m01*n,e.m02=t.m02*n,e.m03=t.m03*n,e.m04=t.m04*n,e.m05=t.m05*n,e.m06=t.m06*n,e.m07=t.m07*n,e.m08=t.m08*n,e},t.multiplyScalarAndAdd=function(e,t,n,i){return e.m00=n.m00*i+t.m00,e.m01=n.m01*i+t.m01,e.m02=n.m02*i+t.m02,e.m03=n.m03*i+t.m03,e.m04=n.m04*i+t.m04,e.m05=n.m05*i+t.m05,e.m06=n.m06*i+t.m06,e.m07=n.m07*i+t.m07,e.m08=n.m08*i+t.m08,e},t.strictEquals=function(e,t){return e.m00===t.m00&&e.m01===t.m01&&e.m02===t.m02&&e.m03===t.m03&&e.m04===t.m04&&e.m05===t.m05&&e.m06===t.m06&&e.m07===t.m07&&e.m08===t.m08},t.equals=function(e,t,n){return void 0===n&&(n=dn),Math.abs(e.m00-t.m00)<=n*Math.max(1,Math.abs(e.m00),Math.abs(t.m00))&&Math.abs(e.m01-t.m01)<=n*Math.max(1,Math.abs(e.m01),Math.abs(t.m01))&&Math.abs(e.m02-t.m02)<=n*Math.max(1,Math.abs(e.m02),Math.abs(t.m02))&&Math.abs(e.m03-t.m03)<=n*Math.max(1,Math.abs(e.m03),Math.abs(t.m03))&&Math.abs(e.m04-t.m04)<=n*Math.max(1,Math.abs(e.m04),Math.abs(t.m04))&&Math.abs(e.m05-t.m05)<=n*Math.max(1,Math.abs(e.m05),Math.abs(t.m05))&&Math.abs(e.m06-t.m06)<=n*Math.max(1,Math.abs(e.m06),Math.abs(t.m06))&&Math.abs(e.m07-t.m07)<=n*Math.max(1,Math.abs(e.m07),Math.abs(t.m07))&&Math.abs(e.m08-t.m08)<=n*Math.max(1,Math.abs(e.m08),Math.abs(t.m08))};var n=t.prototype;return n.clone=function(){var e=this;return new t(e.m00,e.m01,e.m02,e.m03,e.m04,e.m05,e.m06,e.m07,e.m08)},n.set=function(e,t,n,i,o,a,r,s,c){return void 0===e&&(e=1),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=1),void 0===a&&(a=0),void 0===r&&(r=0),void 0===s&&(s=0),void 0===c&&(c=1),"object"==typeof e?(this.m00=e.m00,this.m01=e.m01,this.m02=e.m02,this.m03=e.m03,this.m04=e.m04,this.m05=e.m05,this.m06=e.m06,this.m07=e.m07,this.m08=e.m08):(this.m00=e,this.m01=t,this.m02=n,this.m03=i,this.m04=o,this.m05=a,this.m06=r,this.m07=s,this.m08=c),this},n.equals=function(e,t){return void 0===t&&(t=dn),Math.abs(this.m00-e.m00)<=t*Math.max(1,Math.abs(this.m00),Math.abs(e.m00))&&Math.abs(this.m01-e.m01)<=t*Math.max(1,Math.abs(this.m01),Math.abs(e.m01))&&Math.abs(this.m02-e.m02)<=t*Math.max(1,Math.abs(this.m02),Math.abs(e.m02))&&Math.abs(this.m03-e.m03)<=t*Math.max(1,Math.abs(this.m03),Math.abs(e.m03))&&Math.abs(this.m04-e.m04)<=t*Math.max(1,Math.abs(this.m04),Math.abs(e.m04))&&Math.abs(this.m05-e.m05)<=t*Math.max(1,Math.abs(this.m05),Math.abs(e.m05))&&Math.abs(this.m06-e.m06)<=t*Math.max(1,Math.abs(this.m06),Math.abs(e.m06))&&Math.abs(this.m07-e.m07)<=t*Math.max(1,Math.abs(this.m07),Math.abs(e.m07))&&Math.abs(this.m08-e.m08)<=t*Math.max(1,Math.abs(this.m08),Math.abs(e.m08))},n.strictEquals=function(e){return this.m00===e.m00&&this.m01===e.m01&&this.m02===e.m02&&this.m03===e.m03&&this.m04===e.m04&&this.m05===e.m05&&this.m06===e.m06&&this.m07===e.m07&&this.m08===e.m08},n.toString=function(){var e=this;return"[\n"+e.m00+", "+e.m01+", "+e.m02+",\n"+e.m03+",\n"+e.m04+", "+e.m05+",\n"+e.m06+", "+e.m07+",\n"+e.m08+"\n]"},n.identity=function(){return this.m00=1,this.m01=0,this.m02=0,this.m03=0,this.m04=1,this.m05=0,this.m06=0,this.m07=0,this.m08=1,this},n.transpose=function(){var e=this.m01,t=this.m02,n=this.m05;return this.m01=this.m03,this.m02=this.m06,this.m03=e,this.m05=this.m07,this.m06=t,this.m07=n,this},n.invert=function(){var e=this.m00,t=this.m01,n=this.m02,i=this.m03,o=this.m04,a=this.m05,r=this.m06,s=this.m07,c=this.m08,l=c*o-a*s,f=-c*i+a*r,u=s*i-o*r,_=e*l+t*f+n*u;return 0===_?(this.set(0,0,0,0,0,0,0,0,0),this):(_=1/_,this.m00=l*_,this.m01=(-c*t+n*s)*_,this.m02=(a*t-n*o)*_,this.m03=f*_,this.m04=(c*e-n*r)*_,this.m05=(-a*e+n*i)*_,this.m06=u*_,this.m07=(-s*e+t*r)*_,this.m08=(o*e-t*i)*_,this)},n.determinant=function(){var e=this.m00,t=this.m01,n=this.m02,i=this.m03,o=this.m04,a=this.m05,r=this.m06,s=this.m07,c=this.m08;return e*(c*o-a*s)+t*(-c*i+a*r)+n*(s*i-o*r)},n.add=function(e){return this.m00+=e.m00,this.m01+=e.m01,this.m02+=e.m02,this.m03+=e.m03,this.m04+=e.m04,this.m05+=e.m05,this.m06+=e.m06,this.m07+=e.m07,this.m08+=e.m08,this},n.subtract=function(e){return this.m00-=e.m00,this.m01-=e.m01,this.m02-=e.m02,this.m03-=e.m03,this.m04-=e.m04,this.m05-=e.m05,this.m06-=e.m06,this.m07-=e.m07,this.m08-=e.m08,this},n.multiply=function(e){var t=this.m00,n=this.m01,i=this.m02,o=this.m03,a=this.m04,r=this.m05,s=this.m06,c=this.m07,l=this.m08,f=e.m00,u=e.m01,_=e.m02,m=e.m03,h=e.m04,d=e.m05,p=e.m06,v=e.m07,g=e.m08;return this.m00=f*t+u*o+_*s,this.m01=f*n+u*a+_*c,this.m02=f*i+u*r+_*l,this.m03=m*t+h*o+d*s,this.m04=m*n+h*a+d*c,this.m05=m*i+h*r+d*l,this.m06=p*t+v*o+g*s,this.m07=p*n+v*a+g*c,this.m08=p*i+v*r+g*l,this},n.multiplyScalar=function(e){return this.m00*=e,this.m01*=e,this.m02*=e,this.m03*=e,this.m04*=e,this.m05*=e,this.m06*=e,this.m07*=e,this.m08*=e,this},n.scale=function(e){var t=e.x,n=e.y;return this.m00=t*this.m00,this.m01=t*this.m01,this.m02=t*this.m02,this.m03=n*this.m03,this.m04=n*this.m04,this.m05=n*this.m05,this.m06=this.m06,this.m07=this.m07,this.m08=this.m08,this},n.rotate=function(e){var t=this.m00,n=this.m01,i=this.m02,o=this.m03,a=this.m04,r=this.m05,s=this.m06,c=this.m07,l=this.m08,f=Math.sin(e),u=Math.cos(e);return this.m00=u*t+f*o,this.m01=u*n+f*a,this.m02=u*i+f*r,this.m03=u*o-f*t,this.m04=u*a-f*n,this.m05=u*r-f*i,this.m06=s,this.m07=c,this.m08=l,this},n.fromQuat=function(e){var t=e.x,n=e.y,i=e.z,o=e.w,a=t+t,r=n+n,s=i+i,c=t*a,l=n*a,f=n*r,u=i*a,_=i*r,m=i*s,h=o*a,d=o*r,p=o*s;return this.m00=1-f-m,this.m03=l-p,this.m06=u+d,this.m01=l+p,this.m04=1-c-m,this.m07=_-h,this.m02=u-d,this.m05=_+h,this.m08=1-c-f,this},t}(yt));Dn.IDENTITY=Object.freeze(new Dn);var Mn=new Rn,Ln=new Rn;fn.fastDefine("cc.Mat3",Dn,{m00:1,m01:0,m02:0,m03:0,m04:1,m05:0,m06:0,m07:0,m08:1}),s.Mat3=Dn;var zn=e("d0",function(e){function t(t,n,i,o){var a;return a=e.call(this)||this,t&&"object"==typeof t?(a.x=t.x,a.y=t.y,a.z=t.z,a.w=t.w):(a.x=t||0,a.y=n||0,a.z=i||0,a.w=null!=o?o:1),a}ue(t,e),t.clone=function(e){return new t(e.x,e.y,e.z,e.w)},t.copy=function(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e},t.set=function(e,t,n,i,o){return e.x=t,e.y=n,e.z=i,e.w=o,e},t.identity=function(e){return e.x=0,e.y=0,e.z=0,e.w=1,e},t.rotationTo=function(e,n,i){var o=Rn.dot(n,i);return o<-.999999?(Rn.cross(Bn,Rn.UNIT_X,n),Bn.length()<1e-6&&Rn.cross(Bn,Rn.UNIT_Y,n),Rn.normalize(Bn,Bn),t.fromAxisAngle(e,Bn,Math.PI),e):o>.999999?(e.x=0,e.y=0,e.z=0,e.w=1,e):(Rn.cross(Bn,n,i),e.x=Bn.x,e.y=Bn.y,e.z=Bn.z,e.w=1+o,t.normalize(e,e))},t.getAxisAngle=function(e,t){var n=2*Math.acos(t.w),i=Math.sin(n/2);return 0!==i?(e.x=t.x/i,e.y=t.y/i,e.z=t.z/i):(e.x=1,e.y=0,e.z=0),n},t.multiply=function(e,t,n){var i=t.x*n.w+t.w*n.x+t.y*n.z-t.z*n.y,o=t.y*n.w+t.w*n.y+t.z*n.x-t.x*n.z,a=t.z*n.w+t.w*n.z+t.x*n.y-t.y*n.x,r=t.w*n.w-t.x*n.x-t.y*n.y-t.z*n.z;return e.x=i,e.y=o,e.z=a,e.w=r,e},t.multiplyScalar=function(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n,e},t.scaleAndAdd=function(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e.w=t.w+n.w*i,e},t.rotateX=function(e,t,n){n*=.5;var i=Math.sin(n),o=Math.cos(n),a=t.x,r=t.y,s=t.z,c=t.w;return e.x=a*o+c*i,e.y=r*o+s*i,e.z=s*o-r*i,e.w=c*o-a*i,e},t.rotateY=function(e,t,n){n*=.5;var i=Math.sin(n),o=Math.cos(n),a=t.x,r=t.y,s=t.z,c=t.w;return e.x=a*o-s*i,e.y=r*o+c*i,e.z=s*o+a*i,e.w=c*o-r*i,e},t.rotateZ=function(e,t,n){n*=.5;var i=Math.sin(n),o=Math.cos(n),a=t.x,r=t.y,s=t.z,c=t.w;return e.x=a*o+r*i,e.y=r*o-a*i,e.z=s*o+c*i,e.w=c*o-s*i,e},t.rotateAround=function(e,n,i,o){return t.invert(Fn,n),Rn.transformQuat(Bn,i,Fn),t.fromAxisAngle(Fn,Bn,o),t.multiply(e,n,Fn),e},t.rotateAroundLocal=function(e,n,i,o){return t.fromAxisAngle(Fn,i,o),t.multiply(e,n,Fn),e},t.calculateW=function(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=Math.sqrt(Math.abs(1-t.x*t.x-t.y*t.y-t.z*t.z)),e},t.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w},t.lerp=function(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e.w=t.w+i*(n.w-t.w),e},t.slerp=function(e,t,n,i){var o=0,a=0,r=n.x,s=n.y,c=n.z,l=n.w,f=t.x*n.x+t.y*n.y+t.z*n.z+t.w*n.w;if(f<0&&(f=-f,r=-r,s=-s,c=-c,l=-l),1-f>1e-6){var u=Math.acos(f),_=Math.sin(u);o=Math.sin((1-i)*u)/_,a=Math.sin(i*u)/_}else o=1-i,a=i;return e.x=o*t.x+a*r,e.y=o*t.y+a*s,e.z=o*t.z+a*c,e.w=o*t.w+a*l,e},t.sqlerp=function(e,n,i,o,a,r){return t.slerp(Fn,n,a,r),t.slerp(Un,i,o,r),t.slerp(e,Fn,Un,2*r*(1-r)),e},t.invert=function(e,t){var n=t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w,i=n?1/n:0;return e.x=-t.x*i,e.y=-t.y*i,e.z=-t.z*i,e.w=t.w*i,e},t.conjugate=function(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e.w=t.w,e},t.len=function(e){return Math.sqrt(e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w)},t.lengthSqr=function(e){return e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w},t.normalize=function(e,t){var n=t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w;return n>0&&(n=1/Math.sqrt(n),e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n),e},t.fromAxes=function(e,n,i,o){return Dn.set(Gn,n.x,n.y,n.z,i.x,i.y,i.z,o.x,o.y,o.z),t.normalize(e,t.fromMat3(e,Gn))},t.fromViewUp=function(e,n,i){return Dn.fromViewUp(Gn,n,i),t.normalize(e,t.fromMat3(e,Gn))},t.fromAxisAngle=function(e,t,n){n*=.5;var i=Math.sin(n);return e.x=i*t.x,e.y=i*t.y,e.z=i*t.z,e.w=Math.cos(n),e},t.fromMat3=function(e,t){var n=t.m00,i=t.m03,o=t.m06,a=t.m01,r=t.m04,s=t.m07,c=t.m02,l=t.m05,f=t.m08,u=n+r+f;if(u>0){var _=.5/Math.sqrt(u+1);e.w=.25/_,e.x=(l-s)*_,e.y=(o-c)*_,e.z=(a-i)*_}else if(n>r&&n>f){var m=2*Math.sqrt(1+n-r-f);e.w=(l-s)/m,e.x=.25*m,e.y=(i+a)/m,e.z=(o+c)/m}else if(r>f){var h=2*Math.sqrt(1+r-n-f);e.w=(o-c)/h,e.x=(i+a)/h,e.y=.25*h,e.z=(s+l)/h}else{var d=2*Math.sqrt(1+f-n-r);e.w=(a-i)/d,e.x=(o+c)/d,e.y=(s+l)/d,e.z=.25*d}return e},t.fromEuler=function(e,t,n,i){t*=Hn,n*=Hn,i*=Hn;var o=Math.sin(t),a=Math.cos(t),r=Math.sin(n),s=Math.cos(n),c=Math.sin(i),l=Math.cos(i);return e.x=o*s*l+a*r*c,e.y=a*r*l+o*s*c,e.z=a*s*c-o*r*l,e.w=a*s*l-o*r*c,e},t.fromAngleZ=function(e,t){return t*=Hn,e.x=e.y=0,e.z=Math.sin(t),e.w=Math.cos(t),e},t.toAxisX=function(e,t){var n=2*t.y,i=2*t.z;return e.x=1-n*t.y-i*t.z,e.y=n*t.x+i*t.w,e.z=i*t.x+n*t.w,e},t.toAxisY=function(e,t){var n=2*t.x,i=2*t.y,o=2*t.z;return e.x=i*t.x-o*t.w,e.y=1-n*t.x-o*t.z,e.z=o*t.y+n*t.w,e},t.toAxisZ=function(e,t){var n=2*t.x,i=2*t.y,o=2*t.z;return e.x=o*t.x-i*t.w,e.y=o*t.y-n*t.w,e.z=1-n*t.x-i*t.y,e},t.toEuler=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=t.w,s=0,c=0,l=0,f=i*o+a*r;if(f>.499999)s=0,c=vn(2*Math.atan2(i,r)),l=90;else if(f<-.499999)s=0,c=-vn(2*Math.atan2(i,r)),l=-90;else{var u=i*i,_=o*o,m=a*a;s=vn(Math.atan2(2*i*r-2*o*a,1-2*u-2*m)),c=vn(Math.atan2(2*o*r-2*i*a,1-2*_-2*m)),l=vn(Math.asin(2*f)),n&&(s=-180*Math.sign(s+1e-6)+s,c=-180*Math.sign(c+1e-6)+c,l=180*Math.sign(l+1e-6)-l)}return e.x=s,e.y=c,e.z=l,e},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e[n+3]=t.w,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e.w=t[n+3],e},t.strictEquals=function(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z&&e.w===t.w},t.equals=function(e,t,n){return void 0===n&&(n=dn),Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))&&Math.abs(e.z-t.z)<=n*Math.max(1,Math.abs(e.z),Math.abs(t.z))&&Math.abs(e.w-t.w)<=n*Math.max(1,Math.abs(e.w),Math.abs(t.w))};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y,this.z,this.w)},n.set=function(e,t,n,i){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w):(this.x=e||0,this.y=t||0,this.z=n||0,this.w=null!=i?i:1),this},n.equals=function(e,t){return void 0===t&&(t=dn),Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))&&Math.abs(this.z-e.z)<=t*Math.max(1,Math.abs(this.z),Math.abs(e.z))&&Math.abs(this.w-e.w)<=t*Math.max(1,Math.abs(this.w),Math.abs(e.w))},n.strictEquals=function(e){return e&&this.x===e.x&&this.y===e.y&&this.z===e.z&&this.w===e.w},n.getEulerAngles=function(e){return t.toEuler(e,this)},n.lerp=function(e,t){return this.x+=t*(e.x-this.x),this.y+=t*(e.y-this.y),this.z+=t*(e.z-this.z),this.w+=t*(e.w-this.w),this},n.slerp=function(e,n){return t.slerp(this,this,e,n)},n.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},n.lengthSqr=function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},t}(yt));zn.IDENTITY=Object.freeze(new zn);var Fn=new zn,Un=new zn,Bn=new Rn,Gn=new Dn,Hn=.5*Math.PI/180;function kn(e,t,n,i){return void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),new zn(e,t,n,i)}fn.fastDefine("cc.Quat",zn,{x:0,y:0,z:0,w:1}),s.Quat=zn,s.quat=kn;var Vn=e("eT",Object.freeze([Object.freeze([1,0,0,1]),Object.freeze([0,1,-1,0]),Object.freeze([-1,0,0,-1]),Object.freeze([0,-1,1,0])])),jn=e("d3",function(e){function t(t,n,i,o,a,r,s,c,l,f,u,_,m,h,d,p){var v;return void 0===t&&(t=1),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=0),void 0===r&&(r=1),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=0),void 0===f&&(f=0),void 0===u&&(u=1),void 0===_&&(_=0),void 0===m&&(m=0),void 0===h&&(h=0),void 0===d&&(d=0),void 0===p&&(p=1),(v=e.call(this)||this).m00=void 0,v.m01=void 0,v.m02=void 0,v.m03=void 0,v.m04=void 0,v.m05=void 0,v.m06=void 0,v.m07=void 0,v.m08=void 0,v.m09=void 0,v.m10=void 0,v.m11=void 0,v.m12=void 0,v.m13=void 0,v.m14=void 0,v.m15=void 0,"object"==typeof t?(v.m00=t.m00,v.m01=t.m01,v.m02=t.m02,v.m03=t.m03,v.m04=t.m04,v.m05=t.m05,v.m06=t.m06,v.m07=t.m07,v.m08=t.m08,v.m09=t.m09,v.m10=t.m10,v.m11=t.m11,v.m12=t.m12,v.m13=t.m13,v.m14=t.m14,v.m15=t.m15):(v.m00=t,v.m01=n,v.m02=i,v.m03=o,v.m04=a,v.m05=r,v.m06=s,v.m07=c,v.m08=l,v.m09=f,v.m10=u,v.m11=_,v.m12=m,v.m13=h,v.m14=d,v.m15=p),v}ue(t,e),t.clone=function(e){return new t(e.m00,e.m01,e.m02,e.m03,e.m04,e.m05,e.m06,e.m07,e.m08,e.m09,e.m10,e.m11,e.m12,e.m13,e.m14,e.m15)},t.copy=function(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15,e},t.set=function(e,t,n,i,o,a,r,s,c,l,f,u,_,m,h,d,p){return e.m00=t,e.m01=n,e.m02=i,e.m03=o,e.m04=a,e.m05=r,e.m06=s,e.m07=c,e.m08=l,e.m09=f,e.m10=u,e.m11=_,e.m12=m,e.m13=h,e.m14=d,e.m15=p,e},t.identity=function(e){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.transpose=function(e,t){if(e===t){var n=t.m01,i=t.m02,o=t.m03,a=t.m06,r=t.m07,s=t.m11;e.m01=t.m04,e.m02=t.m08,e.m03=t.m12,e.m04=n,e.m06=t.m09,e.m07=t.m13,e.m08=i,e.m09=a,e.m11=t.m14,e.m12=o,e.m13=r,e.m14=s}else e.m00=t.m00,e.m01=t.m04,e.m02=t.m08,e.m03=t.m12,e.m04=t.m01,e.m05=t.m05,e.m06=t.m09,e.m07=t.m13,e.m08=t.m02,e.m09=t.m06,e.m10=t.m10,e.m11=t.m14,e.m12=t.m03,e.m13=t.m07,e.m14=t.m11,e.m15=t.m15;return e},t.invert=function(e,t){var n=t.m00,i=t.m01,o=t.m02,a=t.m03,r=t.m04,s=t.m05,c=t.m06,l=t.m07,f=t.m08,u=t.m09,_=t.m10,m=t.m11,h=t.m12,d=t.m13,p=t.m14,v=t.m15,g=n*s-i*r,x=n*c-o*r,y=n*l-a*r,E=i*c-o*s,S=i*l-a*s,A=o*l-a*c,C=f*d-u*h,T=f*p-_*h,I=f*v-m*h,P=u*p-_*d,w=u*v-m*d,R=_*v-m*p,b=g*R-x*w+y*P+E*I-S*T+A*C;return 0===b?(e.m00=0,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=0,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=0,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=0,e):(b=1/b,e.m00=(s*R-c*w+l*P)*b,e.m01=(o*w-i*R-a*P)*b,e.m02=(d*A-p*S+v*E)*b,e.m03=(_*S-u*A-m*E)*b,e.m04=(c*I-r*R-l*T)*b,e.m05=(n*R-o*I+a*T)*b,e.m06=(p*y-h*A-v*x)*b,e.m07=(f*A-_*y+m*x)*b,e.m08=(r*w-s*I+l*C)*b,e.m09=(i*I-n*w-a*C)*b,e.m10=(h*S-d*y+v*g)*b,e.m11=(u*y-f*S-m*g)*b,e.m12=(s*T-r*P-c*C)*b,e.m13=(n*P-i*T+o*C)*b,e.m14=(d*x-h*E-p*g)*b,e.m15=(f*E-u*x+_*g)*b,e)},t.determinant=function(e){var t=e.m00,n=e.m01,i=e.m02,o=e.m03,a=e.m04,r=e.m05,s=e.m06,c=e.m07,l=e.m08,f=e.m09,u=e.m10,_=e.m11,m=e.m12,h=e.m13,d=e.m14,p=e.m15;return(t*r-n*a)*(u*p-_*d)-(t*s-i*a)*(f*p-_*h)+(t*c-o*a)*(f*d-u*h)+(n*s-i*r)*(l*p-_*m)-(n*c-o*r)*(l*d-u*m)+(i*c-o*s)*(l*h-f*m)},t.multiply=function(e,t,n){var i=t.m00,o=t.m01,a=t.m02,r=t.m03,s=t.m04,c=t.m05,l=t.m06,f=t.m07,u=t.m08,_=t.m09,m=t.m10,h=t.m11,d=t.m12,p=t.m13,v=t.m14,g=t.m15,x=n.m00,y=n.m01,E=n.m02,S=n.m03;return e.m00=x*i+y*s+E*u+S*d,e.m01=x*o+y*c+E*_+S*p,e.m02=x*a+y*l+E*m+S*v,e.m03=x*r+y*f+E*h+S*g,x=n.m04,y=n.m05,E=n.m06,S=n.m07,e.m04=x*i+y*s+E*u+S*d,e.m05=x*o+y*c+E*_+S*p,e.m06=x*a+y*l+E*m+S*v,e.m07=x*r+y*f+E*h+S*g,x=n.m08,y=n.m09,E=n.m10,S=n.m11,e.m08=x*i+y*s+E*u+S*d,e.m09=x*o+y*c+E*_+S*p,e.m10=x*a+y*l+E*m+S*v,e.m11=x*r+y*f+E*h+S*g,x=n.m12,y=n.m13,E=n.m14,S=n.m15,e.m12=x*i+y*s+E*u+S*d,e.m13=x*o+y*c+E*_+S*p,e.m14=x*a+y*l+E*m+S*v,e.m15=x*r+y*f+E*h+S*g,e},t.transform=function(e,t,n){var i=n.x,o=n.y,a=n.z;if(t===e)e.m12=t.m00*i+t.m04*o+t.m08*a+t.m12,e.m13=t.m01*i+t.m05*o+t.m09*a+t.m13,e.m14=t.m02*i+t.m06*o+t.m10*a+t.m14,e.m15=t.m03*i+t.m07*o+t.m11*a+t.m15;else{var r=t.m00,s=t.m01,c=t.m02,l=t.m03,f=t.m04,u=t.m05,_=t.m06,m=t.m07,h=t.m08,d=t.m09,p=t.m10,v=t.m11;t.m12,t.m13,t.m14,t.m15,e.m00=r,e.m01=s,e.m02=c,e.m03=l,e.m04=f,e.m05=u,e.m06=_,e.m07=m,e.m08=h,e.m09=d,e.m10=p,e.m11=v,e.m12=r*i+f*o+h*a+t.m12,e.m13=s*i+u*o+d*a+t.m13,e.m14=c*i+_*o+p*a+t.m14,e.m15=l*i+m*o+v*a+t.m15}return e},t.translate=function(e,t,n){return console.warn("function changed"),t===e?(e.m12+=n.x,e.m13+=n.y,e.m14+=n.z):(e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12+=n.x,e.m13+=n.y,e.m14+=n.z,e.m15=t.m15),e},t.scale=function(e,t,n){var i=n.x,o=n.y,a=n.z;return e.m00=t.m00*i,e.m01=t.m01*i,e.m02=t.m02*i,e.m03=t.m03*i,e.m04=t.m04*o,e.m05=t.m05*o,e.m06=t.m06*o,e.m07=t.m07*o,e.m08=t.m08*a,e.m09=t.m09*a,e.m10=t.m10*a,e.m11=t.m11*a,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15,e},t.rotate=function(e,t,n,i){var o=i.x,a=i.y,r=i.z,s=Math.sqrt(o*o+a*a+r*r);if(Math.abs(s)<dn)return null;o*=s=1/s,a*=s,r*=s;var c=Math.sin(n),l=Math.cos(n),f=1-l,u=t.m00,_=t.m01,m=t.m02,h=t.m03,d=t.m04,p=t.m05,v=t.m06,g=t.m07,x=t.m08,y=t.m09,E=t.m10,S=t.m11,A=o*o*f+l,C=a*o*f+r*c,T=r*o*f-a*c,I=o*a*f-r*c,P=a*a*f+l,w=r*a*f+o*c,R=o*r*f+a*c,b=a*r*f-o*c,N=r*r*f+l;return e.m00=u*A+d*C+x*T,e.m01=_*A+p*C+y*T,e.m02=m*A+v*C+E*T,e.m03=h*A+g*C+S*T,e.m04=u*I+d*P+x*w,e.m05=_*I+p*P+y*w,e.m06=m*I+v*P+E*w,e.m07=h*I+g*P+S*w,e.m08=u*R+d*b+x*N,e.m09=_*R+p*b+y*N,e.m10=m*R+v*b+E*N,e.m11=h*R+g*b+S*N,t!==e&&(e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e},t.rotateX=function(e,t,n){var i=Math.sin(n),o=Math.cos(n),a=t.m04,r=t.m05,s=t.m06,c=t.m07,l=t.m08,f=t.m09,u=t.m10,_=t.m11;return t!==e&&(e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m04=a*o+l*i,e.m05=r*o+f*i,e.m06=s*o+u*i,e.m07=c*o+_*i,e.m08=l*o-a*i,e.m09=f*o-r*i,e.m10=u*o-s*i,e.m11=_*o-c*i,e},t.rotateY=function(e,t,n){var i=Math.sin(n),o=Math.cos(n),a=t.m00,r=t.m01,s=t.m02,c=t.m03,l=t.m08,f=t.m09,u=t.m10,_=t.m11;return t!==e&&(e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m00=a*o-l*i,e.m01=r*o-f*i,e.m02=s*o-u*i,e.m03=c*o-_*i,e.m08=a*i+l*o,e.m09=r*i+f*o,e.m10=s*i+u*o,e.m11=c*i+_*o,e},t.rotateZ=function(e,t,n){var i=Math.sin(n),o=Math.cos(n),a=t.m00,r=t.m01,s=t.m02,c=t.m03,l=t.m04,f=t.m05,u=t.m06,_=t.m07;return t!==e&&(e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m00=a*o+l*i,e.m01=r*o+f*i,e.m02=s*o+u*i,e.m03=c*o+_*i,e.m04=l*o-a*i,e.m05=f*o-r*i,e.m06=u*o-s*i,e.m07=_*o-c*i,e},t.fromTranslation=function(e,t){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=t.x,e.m13=t.y,e.m14=t.z,e.m15=1,e},t.fromScaling=function(e,t){return e.m00=t.x,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=t.y,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=t.z,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromRotation=function(e,t,n){var i=n.x,o=n.y,a=n.z,r=Math.sqrt(i*i+o*o+a*a);if(Math.abs(r)<dn)return null;i*=r=1/r,o*=r,a*=r;var s=Math.sin(t),c=Math.cos(t),l=1-c;return e.m00=i*i*l+c,e.m01=o*i*l+a*s,e.m02=a*i*l-o*s,e.m03=0,e.m04=i*o*l-a*s,e.m05=o*o*l+c,e.m06=a*o*l+i*s,e.m07=0,e.m08=i*a*l+o*s,e.m09=o*a*l-i*s,e.m10=a*a*l+c,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromXRotation=function(e,t){var n=Math.sin(t),i=Math.cos(t);return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=i,e.m06=n,e.m07=0,e.m08=0,e.m09=-n,e.m10=i,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromYRotation=function(e,t){var n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=0,e.m02=-n,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=n,e.m09=0,e.m10=i,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromZRotation=function(e,t){var n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=n,e.m02=0,e.m03=0,e.m04=-n,e.m05=i,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromRT=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=t.w,s=i+i,c=o+o,l=a+a,f=i*s,u=i*c,_=i*l,m=o*c,h=o*l,d=a*l,p=r*s,v=r*c,g=r*l;return e.m00=1-(m+d),e.m01=u+g,e.m02=_-v,e.m03=0,e.m04=u-g,e.m05=1-(f+d),e.m06=h+p,e.m07=0,e.m08=_+v,e.m09=h-p,e.m10=1-(f+m),e.m11=0,e.m12=n.x,e.m13=n.y,e.m14=n.z,e.m15=1,e},t.getTranslation=function(e,t){return e.x=t.m12,e.y=t.m13,e.z=t.m14,e},t.getScaling=function(e,t){var n=qn.m00=t.m00,i=qn.m01=t.m01,o=qn.m02=t.m02,a=qn.m03=t.m04,r=qn.m04=t.m05,s=qn.m05=t.m06,c=qn.m06=t.m08,l=qn.m07=t.m09,f=qn.m08=t.m10;return e.x=Math.sqrt(n*n+i*i+o*o),e.y=Math.sqrt(a*a+r*r+s*s),e.z=Math.sqrt(c*c+l*l+f*f),Dn.determinant(qn)<0&&(e.x*=-1),e},t.getRotation=function(e,t){var n=t.m00+t.m05+t.m10,i=0;return n>0?(i=2*Math.sqrt(n+1),e.w=.25*i,e.x=(t.m06-t.m09)/i,e.y=(t.m08-t.m02)/i,e.z=(t.m01-t.m04)/i):t.m00>t.m05&&t.m00>t.m10?(i=2*Math.sqrt(1+t.m00-t.m05-t.m10),e.w=(t.m06-t.m09)/i,e.x=.25*i,e.y=(t.m01+t.m04)/i,e.z=(t.m08+t.m02)/i):t.m05>t.m10?(i=2*Math.sqrt(1+t.m05-t.m00-t.m10),e.w=(t.m08-t.m02)/i,e.x=(t.m01+t.m04)/i,e.y=.25*i,e.z=(t.m06+t.m09)/i):(i=2*Math.sqrt(1+t.m10-t.m00-t.m05),e.w=(t.m01-t.m04)/i,e.x=(t.m08+t.m02)/i,e.y=(t.m06+t.m09)/i,e.z=.25*i),e},t.toRTS=function(e,t,n,i){i.x=Rn.set(Wn,e.m00,e.m01,e.m02).length(),qn.m00=e.m00/i.x,qn.m01=e.m01/i.x,qn.m02=e.m02/i.x,i.y=Rn.set(Wn,e.m04,e.m05,e.m06).length(),qn.m03=e.m04/i.y,qn.m04=e.m05/i.y,qn.m05=e.m06/i.y,i.z=Rn.set(Wn,e.m08,e.m09,e.m10).length(),qn.m06=e.m08/i.z,qn.m07=e.m09/i.z,qn.m08=e.m10/i.z,Dn.determinant(qn)<0&&(i.x*=-1,qn.m00*=-1,qn.m01*=-1,qn.m02*=-1),zn.fromMat3(t,qn),Rn.set(n,e.m12,e.m13,e.m14)},t.fromRTS=function(e,t,n,i){var o=t.x,a=t.y,r=t.z,s=t.w,c=o+o,l=a+a,f=r+r,u=o*c,_=o*l,m=o*f,h=a*l,d=a*f,p=r*f,v=s*c,g=s*l,x=s*f,y=i.x,E=i.y,S=i.z;return e.m00=(1-(h+p))*y,e.m01=(_+x)*y,e.m02=(m-g)*y,e.m03=0,e.m04=(_-x)*E,e.m05=(1-(u+p))*E,e.m06=(d+v)*E,e.m07=0,e.m08=(m+g)*S,e.m09=(d-v)*S,e.m10=(1-(u+h))*S,e.m11=0,e.m12=n.x,e.m13=n.y,e.m14=n.z,e.m15=1,e},t.fromRTSOrigin=function(e,t,n,i,o){var a=t.x,r=t.y,s=t.z,c=t.w,l=a+a,f=r+r,u=s+s,_=a*l,m=a*f,h=a*u,d=r*f,p=r*u,v=s*u,g=c*l,x=c*f,y=c*u,E=i.x,S=i.y,A=i.z,C=o.x,T=o.y,I=o.z;return e.m00=(1-(d+v))*E,e.m01=(m+y)*E,e.m02=(h-x)*E,e.m03=0,e.m04=(m-y)*S,e.m05=(1-(_+v))*S,e.m06=(p+g)*S,e.m07=0,e.m08=(h+x)*A,e.m09=(p-g)*A,e.m10=(1-(_+d))*A,e.m11=0,e.m12=n.x+C-(e.m00*C+e.m04*T+e.m08*I),e.m13=n.y+T-(e.m01*C+e.m05*T+e.m09*I),e.m14=n.z+I-(e.m02*C+e.m06*T+e.m10*I),e.m15=1,e},t.fromQuat=function(e,t){var n=t.x,i=t.y,o=t.z,a=t.w,r=n+n,s=i+i,c=o+o,l=n*r,f=i*r,u=i*s,_=o*r,m=o*s,h=o*c,d=a*r,p=a*s,v=a*c;return e.m00=1-u-h,e.m01=f+v,e.m02=_-p,e.m03=0,e.m04=f-v,e.m05=1-l-h,e.m06=m+d,e.m07=0,e.m08=_+p,e.m09=m-d,e.m10=1-l-u,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.frustum=function(e,t,n,i,o,a,r){var s=1/(n-t),c=1/(o-i),l=1/(a-r);return e.m00=2*a*s,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=2*a*c,e.m06=0,e.m07=0,e.m08=(n+t)*s,e.m09=(o+i)*c,e.m10=(r+a)*l,e.m11=-1,e.m12=0,e.m13=0,e.m14=r*a*2*l,e.m15=0,e},t.perspective=function(e,t,n,i,o,a,r,s,c){void 0===a&&(a=!0),void 0===r&&(r=-1),void 0===s&&(s=1),void 0===c&&(c=0);var l=1/Math.tan(t/2),f=1/(i-o),u=a?l/n:l,_=(a?l:l*n)*s,m=Vn[c];return e.m00=u*m[0],e.m01=u*m[1],e.m02=0,e.m03=0,e.m04=_*m[2],e.m05=_*m[3],e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=(o-r*i)*f,e.m11=-1,e.m12=0,e.m13=0,e.m14=o*i*f*(1-r),e.m15=0,e},t.ortho=function(e,t,n,i,o,a,r,s,c,l){void 0===s&&(s=-1),void 0===c&&(c=1),void 0===l&&(l=0);var f=1/(t-n),u=1/(i-o)*c,_=1/(a-r),m=-2*f,h=-2*u,d=(t+n)*f,p=(o+i)*u,v=Vn[l];return e.m00=m*v[0],e.m01=m*v[1],e.m02=0,e.m03=0,e.m04=h*v[2],e.m05=h*v[3],e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=_*(1-s),e.m11=0,e.m12=d*v[0]+p*v[2],e.m13=d*v[1]+p*v[3],e.m14=(a-s*r)*_,e.m15=1,e},t.lookAt=function(e,t,n,i){var o=t.x,a=t.y,r=t.z,s=i.x,c=i.y,l=i.z,f=o-n.x,u=a-n.y,_=r-n.z,m=1/Math.sqrt(f*f+u*u+_*_),h=c*(_*=m)-l*(u*=m),d=l*(f*=m)-s*_,p=s*u-c*f,v=u*(p*=m=1/Math.sqrt(h*h+d*d+p*p))-_*(d*=m),g=_*(h*=m)-f*p,x=f*d-u*h;return e.m00=h,e.m01=v,e.m02=f,e.m03=0,e.m04=d,e.m05=g,e.m06=u,e.m07=0,e.m08=p,e.m09=x,e.m10=_,e.m11=0,e.m12=-(h*o+d*a+p*r),e.m13=-(v*o+g*a+x*r),e.m14=-(f*o+u*a+_*r),e.m15=1,e},t.inverseTranspose=function(e,t){var n=t.m00,i=t.m01,o=t.m02,a=t.m03,r=t.m04,s=t.m05,c=t.m06,l=t.m07,f=t.m08,u=t.m09,_=t.m10,m=t.m11,h=t.m12,d=t.m13,p=t.m14,v=t.m15,g=n*s-i*r,x=n*c-o*r,y=n*l-a*r,E=i*c-o*s,S=i*l-a*s,A=o*l-a*c,C=f*d-u*h,T=f*p-_*h,I=f*v-m*h,P=u*p-_*d,w=u*v-m*d,R=_*v-m*p,b=g*R-x*w+y*P+E*I-S*T+A*C;return b?(b=1/b,e.m00=(s*R-c*w+l*P)*b,e.m01=(c*I-r*R-l*T)*b,e.m02=(r*w-s*I+l*C)*b,e.m03=0,e.m04=(o*w-i*R-a*P)*b,e.m05=(n*R-o*I+a*T)*b,e.m06=(i*I-n*w-a*C)*b,e.m07=0,e.m08=(d*A-p*S+v*E)*b,e.m09=(p*y-h*A-v*x)*b,e.m10=(h*S-d*y+v*g)*b,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e):null},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.m00,e[n+1]=t.m01,e[n+2]=t.m02,e[n+3]=t.m03,e[n+4]=t.m04,e[n+5]=t.m05,e[n+6]=t.m06,e[n+7]=t.m07,e[n+8]=t.m08,e[n+9]=t.m09,e[n+10]=t.m10,e[n+11]=t.m11,e[n+12]=t.m12,e[n+13]=t.m13,e[n+14]=t.m14,e[n+15]=t.m15,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.m00=t[n+0],e.m01=t[n+1],e.m02=t[n+2],e.m03=t[n+3],e.m04=t[n+4],e.m05=t[n+5],e.m06=t[n+6],e.m07=t[n+7],e.m08=t[n+8],e.m09=t[n+9],e.m10=t[n+10],e.m11=t[n+11],e.m12=t[n+12],e.m13=t[n+13],e.m14=t[n+14],e.m15=t[n+15],e},t.add=function(e,t,n){return e.m00=t.m00+n.m00,e.m01=t.m01+n.m01,e.m02=t.m02+n.m02,e.m03=t.m03+n.m03,e.m04=t.m04+n.m04,e.m05=t.m05+n.m05,e.m06=t.m06+n.m06,e.m07=t.m07+n.m07,e.m08=t.m08+n.m08,e.m09=t.m09+n.m09,e.m10=t.m10+n.m10,e.m11=t.m11+n.m11,e.m12=t.m12+n.m12,e.m13=t.m13+n.m13,e.m14=t.m14+n.m14,e.m15=t.m15+n.m15,e},t.subtract=function(e,t,n){return e.m00=t.m00-n.m00,e.m01=t.m01-n.m01,e.m02=t.m02-n.m02,e.m03=t.m03-n.m03,e.m04=t.m04-n.m04,e.m05=t.m05-n.m05,e.m06=t.m06-n.m06,e.m07=t.m07-n.m07,e.m08=t.m08-n.m08,e.m09=t.m09-n.m09,e.m10=t.m10-n.m10,e.m11=t.m11-n.m11,e.m12=t.m12-n.m12,e.m13=t.m13-n.m13,e.m14=t.m14-n.m14,e.m15=t.m15-n.m15,e},t.multiplyScalar=function(e,t,n){return e.m00=t.m00*n,e.m01=t.m01*n,e.m02=t.m02*n,e.m03=t.m03*n,e.m04=t.m04*n,e.m05=t.m05*n,e.m06=t.m06*n,e.m07=t.m07*n,e.m08=t.m08*n,e.m09=t.m09*n,e.m10=t.m10*n,e.m11=t.m11*n,e.m12=t.m12*n,e.m13=t.m13*n,e.m14=t.m14*n,e.m15=t.m15*n,e},t.multiplyScalarAndAdd=function(e,t,n,i){return e.m00=t.m00+n.m00*i,e.m01=t.m01+n.m01*i,e.m02=t.m02+n.m02*i,e.m03=t.m03+n.m03*i,e.m04=t.m04+n.m04*i,e.m05=t.m05+n.m05*i,e.m06=t.m06+n.m06*i,e.m07=t.m07+n.m07*i,e.m08=t.m08+n.m08*i,e.m09=t.m09+n.m09*i,e.m10=t.m10+n.m10*i,e.m11=t.m11+n.m11*i,e.m12=t.m12+n.m12*i,e.m13=t.m13+n.m13*i,e.m14=t.m14+n.m14*i,e.m15=t.m15+n.m15*i,e},t.strictEquals=function(e,t){return e.m00===t.m00&&e.m01===t.m01&&e.m02===t.m02&&e.m03===t.m03&&e.m04===t.m04&&e.m05===t.m05&&e.m06===t.m06&&e.m07===t.m07&&e.m08===t.m08&&e.m09===t.m09&&e.m10===t.m10&&e.m11===t.m11&&e.m12===t.m12&&e.m13===t.m13&&e.m14===t.m14&&e.m15===t.m15},t.equals=function(e,t,n){return void 0===n&&(n=dn),Math.abs(e.m00-t.m00)<=n*Math.max(1,Math.abs(e.m00),Math.abs(t.m00))&&Math.abs(e.m01-t.m01)<=n*Math.max(1,Math.abs(e.m01),Math.abs(t.m01))&&Math.abs(e.m02-t.m02)<=n*Math.max(1,Math.abs(e.m02),Math.abs(t.m02))&&Math.abs(e.m03-t.m03)<=n*Math.max(1,Math.abs(e.m03),Math.abs(t.m03))&&Math.abs(e.m04-t.m04)<=n*Math.max(1,Math.abs(e.m04),Math.abs(t.m04))&&Math.abs(e.m05-t.m05)<=n*Math.max(1,Math.abs(e.m05),Math.abs(t.m05))&&Math.abs(e.m06-t.m06)<=n*Math.max(1,Math.abs(e.m06),Math.abs(t.m06))&&Math.abs(e.m07-t.m07)<=n*Math.max(1,Math.abs(e.m07),Math.abs(t.m07))&&Math.abs(e.m08-t.m08)<=n*Math.max(1,Math.abs(e.m08),Math.abs(t.m08))&&Math.abs(e.m09-t.m09)<=n*Math.max(1,Math.abs(e.m09),Math.abs(t.m09))&&Math.abs(e.m10-t.m10)<=n*Math.max(1,Math.abs(e.m10),Math.abs(t.m10))&&Math.abs(e.m11-t.m11)<=n*Math.max(1,Math.abs(e.m11),Math.abs(t.m11))&&Math.abs(e.m12-t.m12)<=n*Math.max(1,Math.abs(e.m12),Math.abs(t.m12))&&Math.abs(e.m13-t.m13)<=n*Math.max(1,Math.abs(e.m13),Math.abs(t.m13))&&Math.abs(e.m14-t.m14)<=n*Math.max(1,Math.abs(e.m14),Math.abs(t.m14))&&Math.abs(e.m15-t.m15)<=n*Math.max(1,Math.abs(e.m15),Math.abs(t.m15))};var n=t.prototype;return n.clone=function(){return new t(this.m00,this.m01,this.m02,this.m03,this.m04,this.m05,this.m06,this.m07,this.m08,this.m09,this.m10,this.m11,this.m12,this.m13,this.m14,this.m15)},n.set=function(e,t,n,i,o,a,r,s,c,l,f,u,_,m,h,d){return void 0===e&&(e=1),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=1),void 0===r&&(r=0),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=0),void 0===f&&(f=1),void 0===u&&(u=0),void 0===_&&(_=0),void 0===m&&(m=0),void 0===h&&(h=0),void 0===d&&(d=1),"object"==typeof e?(this.m01=e.m01,this.m02=e.m02,this.m03=e.m03,this.m04=e.m04,this.m05=e.m05,this.m06=e.m06,this.m07=e.m07,this.m08=e.m08,this.m09=e.m09,this.m10=e.m10,this.m11=e.m11,this.m12=e.m12,this.m13=e.m13,this.m14=e.m14,this.m15=e.m15,this.m00=e.m00):(this.m01=t,this.m02=n,this.m03=i,this.m04=o,this.m05=a,this.m06=r,this.m07=s,this.m08=c,this.m09=l,this.m10=f,this.m11=u,this.m12=_,this.m13=m,this.m14=h,this.m15=d,this.m00=e),this},n.equals=function(e,t){return void 0===t&&(t=dn),Math.abs(this.m00-e.m00)<=t*Math.max(1,Math.abs(this.m00),Math.abs(e.m00))&&Math.abs(this.m01-e.m01)<=t*Math.max(1,Math.abs(this.m01),Math.abs(e.m01))&&Math.abs(this.m02-e.m02)<=t*Math.max(1,Math.abs(this.m02),Math.abs(e.m02))&&Math.abs(this.m03-e.m03)<=t*Math.max(1,Math.abs(this.m03),Math.abs(e.m03))&&Math.abs(this.m04-e.m04)<=t*Math.max(1,Math.abs(this.m04),Math.abs(e.m04))&&Math.abs(this.m05-e.m05)<=t*Math.max(1,Math.abs(this.m05),Math.abs(e.m05))&&Math.abs(this.m06-e.m06)<=t*Math.max(1,Math.abs(this.m06),Math.abs(e.m06))&&Math.abs(this.m07-e.m07)<=t*Math.max(1,Math.abs(this.m07),Math.abs(e.m07))&&Math.abs(this.m08-e.m08)<=t*Math.max(1,Math.abs(this.m08),Math.abs(e.m08))&&Math.abs(this.m09-e.m09)<=t*Math.max(1,Math.abs(this.m09),Math.abs(e.m09))&&Math.abs(this.m10-e.m10)<=t*Math.max(1,Math.abs(this.m10),Math.abs(e.m10))&&Math.abs(this.m11-e.m11)<=t*Math.max(1,Math.abs(this.m11),Math.abs(e.m11))&&Math.abs(this.m12-e.m12)<=t*Math.max(1,Math.abs(this.m12),Math.abs(e.m12))&&Math.abs(this.m13-e.m13)<=t*Math.max(1,Math.abs(this.m13),Math.abs(e.m13))&&Math.abs(this.m14-e.m14)<=t*Math.max(1,Math.abs(this.m14),Math.abs(e.m14))&&Math.abs(this.m15-e.m15)<=t*Math.max(1,Math.abs(this.m15),Math.abs(e.m15))},n.strictEquals=function(e){return this.m00===e.m00&&this.m01===e.m01&&this.m02===e.m02&&this.m03===e.m03&&this.m04===e.m04&&this.m05===e.m05&&this.m06===e.m06&&this.m07===e.m07&&this.m08===e.m08&&this.m09===e.m09&&this.m10===e.m10&&this.m11===e.m11&&this.m12===e.m12&&this.m13===e.m13&&this.m14===e.m14&&this.m15===e.m15},n.toString=function(){return"[\n"+this.m00+", "+this.m01+", "+this.m02+", "+this.m03+",\n"+this.m04+", "+this.m05+", "+this.m06+", "+this.m07+",\n"+this.m08+", "+this.m09+", "+this.m10+", "+this.m11+",\n"+this.m12+", "+this.m13+", "+this.m14+", "+this.m15+"\n]"},n.identity=function(){return this.m00=1,this.m01=0,this.m02=0,this.m03=0,this.m04=0,this.m05=1,this.m06=0,this.m07=0,this.m08=0,this.m09=0,this.m10=1,this.m11=0,this.m12=0,this.m13=0,this.m14=0,this.m15=1,this},n.zero=function(){return this.m00=0,this.m01=0,this.m02=0,this.m03=0,this.m04=0,this.m05=0,this.m06=0,this.m07=0,this.m08=0,this.m09=0,this.m10=0,this.m11=0,this.m12=0,this.m13=0,this.m14=0,this.m15=0,this},n.transpose=function(){var e=this.m01,t=this.m02,n=this.m03,i=this.m06,o=this.m07,a=this.m11;return this.m01=this.m04,this.m02=this.m08,this.m03=this.m12,this.m04=e,this.m06=this.m09,this.m07=this.m13,this.m08=t,this.m09=i,this.m11=this.m14,this.m12=n,this.m13=o,this.m14=a,this},n.invert=function(){var e=this.m00,t=this.m01,n=this.m02,i=this.m03,o=this.m04,a=this.m05,r=this.m06,s=this.m07,c=this.m08,l=this.m09,f=this.m10,u=this.m11,_=this.m12,m=this.m13,h=this.m14,d=this.m15,p=e*a-t*o,v=e*r-n*o,g=e*s-i*o,x=t*r-n*a,y=t*s-i*a,E=n*s-i*r,S=c*m-l*_,A=c*h-f*_,C=c*d-u*_,T=l*h-f*m,I=l*d-u*m,P=f*d-u*h,w=p*P-v*I+g*T+x*C-y*A+E*S;return 0===w?(this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this):(w=1/w,this.m00=(a*P-r*I+s*T)*w,this.m01=(n*I-t*P-i*T)*w,this.m02=(m*E-h*y+d*x)*w,this.m03=(f*y-l*E-u*x)*w,this.m04=(r*C-o*P-s*A)*w,this.m05=(e*P-n*C+i*A)*w,this.m06=(h*g-_*E-d*v)*w,this.m07=(c*E-f*g+u*v)*w,this.m08=(o*I-a*C+s*S)*w,this.m09=(t*C-e*I-i*S)*w,this.m10=(_*y-m*g+d*p)*w,this.m11=(l*g-c*y-u*p)*w,this.m12=(a*A-o*T-r*S)*w,this.m13=(e*T-t*A+n*S)*w,this.m14=(m*v-_*x-h*p)*w,this.m15=(c*x-l*v+f*p)*w,this)},n.determinant=function(){var e=this.m00,t=this.m01,n=this.m02,i=this.m03,o=this.m04,a=this.m05,r=this.m06,s=this.m07,c=this.m08,l=this.m09,f=this.m10,u=this.m11,_=this.m12,m=this.m13,h=this.m14,d=this.m15;return(e*a-t*o)*(f*d-u*h)-(e*r-n*o)*(l*d-u*m)+(e*s-i*o)*(l*h-f*m)+(t*r-n*a)*(c*d-u*_)-(t*s-i*a)*(c*h-f*_)+(n*s-i*r)*(c*m-l*_)},n.add=function(e){return this.m00+=e.m00,this.m01+=e.m01,this.m02+=e.m02,this.m03+=e.m03,this.m04+=e.m04,this.m05+=e.m05,this.m06+=e.m06,this.m07+=e.m07,this.m08+=e.m08,this.m09+=e.m09,this.m10+=e.m10,this.m11+=e.m11,this.m12+=e.m12,this.m13+=e.m13,this.m14+=e.m14,this.m15+=e.m15,this},n.subtract=function(e){return this.m00-=e.m00,this.m01-=e.m01,this.m02-=e.m02,this.m03-=e.m03,this.m04-=e.m04,this.m05-=e.m05,this.m06-=e.m06,this.m07-=e.m07,this.m08-=e.m08,this.m09-=e.m09,this.m10-=e.m10,this.m11-=e.m11,this.m12-=e.m12,this.m13-=e.m13,this.m14-=e.m14,this.m15-=e.m15,this},n.multiply=function(e){var t=this.m00,n=this.m01,i=this.m02,o=this.m03,a=this.m04,r=this.m05,s=this.m06,c=this.m07,l=this.m08,f=this.m09,u=this.m10,_=this.m11,m=this.m12,h=this.m13,d=this.m14,p=this.m15,v=e.m00,g=e.m01,x=e.m02,y=e.m03;return this.m00=v*t+g*a+x*l+y*m,this.m01=v*n+g*r+x*f+y*h,this.m02=v*i+g*s+x*u+y*d,this.m03=v*o+g*c+x*_+y*p,v=e.m04,g=e.m05,x=e.m06,y=e.m07,this.m04=v*t+g*a+x*l+y*m,this.m05=v*n+g*r+x*f+y*h,this.m06=v*i+g*s+x*u+y*d,this.m07=v*o+g*c+x*_+y*p,v=e.m08,g=e.m09,x=e.m10,y=e.m11,this.m08=v*t+g*a+x*l+y*m,this.m09=v*n+g*r+x*f+y*h,this.m10=v*i+g*s+x*u+y*d,this.m11=v*o+g*c+x*_+y*p,v=e.m12,g=e.m13,x=e.m14,y=e.m15,this.m12=v*t+g*a+x*l+y*m,this.m13=v*n+g*r+x*f+y*h,this.m14=v*i+g*s+x*u+y*d,this.m15=v*o+g*c+x*_+y*p,this},n.multiplyScalar=function(e){return this.m00*=e,this.m01*=e,this.m02*=e,this.m03*=e,this.m04*=e,this.m05*=e,this.m06*=e,this.m07*=e,this.m08*=e,this.m09*=e,this.m10*=e,this.m11*=e,this.m12*=e,this.m13*=e,this.m14*=e,this.m15*=e,this},n.translate=function(e){return console.warn("function changed"),this.m12+=e.x,this.m13+=e.y,this.m14+=e.z,this},n.scale=function(e){var t=e.x,n=e.y,i=e.z;return this.m00*=t,this.m01*=t,this.m02*=t,this.m03*=t,this.m04*=n,this.m05*=n,this.m06*=n,this.m07*=n,this.m08*=i,this.m09*=i,this.m10*=i,this.m11*=i,this},n.rotate=function(e,t){var n=t.x,i=t.y,o=t.z,a=Math.sqrt(n*n+i*i+o*o);if(Math.abs(a)<dn)return null;n*=a=1/a,i*=a,o*=a;var r=Math.sin(e),s=Math.cos(e),c=1-s,l=this.m00,f=this.m01,u=this.m02,_=this.m03,m=this.m04,h=this.m05,d=this.m06,p=this.m07,v=this.m08,g=this.m09,x=this.m10,y=this.m11,E=n*n*c+s,S=i*n*c+o*r,A=o*n*c-i*r,C=n*i*c-o*r,T=i*i*c+s,I=o*i*c+n*r,P=n*o*c+i*r,w=i*o*c-n*r,R=o*o*c+s;return this.m00=l*E+m*S+v*A,this.m01=f*E+h*S+g*A,this.m02=u*E+d*S+x*A,this.m03=_*E+p*S+y*A,this.m04=l*C+m*T+v*I,this.m05=f*C+h*T+g*I,this.m06=u*C+d*T+x*I,this.m07=_*C+p*T+y*I,this.m08=l*P+m*w+v*R,this.m09=f*P+h*w+g*R,this.m10=u*P+d*w+x*R,this.m11=_*P+p*w+y*R,this},n.getTranslation=function(e){return e.x=this.m12,e.y=this.m13,e.z=this.m14,e},n.getScale=function(e){var t=qn.m00=this.m00,n=qn.m01=this.m01,i=qn.m02=this.m02,o=qn.m03=this.m04,a=qn.m04=this.m05,r=qn.m05=this.m06,s=qn.m06=this.m08,c=qn.m07=this.m09,l=qn.m08=this.m10;return e.x=Math.sqrt(t*t+n*n+i*i),e.y=Math.sqrt(o*o+a*a+r*r),e.z=Math.sqrt(s*s+c*c+l*l),Dn.determinant(qn)<0&&(e.x*=-1),e},n.getRotation=function(e){var t=this.m00+this.m05+this.m10,n=0;return t>0?(n=2*Math.sqrt(t+1),e.w=.25*n,e.x=(this.m06-this.m09)/n,e.y=(this.m08-this.m02)/n,e.z=(this.m01-this.m04)/n):this.m00>this.m05&&this.m00>this.m10?(n=2*Math.sqrt(1+this.m00-this.m05-this.m10),e.w=(this.m06-this.m09)/n,e.x=.25*n,e.y=(this.m01+this.m04)/n,e.z=(this.m08+this.m02)/n):this.m05>this.m10?(n=2*Math.sqrt(1+this.m05-this.m00-this.m10),e.w=(this.m08-this.m02)/n,e.x=(this.m01+this.m04)/n,e.y=.25*n,e.z=(this.m06+this.m09)/n):(n=2*Math.sqrt(1+this.m10-this.m00-this.m05),e.w=(this.m01-this.m04)/n,e.x=(this.m08+this.m02)/n,e.y=(this.m06+this.m09)/n,e.z=.25*n),e},n.fromRTS=function(e,t,n){var i=e.x,o=e.y,a=e.z,r=e.w,s=i+i,c=o+o,l=a+a,f=i*s,u=i*c,_=i*l,m=o*c,h=o*l,d=a*l,p=r*s,v=r*c,g=r*l,x=n.x,y=n.y,E=n.z;return this.m00=(1-(m+d))*x,this.m01=(u+g)*x,this.m02=(_-v)*x,this.m03=0,this.m04=(u-g)*y,this.m05=(1-(f+d))*y,this.m06=(h+p)*y,this.m07=0,this.m08=(_+v)*E,this.m09=(h-p)*E,this.m10=(1-(f+m))*E,this.m11=0,this.m12=t.x,this.m13=t.y,this.m14=t.z,this.m15=1,this},n.fromQuat=function(e){var t=e.x,n=e.y,i=e.z,o=e.w,a=t+t,r=n+n,s=i+i,c=t*a,l=n*a,f=n*r,u=i*a,_=i*r,m=i*s,h=o*a,d=o*r,p=o*s;return this.m00=1-f-m,this.m01=l+p,this.m02=u-d,this.m03=0,this.m04=l-p,this.m05=1-c-m,this.m06=_+h,this.m07=0,this.m08=u+d,this.m09=_-h,this.m10=1-c-f,this.m11=0,this.m12=0,this.m13=0,this.m14=0,this.m15=1,this},t}(yt));jn.IDENTITY=Object.freeze(new jn);var Wn=new Rn,qn=new Dn;function Yn(e,t,n,i,o,a,r,s,c,l,f,u,_,m,h,d){return new jn(e,t,n,i,o,a,r,s,c,l,f,u,_,m,h,d)}fn.fastDefine("cc.Mat4",jn,{m00:1,m01:0,m02:0,m03:0,m04:0,m05:1,m06:0,m07:0,m08:0,m09:0,m10:1,m11:0,m12:0,m13:0,m14:0,m15:1}),s.Mat4=jn,s.mat4=Yn;var Xn=e("cW",function(e){function t(t,n){var i;return i=e.call(this)||this,t&&"object"==typeof t?(i.x=t.x,i.y=t.y):(i.x=t||0,i.y=n||0),i}ue(t,e),t.clone=function(e){return new t(e.x,e.y)},t.copy=function(e,t){return e.x=t.x,e.y=t.y,e},t.set=function(e,t,n){return e.x=t,e.y=n,e},t.add=function(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e},t.subtract=function(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e},t.multiply=function(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e},t.divide=function(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e},t.ceil=function(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e},t.floor=function(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e},t.min=function(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e},t.max=function(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e},t.round=function(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e},t.multiplyScalar=function(e,t,n){return e.x=t.x*n,e.y=t.y*n,e},t.scaleAndAdd=function(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e},t.distance=function(e,t){var n=t.x-e.x,i=t.y-e.y;return Math.sqrt(n*n+i*i)},t.squaredDistance=function(e,t){var n=t.x-e.x,i=t.y-e.y;return n*n+i*i},t.len=function(e){var t=e.x,n=e.y;return Math.sqrt(t*t+n*n)},t.lengthSqr=function(e){var t=e.x,n=e.y;return t*t+n*n},t.negate=function(e,t){return e.x=-t.x,e.y=-t.y,e},t.inverse=function(e,t){return e.x=1/t.x,e.y=1/t.y,e},t.inverseSafe=function(e,t){var n=t.x,i=t.y;return Math.abs(n)<dn?e.x=0:e.x=1/n,Math.abs(i)<dn?e.y=0:e.y=1/i,e},t.normalize=function(e,t){var n=t.x,i=t.y,o=n*n+i*i;return o>0&&(o=1/Math.sqrt(o),e.x=n*o,e.y=i*o),e},t.dot=function(e,t){return e.x*t.x+e.y*t.y},t.cross=function(e,t,n){return e.x=e.y=0,e.z=t.x*n.y-t.y*n.x,e},t.lerp=function(e,t,n,i){var o=t.x,a=t.y;return e.x=o+i*(n.x-o),e.y=a+i*(n.y-a),e},t.random=function(e,t){t=t||1;var n=2*gn()*Math.PI;return e.x=Math.cos(n)*t,e.y=Math.sin(n)*t,e},t.transformMat3=function(e,t,n){var i=t.x,o=t.y;return e.x=n.m00*i+n.m03*o+n.m06,e.y=n.m01*i+n.m04*o+n.m07,e},t.transformMat4=function(e,t,n){var i=t.x,o=t.y;return e.x=n.m00*i+n.m04*o+n.m12,e.y=n.m01*i+n.m05*o+n.m13,e},t.str=function(e){return"Vec2("+e.x+", "+e.y+")"},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.x,e[n+1]=t.y,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.x=t[n+0],e.y=t[n+1],e},t.strictEquals=function(e,t){return e.x===t.x&&e.y===t.y},t.equals=function(e,t,n){return void 0===n&&(n=dn),Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))},t.angle=function(e,n){t.normalize(Kn,e),t.normalize(Jn,n);var i=t.dot(Kn,Jn);return i>1?0:i<-1?Math.PI:Math.acos(i)};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y)},n.set=function(e,t){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y):(this.x=e||0,this.y=t||0),this},n.equals=function(e,t){return void 0===t&&(t=dn),Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))},n.equals2f=function(e,t,n){return void 0===n&&(n=dn),Math.abs(this.x-e)<=n*Math.max(1,Math.abs(this.x),Math.abs(e))&&Math.abs(this.y-t)<=n*Math.max(1,Math.abs(this.y),Math.abs(t))},n.strictEquals=function(e){return e&&this.x===e.x&&this.y===e.y},n.strictEquals2f=function(e,t){return this.x===e&&this.y===t},n.toString=function(){return"("+this.x.toFixed(2)+", "+this.y.toFixed(2)+")"},n.lerp=function(e,t){var n=this.x,i=this.y;return this.x=n+t*(e.x-n),this.y=i+t*(e.y-i),this},n.clampf=function(e,t){return this.x=pn(this.x,e.x,t.x),this.y=pn(this.y,e.y,t.y),this},n.add=function(e){return this.x+=e.x,this.y+=e.y,this},n.add2f=function(e,t){return this.x+=e,this.y+=t,this},n.subtract=function(e){return this.x-=e.x,this.y-=e.y,this},n.subtract2f=function(e,t){return this.x-=e,this.y-=t,this},n.multiplyScalar=function(e){return"object"==typeof e&&console.warn("should use Vec2.multiply for vector * vector operation"),this.x*=e,this.y*=e,this},n.multiply=function(e){return"object"!=typeof e&&console.warn("should use Vec2.scale for vector * scalar operation"),this.x*=e.x,this.y*=e.y,this},n.multiply2f=function(e,t){return this.x*=e,this.y*=t,this},n.divide=function(e){return this.x/=e.x,this.y/=e.y,this},n.divide2f=function(e,t){return this.x/=e,this.y/=t,this},n.negative=function(){return this.x=-this.x,this.y=-this.y,this},n.dot=function(e){return this.x*e.x+this.y*e.y},n.cross=function(e){return this.x*e.y-this.y*e.x},n.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)},n.lengthSqr=function(){return this.x*this.x+this.y*this.y},n.normalize=function(){var e=this.x,t=this.y,n=e*e+t*t;return n>0&&(n=1/Math.sqrt(n),this.x*=n,this.y*=n),this},n.angle=function(e){var t=this.lengthSqr(),n=e.lengthSqr();if(0===t||0===n)return console.warn("Can't get angle between zero vector"),0;var i=this.dot(e)/Math.sqrt(t*n);return i=pn(i,-1,1),Math.acos(i)},n.signAngle=function(e){var t=this.angle(e);return this.cross(e)<0?-t:t},n.rotate=function(e){var t=this.x,n=this.y,i=Math.sin(e),o=Math.cos(e);return this.x=o*t-i*n,this.y=i*t+o*n,this},n.project=function(e){var t=this.dot(e)/e.dot(e);return this.x=e.x*t,this.y=e.y*t,this},n.transformMat4=function(e){var t=this.x,n=this.y;return this.x=e.m00*t+e.m04*n+e.m12,this.y=e.m01*t+e.m05*n+e.m13,this},t}(yt));Xn.ZERO=Object.freeze(new Xn(0,0)),Xn.ONE=Object.freeze(new Xn(1,1)),Xn.NEG_ONE=Object.freeze(new Xn(-1,-1)),Xn.UNIT_X=Object.freeze(new Xn(1,0)),Xn.UNIT_Y=Object.freeze(new Xn(0,1));var Kn=new Xn,Jn=new Xn;function Qn(e,t){return new Xn(e,t)}fn.fastDefine("cc.Vec2",Xn,{x:0,y:0}),s.Vec2=Xn,s.v2=Qn;var Zn=e("c_",function(e){function t(t,n,i,o){var a;return a=e.call(this)||this,t&&"object"==typeof t?(a.x=t.x,a.y=t.y,a.z=t.z,a.w=t.w):(a.x=t||0,a.y=n||0,a.z=i||0,a.w=o||0),a}ue(t,e),t.clone=function(e){return new t(e.x,e.y,e.z,e.w)},t.copy=function(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e},t.set=function(e,t,n,i,o){return e.x=t,e.y=n,e.z=i,e.w=o,e},t.add=function(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e.z=t.z+n.z,e.w=t.w+n.w,e},t.subtract=function(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e.z=t.z-n.z,e.w=t.w-n.w,e},t.multiply=function(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e.z=t.z*n.z,e.w=t.w*n.w,e},t.divide=function(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e.z=t.z/n.z,e.w=t.w/n.w,e},t.ceil=function(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e.z=Math.ceil(t.z),e.w=Math.ceil(t.w),e},t.floor=function(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e.z=Math.floor(t.z),e.w=Math.floor(t.w),e},t.min=function(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e.z=Math.min(t.z,n.z),e.w=Math.min(t.w,n.w),e},t.max=function(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e.z=Math.max(t.z,n.z),e.w=Math.max(t.w,n.w),e},t.round=function(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e.z=Math.round(t.z),e.w=Math.round(t.w),e},t.multiplyScalar=function(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n,e},t.scaleAndAdd=function(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e.w=t.w+n.w*i,e},t.distance=function(e,t){var n=t.x-e.x,i=t.y-e.y,o=t.z-e.z,a=t.w-e.w;return Math.sqrt(n*n+i*i+o*o+a*a)},t.squaredDistance=function(e,t){var n=t.x-e.x,i=t.y-e.y,o=t.z-e.z,a=t.w-e.w;return n*n+i*i+o*o+a*a},t.len=function(e){var t=e.x,n=e.y,i=e.z,o=e.w;return Math.sqrt(t*t+n*n+i*i+o*o)},t.lengthSqr=function(e){var t=e.x,n=e.y,i=e.z,o=e.w;return t*t+n*n+i*i+o*o},t.negate=function(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e.w=-t.w,e},t.inverse=function(e,t){return e.x=1/t.x,e.y=1/t.y,e.z=1/t.z,e.w=1/t.w,e},t.inverseSafe=function(e,t){var n=t.x,i=t.y,o=t.z,a=t.w;return Math.abs(n)<dn?e.x=0:e.x=1/n,Math.abs(i)<dn?e.y=0:e.y=1/i,Math.abs(o)<dn?e.z=0:e.z=1/o,Math.abs(a)<dn?e.w=0:e.w=1/a,e},t.normalize=function(e,t){var n=t.x,i=t.y,o=t.z,a=t.w,r=n*n+i*i+o*o+a*a;return r>0&&(r=1/Math.sqrt(r),e.x=n*r,e.y=i*r,e.z=o*r,e.w=a*r),e},t.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w},t.lerp=function(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e.w=t.w+i*(n.w-t.w),e},t.random=function(e,t){t=t||1;var n=2*gn()*Math.PI,i=2*gn()-1,o=Math.sqrt(1-i*i);return e.x=o*Math.cos(n)*t,e.y=o*Math.sin(n)*t,e.z=i*t,e.w=0,e},t.transformMat4=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=t.w;return e.x=n.m00*i+n.m04*o+n.m08*a+n.m12*r,e.y=n.m01*i+n.m05*o+n.m09*a+n.m13*r,e.z=n.m02*i+n.m06*o+n.m10*a+n.m14*r,e.w=n.m03*i+n.m07*o+n.m11*a+n.m15*r,e},t.transformAffine=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=t.w;return e.x=n.m00*i+n.m01*o+n.m02*a+n.m03*r,e.y=n.m04*i+n.m05*o+n.m06*a+n.m07*r,e.x=n.m08*i+n.m09*o+n.m10*a+n.m11*r,e.w=t.w,e},t.transformQuat=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=n.x,s=n.y,c=n.z,l=n.w,f=l*i+s*a-c*o,u=l*o+c*i-r*a,_=l*a+r*o-s*i,m=-r*i-s*o-c*a;return e.x=f*l+m*-r+u*-c-_*-s,e.y=u*l+m*-s+_*-r-f*-c,e.z=_*l+m*-c+f*-s-u*-r,e.w=t.w,e},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e[n+3]=t.w,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e.w=t[n+3],e},t.strictEquals=function(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z&&e.w===t.w},t.equals=function(e,t,n){return void 0===n&&(n=dn),Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))&&Math.abs(e.z-t.z)<=n*Math.max(1,Math.abs(e.z),Math.abs(t.z))&&Math.abs(e.w-t.w)<=n*Math.max(1,Math.abs(e.w),Math.abs(t.w))};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y,this.z,this.w)},n.set=function(e,t,n,i){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w):(this.x=e||0,this.y=t||0,this.z=n||0,this.w=i||0),this},n.equals=function(e,t){return void 0===t&&(t=dn),Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))&&Math.abs(this.z-e.z)<=t*Math.max(1,Math.abs(this.z),Math.abs(e.z))&&Math.abs(this.w-e.w)<=t*Math.max(1,Math.abs(this.w),Math.abs(e.w))},n.equals4f=function(e,t,n,i,o){return void 0===o&&(o=dn),Math.abs(this.x-e)<=o*Math.max(1,Math.abs(this.x),Math.abs(e))&&Math.abs(this.y-t)<=o*Math.max(1,Math.abs(this.y),Math.abs(t))&&Math.abs(this.z-n)<=o*Math.max(1,Math.abs(this.z),Math.abs(n))&&Math.abs(this.w-i)<=o*Math.max(1,Math.abs(this.w),Math.abs(i))},n.strictEquals=function(e){return this.x===e.x&&this.y===e.y&&this.z===e.z&&this.w===e.w},n.strictEquals4f=function(e,t,n,i){return this.x===e&&this.y===t&&this.z===n&&this.w===i},n.lerp=function(e,t){var n=this.x,i=this.y,o=this.z,a=this.w;return this.x=n+t*(e.x-n),this.y=i+t*(e.y-i),this.z=o+t*(e.z-o),this.w=a+t*(e.w-a),this},n.toString=function(){return"("+this.x.toFixed(2)+", "+this.y.toFixed(2)+", "+this.z.toFixed(2)+", "+this.w.toFixed(2)+")"},n.clampf=function(e,t){return this.x=pn(this.x,e.x,t.x),this.y=pn(this.y,e.y,t.y),this.z=pn(this.z,e.z,t.z),this.w=pn(this.w,e.w,t.w),this},n.add=function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this},n.add4f=function(e,t,n,i){return this.x+=e,this.y+=t,this.z+=n,this.w+=i,this},n.subtract=function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this},n.subtract4f=function(e,t,n,i){return this.x-=e,this.y-=t,this.z-=n,this.w-=i,this},n.multiplyScalar=function(e){return"object"==typeof e&&console.warn("should use Vec4.multiply for vector * vector operation"),this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},n.multiply=function(e){return"object"!=typeof e&&console.warn("should use Vec4.scale for vector * scalar operation"),this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this},n.multiply4f=function(e,t,n,i){return this.x*=e,this.y*=t,this.z*=n,this.w*=i,this},n.divide=function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this},n.divide4f=function(e,t,n,i){return this.x/=e,this.y/=t,this.z/=n,this.w/=i,this},n.negative=function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},n.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},n.cross=function(e){var t=this.x,n=this.y,i=this.z,o=e.x,a=e.y,r=e.z;return this.x=n*r-i*a,this.y=i*o-t*r,this.z=t*a-n*o,this},n.length=function(){var e=this.x,t=this.y,n=this.z,i=this.w;return Math.sqrt(e*e+t*t+n*n+i*i)},n.lengthSqr=function(){var e=this.x,t=this.y,n=this.z,i=this.w;return e*e+t*t+n*n+i*i},n.normalize=function(){var e=this.x,t=this.y,n=this.z,i=this.w,o=e*e+t*t+n*n+i*i;return o>0&&(o=1/Math.sqrt(o),this.x=e*o,this.y=t*o,this.z=n*o,this.w=i*o),this},n.transformMat4=function(e){var t=this.x,n=this.y,i=this.z,o=this.w;return this.x=e.m00*t+e.m04*n+e.m08*i+e.m12*o,this.y=e.m01*t+e.m05*n+e.m09*i+e.m13*o,this.z=e.m02*t+e.m06*n+e.m10*i+e.m14*o,this.w=e.m03*t+e.m07*n+e.m11*i+e.m15*o,this},t}(yt));function $n(e,t,n,i){return new Zn(e,t,n,i)}Zn.ZERO=Object.freeze(new Zn(0,0,0,0)),Zn.ONE=Object.freeze(new Zn(1,1,1,1)),Zn.NEG_ONE=Object.freeze(new Zn(-1,-1,-1,-1)),fn.fastDefine("cc.Vec4",Zn,{x:0,y:0,z:0,w:0}),s.Vec4=Zn,s.v4=$n,ee(Xn,"Vec2",[{name:"sub",newName:"subtract",target:Xn,targetName:"Vec2"},{name:"mul",newName:"multiply",target:Xn,targetName:"Vec2"},{name:"div",newName:"divide",target:Xn,targetName:"Vec2"},{name:"dist",newName:"distance",target:Xn,targetName:"Vec2"},{name:"sqrDist",newName:"squaredDistance",target:Xn,targetName:"Vec2"},{name:"mag",newName:"len",target:Xn,targetName:"Vec2"},{name:"sqrMag",newName:"lengthSqr",target:Xn,targetName:"Vec2"},{name:"scale",newName:"multiplyScalar",target:Xn,targetName:"Vec2"},{name:"exactEquals",newName:"strictEquals",target:Xn,targetName:"Vec2"}]),ee(Xn.prototype,"Vec2",[{name:"mag",newName:"length",target:Xn.prototype,targetName:"Vec2"},{name:"magSqr",newName:"lengthSqr",target:Xn.prototype,targetName:"Vec2"},{name:"scale",newName:"multiplyScalar",target:Xn.prototype,targetName:"Vec2"},{name:"exactEquals",newName:"strictEquals",target:Xn.prototype,targetName:"Vec2"}]),ee(Rn,"Vec3",[{name:"sub",newName:"subtract",target:Rn,targetName:"Vec3"},{name:"mul",newName:"multiply",target:Rn,targetName:"Vec3"},{name:"div",newName:"divide",target:Rn,targetName:"Vec3"},{name:"dist",newName:"distance",target:Rn,targetName:"Vec3"},{name:"sqrDist",newName:"squaredDistance",target:Rn,targetName:"Vec3"},{name:"mag",newName:"len",target:Rn,targetName:"Vec3"},{name:"sqrMag",newName:"lengthSqr",target:Rn,targetName:"Vec3"},{name:"scale",newName:"multiplyScalar",target:Rn,targetName:"Vec3"},{name:"exactEquals",newName:"strictEquals",target:Rn,targetName:"Vec3"}]),ee(Rn.prototype,"Vec3",[{name:"mag",newName:"length",target:Rn.prototype,targetName:"Vec3"},{name:"magSqr",newName:"lengthSqr",target:Rn.prototype,targetName:"Vec3"},{name:"scale",newName:"multiplyScalar",target:Rn.prototype,targetName:"Vec3"},{name:"exactEquals",newName:"strictEquals",target:Rn.prototype,targetName:"Vec3"}]),ee(Zn,"Vec4",[{name:"sub",newName:"subtract",target:Zn,targetName:"Vec4"},{name:"mul",newName:"multiply",target:Zn,targetName:"Vec4"},{name:"div",newName:"divide",target:Zn,targetName:"Vec4"},{name:"dist",newName:"distance",target:Zn,targetName:"Vec4"},{name:"sqrDist",newName:"squaredDistance",target:Zn,targetName:"Vec4"},{name:"mag",newName:"len",target:Zn,targetName:"Vec4"},{name:"sqrMag",newName:"lengthSqr",target:Zn,targetName:"Vec4"},{name:"scale",newName:"multiplyScalar",target:Zn,targetName:"Vec4"},{name:"exactEquals",newName:"strictEquals",target:Zn,targetName:"Vec4"}]),ee(Zn.prototype,"Vec4",[{name:"mag",newName:"length",target:Zn.prototype,targetName:"Vec4"},{name:"magSqr",newName:"lengthSqr",target:Zn.prototype,targetName:"Vec4"},{name:"scale",newName:"multiplyScalar",target:Zn.prototype,targetName:"Vec4"},{name:"exactEquals",newName:"strictEquals",target:Zn.prototype,targetName:"Vec4"}]),ee(zn,"Quat",[{name:"mag",newName:"len",target:zn,targetName:"Quat"},{name:"mul",newName:"multiply",target:zn,targetName:"Quat"},{name:"sqrMag",newName:"lengthSqr",target:zn,targetName:"Quat"},{name:"scale",newName:"multiplyScalar",target:zn,targetName:"Quat"},{name:"exactEquals",newName:"strictEquals",target:zn,targetName:"Quat"}]),ee(zn.prototype,"Quat",[{name:"scale",newName:"multiplyScalar",target:zn.prototype,targetName:"Quat"},{name:"exactEquals",newName:"strictEquals",target:zn.prototype,targetName:"Quat"}]),ee(Pn,"Color",[{name:"sub",newName:"subtract",target:Pn,targetName:"Color"},{name:"mul",newName:"multiply",target:Pn,targetName:"Color"},{name:"div",newName:"divide",target:Pn,targetName:"Color"},{name:"exactEquals",newName:"strictEquals",target:Pn,targetName:"Color"},{name:"fromHex",newName:"fromHEX",customFunction:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var i=t[1].toString(16);return s.Color.fromHEX(t[0],i)}}]),ee(Dn,"Mat3",[{name:"sub",newName:"subtract",target:Dn,targetName:"Mat3"},{name:"mul",newName:"multiply",target:Dn,targetName:"Mat3"},{name:"exactEquals",newName:"strictEquals",target:Dn,targetName:"Mat3"},{name:"transfrom",newName:"transform",target:Dn,targetName:"Mat3"}]),ee(Dn.prototype,"Mat3",[{name:"sub",newName:"subtract",target:Dn.prototype,targetName:"Mat3"},{name:"mul",newName:"multiply",target:Dn.prototype,targetName:"Mat3"},{name:"mulScalar",newName:"multiplyScalar",target:Dn.prototype,targetName:"Mat3"},{name:"exactEquals",newName:"strictEquals",target:Dn.prototype,targetName:"Mat3"}]),ee(jn,"Mat4",[{name:"sub",newName:"subtract",target:jn,targetName:"Mat4"},{name:"mul",newName:"multiply",target:jn,targetName:"Mat4"},{name:"exactEquals",newName:"strictEquals",target:jn,targetName:"Mat4"}]),ee(jn.prototype,"Mat4",[{name:"sub",newName:"subtract",target:jn.prototype,targetName:"Mat4"},{name:"mul",newName:"multiply",target:jn.prototype,targetName:"Mat4"},{name:"mulScalar",newName:"multiplyScalar",target:jn.prototype,targetName:"Mat4"},{name:"exactEquals",newName:"strictEquals",target:jn.prototype,targetName:"Mat4"}]);var ei=e("d5",function(){function e(e,t,n,i,o,a){void 0===e&&(e=1),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),void 0===o&&(o=0),void 0===a&&(a=0),this.a=e,this.b=t,this.c=n,this.d=i,this.tx=o,this.ty=a}return e.identity=function(){return new e},e.clone=function(t){return new e(t.a,t.b,t.c,t.d,t.tx,t.ty)},e.concat=function(e,t,n){var i=t.a,o=t.b,a=t.c,r=t.d,s=t.tx,c=t.ty;e.a=i*n.a+o*n.c,e.b=i*n.b+o*n.d,e.c=a*n.a+r*n.c,e.d=a*n.b+r*n.d,e.tx=s*n.a+c*n.c+n.tx,e.ty=s*n.b+c*n.d+n.ty},e.invert=function(e,t){var n=1/(t.a*t.d-t.b*t.c);e.a=n*t.d,e.b=-n*t.b,e.c=-n*t.c,e.d=n*t.a,e.tx=n*(t.c*t.ty-t.d*t.tx),e.ty=n*(t.b*t.tx-t.a*t.ty)},e.fromMat4=function(e,t){e.a=t.m00,e.b=t.m01,e.c=t.m04,e.d=t.m05,e.tx=t.m12,e.ty=t.m13},e.transformVec2=function(e,t,n,i){var o,a;void 0===i?(i=n,o=t.x,a=t.y):(o=t,a=n),e.x=i.a*o+i.c*a+i.tx,e.y=i.b*o+i.d*a+i.ty},e.transformSize=function(e,t,n){e.width=n.a*t.width+n.c*t.height,e.height=n.b*t.width+n.d*t.height},e.transformRect=function(e,t,n){var i=t.x+t.width,o=t.y+t.height,a=n.a*t.x+n.c*t.y+n.tx,r=n.b*t.x+n.d*t.y+n.ty,s=n.a*i+n.c*t.y+n.tx,c=n.b*i+n.d*t.y+n.ty,l=n.a*t.x+n.c*o+n.tx,f=n.b*t.x+n.d*o+n.ty,u=n.a*i+n.c*o+n.tx,_=n.b*i+n.d*o+n.ty,m=Math.min(a,s,l,u),h=Math.max(a,s,l,u),d=Math.min(r,c,f,_),p=Math.max(r,c,f,_);e.x=m,e.y=d,e.width=h-m,e.height=p-d},e.transformObb=function(e,t,n,i,o,a){var r=a.a*o.x+a.c*o.y+a.tx,s=a.b*o.x+a.d*o.y+a.ty,c=a.a*o.width,l=a.b*o.width,f=a.c*o.height,u=a.d*o.height;t.x=r,t.y=s,n.x=c+r,n.y=l+s,e.x=f+r,e.y=u+s,i.x=c+f+r,i.y=l+u+s},e}());s.AffineTransform=ei;var ti=e("d6",function(e){function t(t,n){var i;return i=e.call(this)||this,t&&"object"==typeof t?(i.width=t.width,i.height=t.height):(i.width=t||0,i.height=n||0),i}ue(t,e),t.lerp=function(e,t,n,i){return e.width=t.width+(n.width-t.width)*i,e.height=t.height+(n.height-t.height)*i,e};var n=t.prototype;return n.clone=function(){return new t(this.width,this.height)},n.set=function(e,t){return e&&"object"==typeof e?(this.height=e.height,this.width=e.width):(this.width=e||0,this.height=t||0),this},n.equals=function(e){return this.width===e.width&&this.height===e.height},n.lerp=function(e,t){return this.width+=(e.width-this.width)*t,this.height+=(e.height-this.height)*t,this},n.toString=function(){return"("+this.width.toFixed(2)+", "+this.height.toFixed(2)+")"},le(t,[{key:"x",get:function(){return this.width},set:function(e){this.width=e}},{key:"y",get:function(){return this.height},set:function(e){this.height=e}}]),t}(yt));function ni(e,t){return void 0===e&&(e=0),void 0===t&&(t=0),new ti(e,t)}ti.ZERO=Object.freeze(new ti(0,0)),ti.ONE=Object.freeze(new ti(1,1)),fn.fastDefine("cc.Size",ti,{width:0,height:0}),s.size=ni,s.Size=ti;var ii=e("d8",function(e){function t(t,n,i,o){var a;return a=e.call(this)||this,t&&"object"==typeof t?(a.y=t.y,a.width=t.width,a.height=t.height,a.x=t.x):(a.x=t||0,a.y=n||0,a.width=i||0,a.height=o||0),a}ue(t,e),t.fromMinMax=function(e,t,n){var i=Math.min(t.x,n.x),o=Math.min(t.y,n.y),a=Math.max(t.x,n.x),r=Math.max(t.y,n.y);return e.x=i,e.y=o,e.width=a-i,e.height=r-o,e},t.lerp=function(e,t,n,i){var o=t.x,a=t.y,r=t.width,s=t.height;return e.x=o+(n.x-o)*i,e.y=a+(n.y-a)*i,e.width=r+(n.width-r)*i,e.height=s+(n.height-s)*i,e},t.intersection=function(e,t,n){var i=t.x,o=t.y,a=t.x+t.width,r=t.y+t.height,s=n.x,c=n.y,l=n.x+n.width,f=n.y+n.height;return e.x=Math.max(i,s),e.y=Math.max(o,c),e.width=Math.min(a,l)-e.x,e.height=Math.min(r,f)-e.y,e},t.union=function(e,t,n){var i=t.x,o=t.y,a=t.width,r=t.height,s=n.x,c=n.y,l=n.width,f=n.height;return e.x=Math.min(i,s),e.y=Math.min(o,c),e.width=Math.max(i+a,s+l)-e.x,e.height=Math.max(o+r,c+f)-e.y,e};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y,this.width,this.height)},n.set=function(e,t,n,i){return e&&"object"==typeof e?(this.y=e.y,this.width=e.width,this.height=e.height,this.x=e.x):(this.x=e||0,this.y=t||0,this.width=n||0,this.height=i||0),this},n.equals=function(e){return this.x===e.x&&this.y===e.y&&this.width===e.width&&this.height===e.height},n.lerp=function(e,t){var n=this.x,i=this.y,o=this.width,a=this.height;return this.x=n+(e.x-n)*t,this.y=i+(e.y-i)*t,this.width=o+(e.width-o)*t,this.height=a+(e.height-a)*t,this},n.toString=function(){return"("+this.x.toFixed(2)+", "+this.y.toFixed(2)+", "+this.width.toFixed(2)+", "+this.height.toFixed(2)+")"},n.intersects=function(e){var t=this.x+this.width,n=this.y+this.height,i=e.x+e.width,o=e.y+e.height;return!(t<e.x||i<this.x||n<e.y||o<this.y)},n.contains=function(e){return this.x<=e.x&&this.x+this.width>=e.x&&this.y<=e.y&&this.y+this.height>=e.y},n.containsRect=function(e){return this.x<=e.x&&this.x+this.width>=e.x+e.width&&this.y<=e.y&&this.y+this.height>=e.y+e.height},n.transformMat4=function(e){var t=this.x,n=this.y,i=t+this.width,o=n+this.height,a=e.m00*t+e.m04*n+e.m12,r=e.m01*t+e.m05*n+e.m13,s=e.m00*i+e.m04*n+e.m12,c=e.m01*i+e.m05*n+e.m13,l=e.m00*t+e.m04*o+e.m12,f=e.m01*t+e.m05*o+e.m13,u=e.m00*i+e.m04*o+e.m12,_=e.m01*i+e.m05*o+e.m13,m=Math.min(a,s,l,u),h=Math.max(a,s,l,u),d=Math.min(r,c,f,_),p=Math.max(r,c,f,_);return this.x=m,this.y=d,this.width=h-m,this.height=p-d,this},n.transformMat4ToPoints=function(e,t,n,i,o){var a=this.x,r=this.y,s=a+this.width,c=r+this.height;t.x=e.m00*a+e.m04*r+e.m12,t.y=e.m01*a+e.m05*r+e.m13,o.x=e.m00*s+e.m04*r+e.m12,o.y=e.m01*s+e.m05*r+e.m13,n.x=e.m00*a+e.m04*c+e.m12,n.y=e.m01*a+e.m05*c+e.m13,i.x=e.m00*s+e.m04*c+e.m12,i.y=e.m01*s+e.m05*c+e.m13},le(t,[{key:"xMin",get:function(){return this.x},set:function(e){this.width+=this.x-e,this.x=e}},{key:"yMin",get:function(){return this.y},set:function(e){this.height+=this.y-e,this.y=e}},{key:"xMax",get:function(){return this.x+this.width},set:function(e){this.width=e-this.x}},{key:"yMax",get:function(){return this.y+this.height},set:function(e){this.height=e-this.y}},{key:"center",get:function(){return new Xn(this.x+.5*this.width,this.y+.5*this.height)},set:function(e){this.x=e.x-.5*this.width,this.y=e.y-.5*this.height}},{key:"origin",get:function(){return new Xn(this.x,this.y)},set:function(e){this.x=e.x,this.y=e.y}},{key:"size",get:function(){return new ti(this.width,this.height)},set:function(e){this.width=e.width,this.height=e.height}},{key:"z",get:function(){return this.width},set:function(e){this.width=e}},{key:"w",get:function(){return this.height},set:function(e){this.height=e}}]),t}(yt));function oi(e,t,n,i){return void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),new ii(e,t,n,i)}fn.fastDefine("cc.Rect",ii,{x:0,y:0,width:0,height:0}),s.Rect=ii,s.rect=oi;var ai,ri=e("P",function(){function e(e,t){this._ctor=void 0,this._elementsPerBatch=void 0,this._nextAvail=void 0,this._freepool=[],this._ctor=e,this._elementsPerBatch=Math.max(t,1),this._nextAvail=this._elementsPerBatch-1;for(var n=0;n<this._elementsPerBatch;++n)this._freepool.push(e())}var t=e.prototype;return t.alloc=function(){if(this._nextAvail<0){for(var e=this._elementsPerBatch,t=0;t<e;t++)this._freepool.push(this._ctor());this._nextAvail=e-1}var n=this._freepool[this._nextAvail--];return this._freepool.length--,n},t.free=function(e){this._freepool.push(e),this._nextAvail++},t.freeArray=function(e){Array.prototype.push.apply(this._freepool,e),this._nextAvail+=e.length},t.destroy=function(e){if(e)for(var t=0;t<=this._nextAvail;t++)e(this._freepool[t]);this._freepool.length=0,this._nextAvail=-1},e}()),si=(e("R",function(){function e(e,t){this._fn=void 0,this._count=0,this._data=void 0,this._fn=e,this._data=new Array(t);for(var n=0;n<t;++n)this._data[n]=e()}var t=e.prototype;return t.reset=function(){this._count=0},t.resize=function(e){if(e>this._data.length)for(var t=this._data.length;t<e;++t)this._data[t]=this._fn()},t.add=function(){return this._count>=this._data.length&&this.resize(2*this._data.length),this._data[this._count++]},t.removeAt=function(e){if(!(e>=this._count)){var t=this._count-1,n=this._data[e];this._data[e]=this._data[t],this._data[t]=n,this._count-=1}},le(e,[{key:"length",get:function(){return this._count}},{key:"data",get:function(){return this._data}}]),e}()),e("C",function(){function e(e,t){this.array=void 0,this.length=0,this._compareFn=void 0,this.array=new Array(e),this.length=0,this._compareFn=void 0!==t?t:function(e,t){return e-t}}var t=e.prototype;return t.push=function(e){this.array[this.length++]=e},t.pop=function(){return this.array[--this.length]},t.get=function(e){return this.array[e]},t.clear=function(){this.length=0},t.destroy=function(){this.length=0,this.array.length=0},t.sort=function(){this.array.length=this.length,this.array.sort(this._compareFn)},t.concat=function(e){for(var t=0;t<e.length;++t)this.array[this.length++]=e[t]},t.fastRemove=function(e){if(!(e>=this.length||e<0)){var t=--this.length;this.array[e]=this.array[t]}},t.indexOf=function(e){return this.array.indexOf(e)},e}()),e("dZ","__editorExtras__")),ci=[],li=e("dP",function(){function e(e){void 0===e&&(e=""),this._objFlags=void 0,this._name=void 0,this._name=e,this._objFlags=0}e._deferredDestroy=function(){for(var e=ci.length,t=0;t<e;++t){var n=ci[t];1&n._objFlags||n._destroyImmediate()}e===ci.length?ci.length=0:ci.splice(0,e)};var t=e.prototype;return t.destroy=function(){return 1&this._objFlags?(w(5e3),!1):!(4&this._objFlags||(this._objFlags|=4,ci.push(this),0))},t._destruct=function(){var e=this.constructor,t=e.__destruct__;t||(t=function(e,t){var n,i=e instanceof s._BaseNode||e instanceof s.Component,o=i?"_id":null,a={};for(n in e)if(e.hasOwnProperty(n)){if(n===o)continue;switch(typeof e[n]){case"string":a[n]="";break;case"object":case"function":a[n]=null}}if(fn._isCCClass(t))for(var r=s.Class.Attr.getClassAttrs(t),c=t.__props__,l=0;l<c.length;l++){var f=(n=c[l])+s.Class.Attr.DELIMETER+"default";if(f in r){if(i&&"_id"===n)continue;switch(typeof r[f]){case"string":a[n]="";break;case"object":case"function":a[n]=null;break;case"undefined":a[n]=void 0}}}return function(e){for(var t in a)e[t]=a[t]}}(this,e),Me(e,"__destruct__",t,!0)),t(this)},t._destroyImmediate=function(){1&this._objFlags?b(5e3):(this._onPreDestroy&&this._onPreDestroy(),this._destruct(),this._objFlags|=1)},le(e,[{key:"name",get:function(){return this._name},set:function(e){this._name=e}},{key:"hideFlags",get:function(){return this._objFlags&e.Flags.AllHideMasks},set:function(t){var n=t&e.Flags.AllHideMasks;this._objFlags=this._objFlags&~e.Flags.AllHideMasks|n}},{key:"isValid",get:function(){return!(1&this._objFlags)}}]),e}()),fi=li.prototype;function ui(e,t){return"object"==typeof e?!(!e||e._objFlags&(t?5:1)):void 0!==e}fi._deserialize=null,fi._onPreDestroy=null,fn.fastDefine("cc.Object",li,((ai={_name:"",_objFlags:0})[si]={},ai)),fn.Attr.setClassAttr(li,si,"editorOnly",!0),Me(li,"Flags",{Destroyed:1,DontSave:8,EditorOnly:16,Dirty:32,DontDestroy:64,PersistentMask:-4192741,Destroying:128,Deactivating:256,LockedInEditor:512,HideInHierarchy:1024,AllHideMasks:1560,IsPreloadStarted:8192,IsOnLoadStarted:32768,IsOnLoadCalled:16384,IsOnEnableCalled:2048,IsStartCalled:65536,IsEditorOnEnableCalled:4096,IsPositionLocked:1<<21,IsRotationLocked:1<<17,IsScaleLocked:1<<18,IsAnchorLocked:1<<19,IsSizeLocked:1<<20}),s.isValid=ui,s.Object=li;var _i=mt.fastRemoveAt;function mi(){}var hi=function(){function e(){this.callback=mi,this.target=void 0,this.once=!1}var t=e.prototype;return t.set=function(e,t,n){this.callback=e||mi,this.target=t,this.once=!!n},t.reset=function(){this.target=void 0,this.callback=mi,this.once=!1},t.check=function(){return!(this.target instanceof li&&!ui(this.target,!0))},e}(),di=new ri((function(){return new hi}),32),pi=function(){function e(){this.callbackInfos=[],this.isInvoking=!1,this.containCanceled=!1}var t=e.prototype;return t.removeByCallback=function(e){for(var t=0;t<this.callbackInfos.length;++t){var n=this.callbackInfos[t];n&&n.callback===e&&(n.reset(),di.free(n),_i(this.callbackInfos,t),--t)}},t.removeByTarget=function(e){for(var t=0;t<this.callbackInfos.length;++t){var n=this.callbackInfos[t];n&&n.target===e&&(n.reset(),di.free(n),_i(this.callbackInfos,t),--t)}},t.cancel=function(e){var t=this.callbackInfos[e];t&&(t.reset(),this.isInvoking?this.callbackInfos[e]=null:_i(this.callbackInfos,e),di.free(t)),this.containCanceled=!0},t.cancelAll=function(){for(var e=0;e<this.callbackInfos.length;e++){var t=this.callbackInfos[e];t&&(t.reset(),di.free(t),this.callbackInfos[e]=null)}this.containCanceled=!0},t.purgeCanceled=function(){for(var e=this.callbackInfos.length-1;e>=0;--e)this.callbackInfos[e]||_i(this.callbackInfos,e);this.containCanceled=!1},t.clear=function(){this.cancelAll(),this.callbackInfos.length=0,this.isInvoking=!1,this.containCanceled=!1},e}(),vi=new ri((function(){return new pi}),16),gi=e("ez",function(){function e(){this._callbackTable=Ue(!0)}var t=e.prototype;return t.on=function(e,t,n,i){if(!this.hasEventListener(e,t,n)){var o=this._callbackTable[e];o||(o=this._callbackTable[e]=vi.alloc());var a=di.alloc();a.set(t,n,i),o.callbackInfos.push(a)}return t},t.hasEventListener=function(e,t,n){var i=this._callbackTable&&this._callbackTable[e];if(!i)return!1;var o=i.callbackInfos;if(!t){if(i.isInvoking){for(var a=0;a<o.length;++a)if(o[a])return!0;return!1}return o.length>0}for(var r=0;r<o.length;++r){var s=o[r];if(s&&s.check()&&s.callback===t&&s.target===n)return!0}return!1},t.removeAll=function(e){if("string"==typeof e){var t=this._callbackTable&&this._callbackTable[e];t&&(t.isInvoking?t.cancelAll():(t.clear(),vi.free(t),delete this._callbackTable[e]))}else if(e)for(var n in this._callbackTable){var i=this._callbackTable[n];if(i.isInvoking)for(var o=i.callbackInfos,a=0;a<o.length;++a){var r=o[a];r&&r.target===e&&i.cancel(a)}else i.removeByTarget(e)}},t.off=function(e,t,n){var i=this._callbackTable&&this._callbackTable[e];if(i){var o=i.callbackInfos;if(t)for(var a=0;a<o.length;++a){var r=o[a];if(r&&r.callback===t&&r.target===n){i.cancel(a);break}}else this.removeAll(e)}},t.emit=function(e,t,n,i,o,a){var r=this._callbackTable&&this._callbackTable[e];if(r){var s=!r.isInvoking;r.isInvoking=!0;for(var c=r.callbackInfos,l=0,f=c.length;l<f;++l){var u=c[l];if(u){var _=u.callback,m=u.target;u.once&&this.off(e,_,m),u.check()?m?_.call(m,t,n,i,o,a):_(t,n,i,o,a):this.off(e,_,m)}}s&&(r.isInvoking=!1,r.containCanceled&&r.purgeCanceled())}},t.clear=function(){for(var e in this._callbackTable){var t=this._callbackTable[e];t&&(t.clear(),vi.free(t),delete this._callbackTable[e])}},e}());function xi(e){for(var t=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this)._callbackTable=Ue(!0),t}ue(t,e);var n=t.prototype;return n.once=function(e,t,n){return this.on(e,t,n,!0)},n.targetOff=function(e){this.removeAll(e)},t}(e),n=gi.prototype,i=Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n)),o=0;o<i.length;++o){var a=i[o];if(!(a in t.prototype)){var r=Object.getOwnPropertyDescriptor(n,a);r&&Object.defineProperty(t.prototype,a,r)}}return t}var yi,Ei,Si,Ai,Ci,Ti,Ii,Pi=e("d$",xi((function(){})));s.EventTarget=Pi,function(e){e.UNKNOWN="unknown",e.WECHAT="wechat",e.ANDROID="androidbrowser",e.IE="ie",e.EDGE="edge",e.QQ="qqbrowser",e.MOBILE_QQ="mqqbrowser",e.UC="ucbrowser",e.UCBS="ucbs",e.BROWSER_360="360browser",e.BAIDU_APP="baiduboxapp",e.BAIDU="baidubrowser",e.MAXTHON="maxthon",e.OPERA="opera",e.OUPENG="oupeng",e.MIUI="miuibrowser",e.FIREFOX="firefox",e.SAFARI="safari",e.CHROME="chrome",e.LIEBAO="liebao",e.QZONE="qzone",e.SOUGOU="sogou",e.HUAWEI="huawei"}(yi||(yi=e("fr",{}))),function(e){e.HIDE="hide",e.SHOW="show",e.RESIZE="resize",e.ORIENTATION_CHANGE="orientation_change"}(Ei||(Ei={})),function(e){e.UNKNOWN="unknown",e.ENGLISH="en",e.CHINESE="zh",e.FRENCH="fr",e.ITALIAN="it",e.GERMAN="de",e.SPANISH="es",e.DUTCH="du",e.RUSSIAN="ru",e.KOREAN="ko",e.JAPANESE="ja",e.HUNGARIAN="hu",e.PORTUGUESE="pt",e.ARABIC="ar",e.NORWEGIAN="no",e.POLISH="pl",e.TURKISH="tr",e.UKRAINIAN="uk",e.ROMANIAN="ro",e.BULGARIAN="bg"}(Si||(Si={})),function(e){e[e.NONE=0]="NONE",e[e.LAN=1]="LAN",e[e.WWAN=2]="WWAN"}(Ai||(Ai={})),function(e){e.UNKNOWN="Unknown",e.IOS="iOS",e.ANDROID="Android",e.WINDOWS="Windows",e.LINUX="Linux",e.OSX="OS X"}(Ci||(Ci=e("ft",{}))),function(e){e.UNKNOWN="UNKNOWN",e.EDITOR_PAGE="EDITOR_PAGE",e.EDITOR_CORE="EDITOR_CORE",e.MOBILE_BROWSER="MOBILE_BROWSER",e.DESKTOP_BROWSER="DESKTOP_BROWSER",e.WIN32="WIN32",e.ANDROID="ANDROID",e.IOS="IOS",e.MACOS="MACOS",e.WECHAT_GAME="WECHAT_GAME",e.BAIDU_MINI_GAME="BAIDU_MINI_GAME",e.XIAOMI_QUICK_GAME="XIAOMI_QUICK_GAME",e.ALIPAY_MINI_GAME="ALIPAY_MINI_GAME",e.BYTEDANCE_MINI_GAME="BYTEDANCE_MINI_GAME",e.OPPO_MINI_GAME="OPPO_MINI_GAME",e.VIVO_MINI_GAME="VIVO_MINI_GAME",e.HUAWEI_QUICK_GAME="HUAWEI_QUICK_GAME",e.COCOSPLAY="COCOSPLAY",e.LINKSURE_MINI_GAME="LINKSURE_MINI_GAME",e.QTT_MINI_GAME="QTT_MINI_GAME"}(Ti||(Ti={})),Ii=Ti.WECHAT_GAME;var wi=function(){function e(){this.networkType=void 0,this.isNative=void 0,this.isBrowser=void 0,this.isMobile=void 0,this.isLittleEndian=void 0,this.platform=void 0,this.language=void 0,this.nativeLanguage=void 0,this.os=void 0,this.osVersion=void 0,this.osMainVersion=void 0,this.browserType=void 0,this.browserVersion=void 0,this.pixelRatio=void 0,this.supportCapability=void 0,this._eventTarget=new Pi;var e,t=G.getSystemInfoSync();this.networkType=Ai.LAN,this.isNative=!1,this.isBrowser=!1,this.platform=Ii,this.isMobile=!G.isDevTool,this.isLittleEndian=(e=new ArrayBuffer(2),new DataView(e).setInt16(0,256,!0),256===new Int16Array(e)[0]),this.nativeLanguage=t.language,this.language=t.language.substr(0,2);var n=t.platform.toLocaleLowerCase();this.os="android"===n?Ci.ANDROID:"ios"===n?Ci.IOS:Ci.UNKNOWN;var i=t.system.toLowerCase();"android p"===i&&(i="android p 9.0");var o=/[\d.]+/.exec(i);this.osVersion=o?o[0]:i,this.osMainVersion=parseInt(this.osVersion),this.browserType=yi.UNKNOWN,this.browserVersion="",this.pixelRatio=t.pixelRatio;var a,r=document.createElement("canvas");try{a=r.toDataURL("image/webp").startsWith("data:image/webp")}catch(e){a=!1}this.supportCapability={webp:a,gl:!0,canvas:!0,imageBitmap:!1},this._registerEvent()}var t=e.prototype;return t._registerEvent=function(){var e=this;G.onHide((function(){e._eventTarget.emit(Ei.HIDE)})),G.onShow((function(){e._eventTarget.emit(Ei.SHOW)}))},t.getViewSize=function(){var e=G.getSystemInfoSync();return new ti(e.screenWidth,e.screenHeight)},t.getOrientation=function(){return G.orientation},t.getSafeAreaEdge=function(){var e=G.getSafeArea(),t=this.getViewSize(),n=e.top,i=t.height-e.bottom,o=e.left,a=t.width-e.right;return this.getOrientation()===O.PORTRAIT?n<i?n=i:i=n:o<a?o=a:a=o,{top:n,bottom:i,left:o,right:a}},t.getBatteryLevel=function(){return G.getBatteryInfoSync().level/100},t.triggerGC=function(){G.triggerGC()},t.openURL=function(){},t.now=function(){return Date.now?Date.now():+new Date},t.restartJSVM=function(){},t.onHide=function(e){this._eventTarget.on(Ei.HIDE,e)},t.onShow=function(e){this._eventTarget.on(Ei.SHOW,e)},t.onViewResize=function(e){this._eventTarget.on(Ei.RESIZE,e)},t.onOrientationChange=function(e){this._eventTarget.on(Ei.ORIENTATION_CHANGE,e)},t.offHide=function(e){this._eventTarget.off(Ei.HIDE,e)},t.offShow=function(e){this._eventTarget.off(Ei.SHOW,e)},t.offViewResize=function(e){this._eventTarget.off(Ei.RESIZE,e)},t.offOrientationChange=function(e){this._eventTarget.off(Ei.ORIENTATION_CHANGE,e)},e}(),Ri=e("fq",new wi),bi=/(\.[^\.\/\?\\]*)(\?.*)?$/,Ni=/((.*)(\/|\\|\\\\))?(.*?\..*$)?/,Oi=/[^\.\/]+\/\.\.\//;function Di(){for(var e="",t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];for(var o=0,a=n;o<a.length;o++){var r=a[o];e=(e+(""===e?"":"/")+r).replace(/(\/|\\\\)$/,"")}return e}function Mi(e){var t=bi.exec(e);return t?t[1]:""}function Li(e){if(e){var t=e.lastIndexOf(".");if(-1!==t)return e.substring(0,t)}return e}function zi(e,t){var n=e.indexOf("?");n>0&&(e=e.substring(0,n));var i=/(\/|\\)([^\/\\]+)$/g.exec(e.replace(/(\/|\\)$/,""));if(!i)return e;var o=i[2];return t&&e.substring(e.length-t.length).toLowerCase()===t.toLowerCase()?o.substring(0,o.length-t.length):o}function Fi(e){var t=Ni.exec(e);return t?t[2]:""}function Ui(e,t){t=t||"";var n=e.indexOf("?"),i="";return n>0&&(i=e.substring(n),e=e.substring(0,n)),(n=e.lastIndexOf("."))<0?e+t+i:e.substring(0,n)+t+i}function Bi(e,t,n){if(0===t.indexOf("."))return Ui(e,t);var i=e.indexOf("?"),o="",a=n?Mi(e):"";return i>0&&(o=e.substring(i),e=e.substring(0,i)),i=(i=e.lastIndexOf("/"))<=0?0:i+1,e.substring(0,i)+t+a+o}function Gi(e){var t=e=String(e);do{t=e,e=e.replace(Oi,"")}while(t.length!==e.length);return e}function Hi(e){return e.replace(/[\/\\]$/,"")}function ki(){return Ri.os===Ci.WINDOWS?"\\":"/"}e("dD",Object.freeze({__proto__:null,join:Di,extname:Mi,mainFileName:Li,basename:zi,dirname:Fi,changeExtname:Ui,changeBasename:Bi,_normalize:Gi,stripSep:Hi,getSeperator:ki}));var Vi,ji,Wi,qi,Yi,Xi,Ki,Ji,Qi,Zi,$i,eo,to,no,io,oo,ao,ro,so,co,lo,fo,uo,_o,mo,ho=function(){function e(e,t,n){this._arrayBuffers=[],this._chunkSize=void 0,this._chunkSize=n*(1<<t)}return e.prototype.allocateNewChunk=function(){return new ArrayBuffer(this._chunkSize)},e}(),po=function(){function e(){}return e.prototype.bind=function(){},e}(),vo=function(){function e(){}var t=e.prototype;return t.alloc=function(e,t){return new ArrayBuffer(t)},t.free=function(){},e}();!function(e){e[e.UINT32=0]="UINT32",e[e.FLOAT32=1]="FLOAT32",e[e.NEVER=2]="NEVER"}(mo||(mo={}));var go,xo=function(){function e(e,t,n,i){void 0===i&&(i=8),this._dataType=void 0,this._elementCount=void 0,this._entryBits=void 0,this._stride=void 0,this._entriesPerChunk=void 0,this._entryMask=void 0,this._chunkMask=void 0,this._poolFlag=void 0,this._arrayBuffers=[],this._freelists=[],this._uint32BufferViews=[],this._float32BufferViews=[],this._hasUint32=!1,this._hasFloat32=!1,this._nativePool=void 0,this._elementCount=n.COUNT,this._entryBits=i,this._dataType=t,this._stride=4*this._elementCount,this._entriesPerChunk=1<<i,this._entryMask=this._entriesPerChunk-1,this._poolFlag=1<<30,this._chunkMask=~(this._entryMask|this._poolFlag),this._nativePool=new ho(e,i,this._stride);var o=mo.NEVER,a=!1,r=!1;for(var s in t){if(a=this._hasFloat32,(r=this._hasUint32)&&a)break;o=t[s],a||o!==mo.FLOAT32?r||o!==mo.UINT32||(this._hasUint32=!0):this._hasFloat32=!0}}var t=e.prototype;return t.alloc=function(){for(var e=0;e<this._freelists.length;e++){var t=this._freelists[e];if(t.length){var n=t[t.length-1];return t.length--,(e<<this._entryBits)+n+this._poolFlag}}for(var i=this._nativePool.allocateNewChunk(),o=[],a=[],r=[],s=this._hasFloat32,c=this._hasUint32,l=0;l<this._entriesPerChunk;l++)s&&o.push(new Float32Array(i,this._stride*l,this._elementCount)),c&&a.push(new Uint32Array(i,this._stride*l,this._elementCount)),l&&r.push(l);return this._arrayBuffers.push(i),c&&this._uint32BufferViews.push(a),s&&this._float32BufferViews.push(o),this._freelists.push(r),(e<<this._entryBits)+this._poolFlag},t.get=function(e,t){var n=(this._chunkMask&e)>>this._entryBits,i=this._entryMask&e;return(this._dataType[t]===mo.UINT32?this._uint32BufferViews:this._float32BufferViews)[n][i][t]},t.set=function(e,t,n){var i=(this._chunkMask&e)>>this._entryBits,o=this._entryMask&e;(this._dataType[t]===mo.UINT32?this._uint32BufferViews:this._float32BufferViews)[i][o][t]=n},t.setVec2=function(){},t.setVec3=function(){},t.getVec3=function(){},t.setVec4=function(){},t.getVec4=function(){},t.setMat4=function(){},t.free=function(e){var t=(this._chunkMask&e)>>this._entryBits,n=this._entryMask&e;(this._hasUint32?this._uint32BufferViews:this._float32BufferViews)[t][n].fill(0),this._freelists[t].push(n)},e}(),yo=e("bS",function(){function e(e,t,n){this._ctor=void 0,this._dtor=void 0,this._indexMask=void 0,this._poolFlag=void 0,this._array=[],this._freelist=[],this._nativePool=void 0,this._ctor=t,n&&(this._dtor=n),this._poolFlag=1<<29,this._indexMask=~this._poolFlag,this._nativePool=new po(e,this._array)}var t=e.prototype;return t.alloc=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var i=this._freelist,o=-1;if(i.length)o=i[i.length-1],i.length--,this._array[o]=this._ctor(arguments,this._array[o]);else{o=this._array.length;var a=this._ctor(arguments);if(!a)return 0;this._array.push(a)}return o+this._poolFlag},t.get=function(e){var t=this._indexMask&e;return this._array[t]},t.free=function(e){var t=this._indexMask&e;this._dtor&&(this._array[t]=this._dtor(this._array[t])),this._freelist.push(t)},e}()),Eo=function(){function e(e){this._nativeBufferAllocator=void 0,this._buffers=new Map,this._nextBufferIdx=0,this._poolFlag=void 0,this._bufferIdxMask=void 0,this._freelist=[],this._poolFlag=1<<30,this._bufferIdxMask=~this._poolFlag,this._nativeBufferAllocator=new vo(e)}var t=e.prototype;return t.alloc=function(e){var t=this._freelist,n=-1;t.length?(n=t[t.length-1],t.length--):n=this._nextBufferIdx++;var i=this._nativeBufferAllocator.alloc(n,e);return this._buffers.set(n,i),n|this._poolFlag},t.free=function(e){var t=this._bufferIdxMask&e;this._buffers.get(t)&&(this._nativeBufferAllocator.free(t),this._buffers.delete(t),this._freelist.push(t))},t.getBuffer=function(e){var t=this._bufferIdxMask&e;return this._buffers.get(t)||null},e}(),So=function(e){function t(t,n,i,o){var a;return(a=e.call(this,t)||this)._viewCtor=void 0,a._size=void 0,a._step=void 0,a._viewCtor=n,a._size=i*n.BYTES_PER_ELEMENT,a._step=o||i,a}ue(t,e);var n=t.prototype;return n.alloc=function(){var e=this._nextBufferIdx++,t=this._nativeBufferAllocator.alloc(e,this._size);return this._buffers.set(e,new this._viewCtor(t)),e|this._poolFlag},n.getBuffer=function(){return null},n.assign=function(e,t,n){var i=this._bufferIdxMask&e,o=this._buffers.get(i);if(o){var a=t+1;if(a>=o.length){for(var r=o.length;a>=r;)r+=this._step;r*=this._viewCtor.BYTES_PER_ELEMENT;var s=new this._viewCtor(this._nativeBufferAllocator.alloc(i,r));s.set(o),o=s,this._buffers.set(i,o)}o[a]=n;var c=o[0];o[0]=a>c?a:c}},n.erase=function(e,t){var n=this._bufferIdxMask&e,i=this._buffers.get(n);if(i&&!(t>=i[0])){for(var o=t+1;o<i[0];++o)i[o]=i[o+1];--i[0]}},n.push=function(e,t){var n=this._bufferIdxMask&e,i=this._buffers.get(n);i&&this.assign(e,i[0],t)},n.pop=function(e){var t=this._bufferIdxMask&e,n=this._buffers.get(t);n&&0!==n[0]&&--n[0]},n.clear=function(e){var t=this._bufferIdxMask&e,n=this._buffers.get(t);n&&(n[0]=0)},n.get=function(e,t){var n=this._bufferIdxMask&e,i=this._buffers.get(n);return!i||t>=i[0]?0:i[t+1]},n.length=function(e){var t=this._bufferIdxMask&e,n=this._buffers.get(t);return n?n[0]:0},t}(Eo);!function(e){e[e.ATTRIBUTE=0]="ATTRIBUTE",e[e.DESCRIPTOR_SETS=1]="DESCRIPTOR_SETS",e[e.SHADER=2]="SHADER",e[e.INPUT_ASSEMBLER=3]="INPUT_ASSEMBLER",e[e.PIPELINE_LAYOUT=4]="PIPELINE_LAYOUT",e[e.FRAMEBUFFER=5]="FRAMEBUFFER",e[e.PASS=100]="PASS",e[e.SUB_MODEL=101]="SUB_MODEL",e[e.MODEL=102]="MODEL",e[e.SCENE=103]="SCENE",e[e.CAMERA=104]="CAMERA",e[e.NODE=105]="NODE",e[e.ROOT=106]="ROOT",e[e.AABB=107]="AABB",e[e.RENDER_WINDOW=108]="RENDER_WINDOW",e[e.FRUSTUM=109]="FRUSTUM",e[e.AMBIENT=110]="AMBIENT",e[e.FOG=111]="FOG",e[e.SKYBOX=112]="SKYBOX",e[e.SHADOW=113]="SHADOW",e[e.LIGHT=114]="LIGHT",e[e.SPHERE=115]="SPHERE",e[e.INSTANCED_ATTRIBUTE=116]="INSTANCED_ATTRIBUTE",e[e.FLAT_BUFFER=117]="FLAT_BUFFER",e[e.SUB_MESH=118]="SUB_MESH",e[e.RASTERIZER_STATE=119]="RASTERIZER_STATE",e[e.DEPTH_STENCIL_STATE=120]="DEPTH_STENCIL_STATE",e[e.BLEND_TARGET=121]="BLEND_TARGET",e[e.BLEND_STATE=122]="BLEND_STATE",e[e.BATCH_2D=123]="BATCH_2D",e[e.PIPELINE_SCENE_DATA=124]="PIPELINE_SCENE_DATA",e[e.SUB_MODEL_ARRAY=200]="SUB_MODEL_ARRAY",e[e.MODEL_ARRAY=201]="MODEL_ARRAY",e[e.ATTRIBUTE_ARRAY=202]="ATTRIBUTE_ARRAY",e[e.FLAT_BUFFER_ARRAY=203]="FLAT_BUFFER_ARRAY",e[e.INSTANCED_BUFFER_ARRAY=204]="INSTANCED_BUFFER_ARRAY",e[e.LIGHT_ARRAY=205]="LIGHT_ARRAY",e[e.BLEND_TARGET_ARRAY=206]="BLEND_TARGET_ARRAY",e[e.BATCH_ARRAY_2D=207]="BATCH_ARRAY_2D",e[e.RAW_BUFFER=300]="RAW_BUFFER",e[e.RAW_OBJECT=400]="RAW_OBJECT"}(go||(go=e("bU",{})));var Ao,Co=e("bV",0),To=e("bW",new yo(go.SHADER,(function(e,t){return t?(t.initialize(e[1]),t):e[0].createShader(e[1])}),(function(e){return e&&e.destroy(),e}))),Io=e("bX",new yo(go.DESCRIPTOR_SETS,(function(e,t){return t?(t.initialize(e[1]),t):e[0].createDescriptorSet(e[1])}),(function(e){return e&&e.destroy(),e}))),Po=(e("bY",new yo(go.INPUT_ASSEMBLER,(function(e,t){return t?(t.initialize(e[1]),t):e[0].createInputAssembler(e[1])}),(function(e){return e&&e.destroy(),e}))),e("bZ",new yo(go.PIPELINE_LAYOUT,(function(e,t){return t?(t.initialize(e[1]),t):e[0].createPipelineLayout(e[1])}),(function(e){return e&&e.destroy(),e})))),wo=(e("b_",new yo(go.FRAMEBUFFER,(function(e,t){return t?(t.initialize(e[1]),t):e[0].createFramebuffer(e[1])}),(function(e){return e&&e.destroy(),e}))),e("b$",new So(go.SUB_MODEL_ARRAY,Uint32Array,8,4)),e("c0",new So(go.MODEL_ARRAY,Uint32Array,32,16)),e("c1",new So(go.ATTRIBUTE_ARRAY,Uint32Array,8,4)),e("c2",new So(go.FLAT_BUFFER_ARRAY,Uint32Array,8,4)),e("c3",new So(go.LIGHT_ARRAY,Uint32Array,8,4)),e("c4",new So(go.BLEND_TARGET_ARRAY,Uint32Array,8,4)),e("c5",new So(go.BATCH_ARRAY_2D,Uint32Array,32,16)),e("c6",new Eo(go.RAW_BUFFER)));e("c7",new yo(go.RAW_OBJECT,(function(e){return e[0]||{}}),(function(){}))),function(e){e[e.PRIORITY=0]="PRIORITY",e[e.STAGE=1]="STAGE",e[e.PHASE=2]="PHASE",e[e.BATCHING_SCHEME=3]="BATCHING_SCHEME",e[e.PRIMITIVE=4]="PRIMITIVE",e[e.DYNAMIC_STATES=5]="DYNAMIC_STATES",e[e.HASH=6]="HASH",e[e.RASTERIZER_STATE=7]="RASTERIZER_STATE",e[e.DEPTH_STENCIL_STATE=8]="DEPTH_STENCIL_STATE",e[e.BLEND_STATE=9]="BLEND_STATE",e[e.DESCRIPTOR_SET=10]="DESCRIPTOR_SET",e[e.PIPELINE_LAYOUT=11]="PIPELINE_LAYOUT",e[e.COUNT=12]="COUNT"}(Ao||(Ao=e("c8",{})));var Ro,bo=((Vi={})[Ao.PRIORITY]=mo.UINT32,Vi[Ao.STAGE]=mo.UINT32,Vi[Ao.PHASE]=mo.UINT32,Vi[Ao.BATCHING_SCHEME]=mo.UINT32,Vi[Ao.PRIMITIVE]=mo.UINT32,Vi[Ao.DYNAMIC_STATES]=mo.UINT32,Vi[Ao.HASH]=mo.UINT32,Vi[Ao.RASTERIZER_STATE]=mo.UINT32,Vi[Ao.DEPTH_STENCIL_STATE]=mo.UINT32,Vi[Ao.BLEND_STATE]=mo.UINT32,Vi[Ao.DESCRIPTOR_SET]=mo.UINT32,Vi[Ao.PIPELINE_LAYOUT]=mo.UINT32,Vi[Ao.COUNT]=mo.NEVER,Vi),No=e("c9",new xo(go.PASS,bo,Ao));!function(e){e[e.PRIORITY=0]="PRIORITY",e[e.PASS_COUNT=1]="PASS_COUNT",e[e.PASS_0=2]="PASS_0",e[e.PASS_1=3]="PASS_1",e[e.PASS_2=4]="PASS_2",e[e.PASS_3=5]="PASS_3",e[e.PASS_4=6]="PASS_4",e[e.PASS_5=7]="PASS_5",e[e.PASS_6=8]="PASS_6",e[e.PASS_7=9]="PASS_7",e[e.SHADER_0=10]="SHADER_0",e[e.SHADER_1=11]="SHADER_1",e[e.SHADER_2=12]="SHADER_2",e[e.SHADER_3=13]="SHADER_3",e[e.SHADER_4=14]="SHADER_4",e[e.SHADER_5=15]="SHADER_5",e[e.SHADER_6=16]="SHADER_6",e[e.SHADER_7=17]="SHADER_7",e[e.PLANAR_SHADER=18]="PLANAR_SHADER",e[e.PLANAR_INSTANCE_SHADER=19]="PLANAR_INSTANCE_SHADER",e[e.DESCRIPTOR_SET=20]="DESCRIPTOR_SET",e[e.INPUT_ASSEMBLER=21]="INPUT_ASSEMBLER",e[e.SUB_MESH=22]="SUB_MESH",e[e.COUNT=23]="COUNT"}(Ro||(Ro=e("ca",{})));var Oo,Do=((ji={})[Ro.PRIORITY]=mo.UINT32,ji[Ro.PASS_COUNT]=mo.UINT32,ji[Ro.PASS_0]=mo.UINT32,ji[Ro.PASS_1]=mo.UINT32,ji[Ro.PASS_2]=mo.UINT32,ji[Ro.PASS_3]=mo.UINT32,ji[Ro.PASS_4]=mo.UINT32,ji[Ro.PASS_5]=mo.UINT32,ji[Ro.PASS_6]=mo.UINT32,ji[Ro.PASS_7]=mo.UINT32,ji[Ro.SHADER_0]=mo.UINT32,ji[Ro.SHADER_1]=mo.UINT32,ji[Ro.SHADER_2]=mo.UINT32,ji[Ro.SHADER_3]=mo.UINT32,ji[Ro.SHADER_4]=mo.UINT32,ji[Ro.SHADER_5]=mo.UINT32,ji[Ro.SHADER_6]=mo.UINT32,ji[Ro.SHADER_7]=mo.UINT32,ji[Ro.PLANAR_SHADER]=mo.UINT32,ji[Ro.PLANAR_INSTANCE_SHADER]=mo.UINT32,ji[Ro.DESCRIPTOR_SET]=mo.UINT32,ji[Ro.INPUT_ASSEMBLER]=mo.UINT32,ji[Ro.SUB_MESH]=mo.UINT32,ji[Ro.COUNT]=mo.NEVER,ji);e("cb",new xo(go.SUB_MODEL,Do,Ro)),function(e){e[e.ENABLED=0]="ENABLED",e[e.VIS_FLAGS=1]="VIS_FLAGS",e[e.CAST_SHADOW=2]="CAST_SHADOW",e[e.RECEIVE_SHADOW=3]="RECEIVE_SHADOW",e[e.WORLD_BOUNDS=4]="WORLD_BOUNDS",e[e.NODE=5]="NODE",e[e.TRANSFORM=6]="TRANSFORM",e[e.SUB_MODEL_ARRAY=7]="SUB_MODEL_ARRAY",e[e.INSTANCED_BUFFER=8]="INSTANCED_BUFFER",e[e.INSTANCED_ATTR_ARRAY=9]="INSTANCED_ATTR_ARRAY",e[e.COUNT=10]="COUNT"}(Oo||(Oo=e("cc",{})));var Mo,Lo=((Wi={})[Oo.ENABLED]=mo.UINT32,Wi[Oo.VIS_FLAGS]=mo.UINT32,Wi[Oo.CAST_SHADOW]=mo.UINT32,Wi[Oo.RECEIVE_SHADOW]=mo.UINT32,Wi[Oo.WORLD_BOUNDS]=mo.UINT32,Wi[Oo.NODE]=mo.UINT32,Wi[Oo.TRANSFORM]=mo.UINT32,Wi[Oo.SUB_MODEL_ARRAY]=mo.UINT32,Wi[Oo.INSTANCED_BUFFER]=mo.UINT32,Wi[Oo.INSTANCED_ATTR_ARRAY]=mo.UINT32,Wi[Oo.COUNT]=mo.NEVER,Wi);e("cd",new xo(go.MODEL,Lo,Oo)),function(e){e[e.VIS_FLAGS=0]="VIS_FLAGS",e[e.PASS_COUNT=1]="PASS_COUNT",e[e.PASS_0=2]="PASS_0",e[e.PASS_1=3]="PASS_1",e[e.PASS_2=4]="PASS_2",e[e.PASS_3=5]="PASS_3",e[e.SHADER_0=6]="SHADER_0",e[e.SHADER_1=7]="SHADER_1",e[e.SHADER_2=8]="SHADER_2",e[e.SHADER_3=9]="SHADER_3",e[e.DESCRIPTOR_SET=10]="DESCRIPTOR_SET",e[e.INPUT_ASSEMBLER=11]="INPUT_ASSEMBLER",e[e.COUNT=12]="COUNT"}(Mo||(Mo=e("ce",{})));var zo,Fo=((qi={})[Mo.VIS_FLAGS]=mo.UINT32,qi[Mo.PASS_COUNT]=mo.UINT32,qi[Mo.PASS_0]=mo.UINT32,qi[Mo.PASS_1]=mo.UINT32,qi[Mo.PASS_2]=mo.UINT32,qi[Mo.PASS_3]=mo.UINT32,qi[Mo.SHADER_0]=mo.UINT32,qi[Mo.SHADER_1]=mo.UINT32,qi[Mo.SHADER_2]=mo.UINT32,qi[Mo.SHADER_3]=mo.UINT32,qi[Mo.DESCRIPTOR_SET]=mo.UINT32,qi[Mo.INPUT_ASSEMBLER]=mo.UINT32,qi[Mo.COUNT]=mo.NEVER,qi);e("cf",new xo(go.BATCH_2D,Fo,Mo)),function(e){e[e.CENTER=0]="CENTER",e[e.HALF_EXTENSION=3]="HALF_EXTENSION",e[e.COUNT=6]="COUNT"}(zo||(zo=e("cg",{})));var Uo,Bo=((Yi={})[zo.CENTER]=mo.FLOAT32,Yi[zo.HALF_EXTENSION]=mo.FLOAT32,Yi[zo.COUNT]=mo.NEVER,Yi);e("ch",new xo(go.AABB,Bo,zo)),function(e){e[e.MAIN_LIGHT=0]="MAIN_LIGHT",e[e.MODEL_ARRAY=1]="MODEL_ARRAY",e[e.SPHERE_LIGHT_ARRAY=2]="SPHERE_LIGHT_ARRAY",e[e.SPOT_LIGHT_ARRAY=3]="SPOT_LIGHT_ARRAY",e[e.BATCH_ARRAY_2D=4]="BATCH_ARRAY_2D",e[e.COUNT=5]="COUNT"}(Uo||(Uo=e("ci",{})));var Go,Ho=((Xi={})[Uo.MAIN_LIGHT]=mo.UINT32,Xi[Uo.MODEL_ARRAY]=mo.UINT32,Xi[Uo.SPHERE_LIGHT_ARRAY]=mo.UINT32,Xi[Uo.SPOT_LIGHT_ARRAY]=mo.UINT32,Xi[Uo.BATCH_ARRAY_2D]=mo.UINT32,Xi[Uo.COUNT]=mo.NEVER,Xi);e("cj",new xo(go.SCENE,Ho,Uo)),function(e){e[e.WIDTH=0]="WIDTH",e[e.HEIGHT=1]="HEIGHT",e[e.EXPOSURE=2]="EXPOSURE",e[e.CLEAR_FLAGS=3]="CLEAR_FLAGS",e[e.CLEAR_DEPTH=4]="CLEAR_DEPTH",e[e.CLEAR_STENCIL=5]="CLEAR_STENCIL",e[e.VISIBILITY=6]="VISIBILITY",e[e.NODE=7]="NODE",e[e.SCENE=8]="SCENE",e[e.FRUSTUM=9]="FRUSTUM",e[e.WINDOW=10]="WINDOW",e[e.FORWARD=11]="FORWARD",e[e.POSITION=14]="POSITION",e[e.VIEW_PORT=17]="VIEW_PORT",e[e.CLEAR_COLOR=21]="CLEAR_COLOR",e[e.MAT_VIEW=25]="MAT_VIEW",e[e.MAT_VIEW_PROJ=41]="MAT_VIEW_PROJ",e[e.MAT_VIEW_PROJ_INV=57]="MAT_VIEW_PROJ_INV",e[e.MAT_PROJ=73]="MAT_PROJ",e[e.MAT_PROJ_INV=89]="MAT_PROJ_INV",e[e.MAT_VIEW_PROJ_OFFSCREEN=105]="MAT_VIEW_PROJ_OFFSCREEN",e[e.MAT_VIEW_PROJ_INV_OFFSCREEN=121]="MAT_VIEW_PROJ_INV_OFFSCREEN",e[e.MAT_PROJ_OFFSCREEN=137]="MAT_PROJ_OFFSCREEN",e[e.MAT_PROJ_INV_OFFSCREEN=153]="MAT_PROJ_INV_OFFSCREEN",e[e.COUNT=169]="COUNT"}(Go||(Go=e("ck",{})));var ko,Vo=((Ki={})[Go.WIDTH]=mo.UINT32,Ki[Go.HEIGHT]=mo.UINT32,Ki[Go.EXPOSURE]=mo.FLOAT32,Ki[Go.CLEAR_FLAGS]=mo.UINT32,Ki[Go.CLEAR_DEPTH]=mo.FLOAT32,Ki[Go.CLEAR_STENCIL]=mo.UINT32,Ki[Go.VISIBILITY]=mo.UINT32,Ki[Go.NODE]=mo.UINT32,Ki[Go.SCENE]=mo.UINT32,Ki[Go.FRUSTUM]=mo.UINT32,Ki[Go.WINDOW]=mo.UINT32,Ki[Go.FORWARD]=mo.FLOAT32,Ki[Go.POSITION]=mo.FLOAT32,Ki[Go.VIEW_PORT]=mo.FLOAT32,Ki[Go.CLEAR_COLOR]=mo.FLOAT32,Ki[Go.MAT_VIEW]=mo.FLOAT32,Ki[Go.MAT_VIEW_PROJ]=mo.FLOAT32,Ki[Go.MAT_VIEW_PROJ_INV]=mo.FLOAT32,Ki[Go.MAT_PROJ]=mo.FLOAT32,Ki[Go.MAT_PROJ_INV]=mo.FLOAT32,Ki[Go.MAT_VIEW_PROJ_OFFSCREEN]=mo.FLOAT32,Ki[Go.MAT_VIEW_PROJ_INV_OFFSCREEN]=mo.FLOAT32,Ki[Go.MAT_PROJ_OFFSCREEN]=mo.FLOAT32,Ki[Go.MAT_PROJ_INV_OFFSCREEN]=mo.FLOAT32,Ki[Go.COUNT]=mo.NEVER,Ki);e("cl",new xo(go.CAMERA,Vo,Go)),function(e){e[e.HAS_CHANGED_FLAGS=0]="HAS_CHANGED_FLAGS",e[e.LAYER=1]="LAYER",e[e.WORLD_SCALE=2]="WORLD_SCALE",e[e.WORLD_POSITION=5]="WORLD_POSITION",e[e.WORLD_ROTATION=8]="WORLD_ROTATION",e[e.WORLD_MATRIX=12]="WORLD_MATRIX",e[e.COUNT=28]="COUNT"}(ko||(ko=e("cm",{})));var jo=((Ji={})[ko.HAS_CHANGED_FLAGS]=mo.UINT32,Ji[ko.LAYER]=mo.UINT32,Ji[ko.WORLD_SCALE]=mo.FLOAT32,Ji[ko.WORLD_POSITION]=mo.FLOAT32,Ji[ko.WORLD_ROTATION]=mo.FLOAT32,Ji[ko.WORLD_MATRIX]=mo.FLOAT32,Ji[ko.COUNT]=mo.NEVER,Ji);delete ko[ko.COUNT],ko[ko.COUNT=ko.LAYER+1]="COUNT";var Wo,qo=e("cn",new xo(go.NODE,jo,ko));!function(e){e[e.CUMULATIVE_TIME=0]="CUMULATIVE_TIME",e[e.FRAME_TIME=1]="FRAME_TIME",e[e.COUNT=2]="COUNT"}(Wo||(Wo=e("co",{})));var Yo,Xo=((Qi={})[Wo.CUMULATIVE_TIME]=mo.FLOAT32,Qi[Wo.FRAME_TIME]=mo.FLOAT32,Qi[Wo.COUNT]=mo.NEVER,Qi);e("cp",new xo(go.ROOT,Xo,Wo,1)),function(e){e[e.HAS_ON_SCREEN_ATTACHMENTS=0]="HAS_ON_SCREEN_ATTACHMENTS",e[e.HAS_OFF_SCREEN_ATTACHMENTS=1]="HAS_OFF_SCREEN_ATTACHMENTS",e[e.FRAMEBUFFER=2]="FRAMEBUFFER",e[e.COUNT=3]="COUNT"}(Yo||(Yo=e("cq",{})));var Ko,Jo=((Zi={})[Yo.HAS_ON_SCREEN_ATTACHMENTS]=mo.UINT32,Zi[Yo.HAS_OFF_SCREEN_ATTACHMENTS]=mo.UINT32,Zi[Yo.FRAMEBUFFER]=mo.UINT32,Zi[Yo.COUNT]=mo.NEVER,Zi);e("cr",new xo(go.RENDER_WINDOW,Jo,Yo,2)),function(e){e[e.VERTICES=0]="VERTICES",e[e.PLANES=24]="PLANES",e[e.COUNT=48]="COUNT"}(Ko||(Ko=e("cs",{})));var Qo,Zo=(($i={})[Ko.VERTICES]=mo.FLOAT32,$i[Ko.PLANES]=mo.FLOAT32,$i[Ko.COUNT]=mo.NEVER,$i),$o=e("ct",new xo(go.FRUSTUM,Zo,Ko));!function(e){e[e.ENABLE=0]="ENABLE",e[e.ILLUM=1]="ILLUM",e[e.SKY_COLOR=2]="SKY_COLOR",e[e.GROUND_ALBEDO=6]="GROUND_ALBEDO",e[e.COUNT=10]="COUNT"}(Qo||(Qo=e("cu",{})));var ea=((eo={})[Qo.ENABLE]=mo.UINT32,eo[Qo.ILLUM]=mo.FLOAT32,eo[Qo.SKY_COLOR]=mo.FLOAT32,eo[Qo.GROUND_ALBEDO]=mo.FLOAT32,eo[Qo.COUNT]=mo.NEVER,eo);delete Qo[Qo.COUNT],Qo[Qo.COUNT=Qo.ILLUM+1]="COUNT";var ta,na=e("cv",new xo(go.AMBIENT,ea,Qo,1));!function(e){e[e.ENABLE=0]="ENABLE",e[e.IS_RGBE=1]="IS_RGBE",e[e.USE_IBL=2]="USE_IBL",e[e.MODEL=3]="MODEL",e[e.COUNT=4]="COUNT"}(ta||(ta=e("cw",{})));var ia,oa=((to={})[ta.ENABLE]=mo.UINT32,to[ta.IS_RGBE]=mo.UINT32,to[ta.USE_IBL]=mo.UINT32,to[ta.MODEL]=mo.UINT32,to[ta.COUNT]=mo.NEVER,to);e("cx",new xo(go.SKYBOX,oa,ta,1)),function(e){e[e.ENABLE=0]="ENABLE",e[e.TYPE=1]="TYPE",e[e.DENSITY=2]="DENSITY",e[e.START=3]="START",e[e.END=4]="END",e[e.ATTEN=5]="ATTEN",e[e.TOP=6]="TOP",e[e.RANGE=7]="RANGE",e[e.COLOR=8]="COLOR",e[e.COUNT=12]="COUNT"}(ia||(ia=e("cy",{})));var aa=((no={})[ia.ENABLE]=mo.UINT32,no[ia.TYPE]=mo.UINT32,no[ia.DENSITY]=mo.FLOAT32,no[ia.START]=mo.FLOAT32,no[ia.END]=mo.FLOAT32,no[ia.ATTEN]=mo.FLOAT32,no[ia.TOP]=mo.FLOAT32,no[ia.RANGE]=mo.FLOAT32,no[ia.COLOR]=mo.FLOAT32,no[ia.COUNT]=mo.NEVER,no);delete ia[ia.COUNT],ia[ia.COUNT=ia.RANGE+1]="COUNT";var ra,sa=e("cz",new xo(go.FOG,aa,ia));!function(e){e[e.ENABLE=0]="ENABLE",e[e.DIRTY=1]="DIRTY",e[e.TYPE=2]="TYPE",e[e.DISTANCE=3]="DISTANCE",e[e.INSTANCE_PASS=4]="INSTANCE_PASS",e[e.PLANAR_PASS=5]="PLANAR_PASS",e[e.NEAR=6]="NEAR",e[e.FAR=7]="FAR",e[e.ASPECT=8]="ASPECT",e[e.PCF_TYPE=9]="PCF_TYPE",e[e.SHADOW_MAP_DIRTY=10]="SHADOW_MAP_DIRTY",e[e.BIAS=11]="BIAS",e[e.PACKING=12]="PACKING",e[e.LINEAR=13]="LINEAR",e[e.SELF_SHADOW=14]="SELF_SHADOW",e[e.NORMAL_BIAS=15]="NORMAL_BIAS",e[e.ORTHO_SIZE=16]="ORTHO_SIZE",e[e.AUTO_ADAPT=17]="AUTO_ADAPT",e[e.COLOR=18]="COLOR",e[e.SIZE=22]="SIZE",e[e.NORMAL=24]="NORMAL",e[e.MAT_LIGHT=27]="MAT_LIGHT",e[e.COUNT=43]="COUNT"}(ra||(ra=e("cA",{})));var ca=((io={})[ra.ENABLE]=mo.UINT32,io[ra.DIRTY]=mo.UINT32,io[ra.TYPE]=mo.UINT32,io[ra.DISTANCE]=mo.FLOAT32,io[ra.INSTANCE_PASS]=mo.UINT32,io[ra.PLANAR_PASS]=mo.UINT32,io[ra.NEAR]=mo.FLOAT32,io[ra.FAR]=mo.FLOAT32,io[ra.ASPECT]=mo.FLOAT32,io[ra.PCF_TYPE]=mo.UINT32,io[ra.SHADOW_MAP_DIRTY]=mo.UINT32,io[ra.BIAS]=mo.FLOAT32,io[ra.PACKING]=mo.UINT32,io[ra.LINEAR]=mo.UINT32,io[ra.SELF_SHADOW]=mo.UINT32,io[ra.NORMAL_BIAS]=mo.FLOAT32,io[ra.ORTHO_SIZE]=mo.FLOAT32,io[ra.AUTO_ADAPT]=mo.UINT32,io[ra.COLOR]=mo.FLOAT32,io[ra.SIZE]=mo.FLOAT32,io[ra.NORMAL]=mo.FLOAT32,io[ra.MAT_LIGHT]=mo.FLOAT32,io[ra.COUNT]=mo.NEVER,io);delete ra[ra.COUNT],ra[ra.COUNT=ra.AUTO_ADAPT+1]="COUNT";var la,fa=e("cB",new xo(go.SHADOW,ca,ra,1));!function(e){e[e.SHADOW=0]="SHADOW",e[e.SKYBOX=1]="SKYBOX",e[e.AMBIENT=2]="AMBIENT",e[e.FOG=3]="FOG",e[e.IS_HDR=4]="IS_HDR",e[e.SHADING_SCALE=5]="SHADING_SCALE",e[e.FP_SCALE=6]="FP_SCALE",e[e.DEFERRED_LIGHT_PASS=7]="DEFERRED_LIGHT_PASS",e[e.DEFERRED_LIGHT_PASS_SHADER=8]="DEFERRED_LIGHT_PASS_SHADER",e[e.DEFERRED_POST_PASS=9]="DEFERRED_POST_PASS",e[e.DEFERRED_POST_PASS_SHADER=10]="DEFERRED_POST_PASS_SHADER",e[e.COUNT=11]="COUNT"}(la||(la=e("cC",{})));var ua,_a=((oo={})[la.SHADOW]=mo.UINT32,oo[la.SKYBOX]=mo.UINT32,oo[la.AMBIENT]=mo.UINT32,oo[la.FOG]=mo.UINT32,oo[la.IS_HDR]=mo.UINT32,oo[la.SHADING_SCALE]=mo.UINT32,oo[la.FP_SCALE]=mo.UINT32,oo[la.DEFERRED_LIGHT_PASS]=mo.UINT32,oo[la.DEFERRED_LIGHT_PASS_SHADER]=mo.UINT32,oo[la.DEFERRED_POST_PASS]=mo.UINT32,oo[la.DEFERRED_POST_PASS_SHADER]=mo.UINT32,oo[la.COUNT]=mo.NEVER,oo);e("cD",new xo(go.PIPELINE_SCENE_DATA,_a,la,1)),function(e){e[e.USE_COLOR_TEMPERATURE=0]="USE_COLOR_TEMPERATURE",e[e.ILLUMINANCE=1]="ILLUMINANCE",e[e.NODE=2]="NODE",e[e.RANGE=3]="RANGE",e[e.TYPE=4]="TYPE",e[e.AABB=5]="AABB",e[e.FRUSTUM=6]="FRUSTUM",e[e.SIZE=7]="SIZE",e[e.SPOT_ANGLE=8]="SPOT_ANGLE",e[e.ASPECT=9]="ASPECT",e[e.DIRECTION=10]="DIRECTION",e[e.COLOR=13]="COLOR",e[e.COLOR_TEMPERATURE_RGB=16]="COLOR_TEMPERATURE_RGB",e[e.POSITION=19]="POSITION",e[e.COUNT=22]="COUNT"}(ua||(ua=e("cE",{})));var ma,ha=((ao={})[ua.USE_COLOR_TEMPERATURE]=mo.UINT32,ao[ua.ILLUMINANCE]=mo.FLOAT32,ao[ua.NODE]=mo.UINT32,ao[ua.RANGE]=mo.FLOAT32,ao[ua.TYPE]=mo.UINT32,ao[ua.AABB]=mo.UINT32,ao[ua.FRUSTUM]=mo.UINT32,ao[ua.SIZE]=mo.FLOAT32,ao[ua.SPOT_ANGLE]=mo.FLOAT32,ao[ua.ASPECT]=mo.FLOAT32,ao[ua.DIRECTION]=mo.FLOAT32,ao[ua.COLOR]=mo.FLOAT32,ao[ua.COLOR_TEMPERATURE_RGB]=mo.FLOAT32,ao[ua.POSITION]=mo.FLOAT32,ao[ua.COUNT]=mo.NEVER,ao);e("cF",new xo(go.LIGHT,ha,ua,3)),function(e){e[e.RADIUS=0]="RADIUS",e[e.CENTER=1]="CENTER",e[e.COUNT=4]="COUNT"}(ma||(ma=e("cG",{})));var da=((ro={})[ma.RADIUS]=mo.FLOAT32,ro[ma.CENTER]=mo.FLOAT32,ro[ma.COUNT]=mo.NEVER,ro);delete ma[ma.COUNT],ma[ma.COUNT=ma.RADIUS+1]="COUNT";var pa,va=e("cH",new xo(go.SPHERE,da,ma,3));!function(e){e[e.STRIDE=0]="STRIDE",e[e.AMOUNT=1]="AMOUNT",e[e.BUFFER=2]="BUFFER",e[e.COUNT=3]="COUNT"}(pa||(pa=e("cI",{})));var ga,xa=((so={})[pa.STRIDE]=mo.UINT32,so[pa.AMOUNT]=mo.UINT32,so[pa.BUFFER]=mo.UINT32,so[pa.COUNT]=mo.NEVER,so);e("cJ",new xo(go.FLAT_BUFFER,xa,pa,3)),function(e){e[e.FLAT_BUFFER_ARRAY=0]="FLAT_BUFFER_ARRAY",e[e.COUNT=1]="COUNT"}(ga||(ga=e("cK",{})));var ya,Ea=((co={})[ga.FLAT_BUFFER_ARRAY]=mo.UINT32,co[ga.COUNT]=mo.NEVER,co);e("cL",new xo(go.SUB_MESH,Ea,ga,3)),function(e){e[e.IS_DISCARD=0]="IS_DISCARD",e[e.POLYGO_MODEL=1]="POLYGO_MODEL",e[e.SHADE_MODEL=2]="SHADE_MODEL",e[e.CULL_MODE=3]="CULL_MODE",e[e.IS_FRONT_FACE_CCW=4]="IS_FRONT_FACE_CCW",e[e.DEPTH_BIAS_ENABLED=5]="DEPTH_BIAS_ENABLED",e[e.DEPTH_BIAS=6]="DEPTH_BIAS",e[e.DEPTH_BIAS_CLAMP=7]="DEPTH_BIAS_CLAMP",e[e.DEPTH_BIAS_SLOP=8]="DEPTH_BIAS_SLOP",e[e.IS_DEPTH_CLIP=9]="IS_DEPTH_CLIP",e[e.IS_MULTI_SAMPLE=10]="IS_MULTI_SAMPLE",e[e.LINE_WIDTH=11]="LINE_WIDTH",e[e.COUNT=12]="COUNT"}(ya||(ya=e("cM",{})));var Sa,Aa=((lo={})[ya.IS_DISCARD]=mo.UINT32,lo[ya.POLYGO_MODEL]=mo.UINT32,lo[ya.SHADE_MODEL]=mo.UINT32,lo[ya.CULL_MODE]=mo.UINT32,lo[ya.IS_FRONT_FACE_CCW]=mo.UINT32,lo[ya.DEPTH_BIAS_ENABLED]=mo.UINT32,lo[ya.DEPTH_BIAS]=mo.FLOAT32,lo[ya.DEPTH_BIAS_CLAMP]=mo.FLOAT32,lo[ya.DEPTH_BIAS_SLOP]=mo.FLOAT32,lo[ya.IS_DEPTH_CLIP]=mo.UINT32,lo[ya.IS_MULTI_SAMPLE]=mo.UINT32,lo[ya.LINE_WIDTH]=mo.FLOAT32,lo[ya.COUNT]=mo.NEVER,lo);e("cN",new xo(go.RASTERIZER_STATE,Aa,ya,9)),function(e){e[e.DEPTH_TEST=0]="DEPTH_TEST",e[e.DEPTH_WRITE=1]="DEPTH_WRITE",e[e.DEPTH_FUNC=2]="DEPTH_FUNC",e[e.STENCIL_TEST_FRONT=3]="STENCIL_TEST_FRONT",e[e.STENCIL_FUNC_FRONT=4]="STENCIL_FUNC_FRONT",e[e.STENCIL_READ_MASK_FRONT=5]="STENCIL_READ_MASK_FRONT",e[e.STENCIL_WRITE_MASK_FRONT=6]="STENCIL_WRITE_MASK_FRONT",e[e.STENCIL_FAIL_OP_FRONT=7]="STENCIL_FAIL_OP_FRONT",e[e.STENCIL_Z_FAIL_OP_FRONT=8]="STENCIL_Z_FAIL_OP_FRONT",e[e.STENCIL_PASS_OP_FRONT=9]="STENCIL_PASS_OP_FRONT",e[e.STENCIL_REF_FRONT=10]="STENCIL_REF_FRONT",e[e.STENCIL_TEST_BACK=11]="STENCIL_TEST_BACK",e[e.STENCIL_FUNC_BACK=12]="STENCIL_FUNC_BACK",e[e.STENCIL_READ_MADK_BACK=13]="STENCIL_READ_MADK_BACK",e[e.STENCIL_WRITE_MASK_BACK=14]="STENCIL_WRITE_MASK_BACK",e[e.STENCIL_FAIL_OP_BACK=15]="STENCIL_FAIL_OP_BACK",e[e.STENCIL_Z_FAIL_OP_BACK=16]="STENCIL_Z_FAIL_OP_BACK",e[e.STENCIL_PASS_OP_BACK=17]="STENCIL_PASS_OP_BACK",e[e.STENCIL_REF_BACK=18]="STENCIL_REF_BACK",e[e.COUNT=19]="COUNT"}(Sa||(Sa=e("cO",{})));var Ca,Ta,Ia=((fo={})[Sa.DEPTH_TEST]=mo.UINT32,fo[Sa.DEPTH_WRITE]=mo.UINT32,fo[Sa.DEPTH_FUNC]=mo.UINT32,fo[Sa.STENCIL_TEST_FRONT]=mo.UINT32,fo[Sa.STENCIL_FUNC_FRONT]=mo.UINT32,fo[Sa.STENCIL_READ_MASK_FRONT]=mo.UINT32,fo[Sa.STENCIL_WRITE_MASK_FRONT]=mo.UINT32,fo[Sa.STENCIL_FAIL_OP_FRONT]=mo.UINT32,fo[Sa.STENCIL_Z_FAIL_OP_FRONT]=mo.UINT32,fo[Sa.STENCIL_PASS_OP_FRONT]=mo.UINT32,fo[Sa.STENCIL_REF_FRONT]=mo.UINT32,fo[Sa.STENCIL_TEST_BACK]=mo.UINT32,fo[Sa.STENCIL_FUNC_BACK]=mo.UINT32,fo[Sa.STENCIL_READ_MADK_BACK]=mo.UINT32,fo[Sa.STENCIL_WRITE_MASK_BACK]=mo.UINT32,fo[Sa.STENCIL_FAIL_OP_BACK]=mo.UINT32,fo[Sa.STENCIL_Z_FAIL_OP_BACK]=mo.UINT32,fo[Sa.STENCIL_PASS_OP_BACK]=mo.UINT32,fo[Sa.STENCIL_REF_BACK]=mo.UINT32,fo[Sa.COUNT]=mo.NEVER,fo);e("cP",new xo(go.DEPTH_STENCIL_STATE,Ia,Sa,9)),function(e){e[e.BLEND=0]="BLEND",e[e.BLEND_SRC=1]="BLEND_SRC",e[e.BLEND_DST=2]="BLEND_DST",e[e.BLEND_EQ=3]="BLEND_EQ",e[e.BLEND_SRC_ALPHA=4]="BLEND_SRC_ALPHA",e[e.BLEND_DST_ALPHA=5]="BLEND_DST_ALPHA",e[e.BLEND_ALPHA_EQ=6]="BLEND_ALPHA_EQ",e[e.BLEND_COLOR_MASK=7]="BLEND_COLOR_MASK",e[e.COUNT=8]="COUNT"}(Ca||(Ca=e("cQ",{}))),(uo={})[Ca.BLEND]=mo.UINT32,uo[Ca.BLEND_SRC]=mo.UINT32,uo[Ca.BLEND_DST]=mo.UINT32,uo[Ca.BLEND_EQ]=mo.UINT32,uo[Ca.BLEND_SRC_ALPHA]=mo.UINT32,uo[Ca.BLEND_DST_ALPHA]=mo.UINT32,uo[Ca.BLEND_ALPHA_EQ]=mo.UINT32,uo[Ca.BLEND_COLOR_MASK]=mo.UINT32,uo[Ca.COUNT]=mo.NEVER,e("cR",new xo(go.BLEND_TARGET,Ia,Ca,9)),function(e){e[e.IS_A2C=0]="IS_A2C",e[e.IS_INDEPEND=1]="IS_INDEPEND",e[e.BLEND_COLOR=2]="BLEND_COLOR",e[e.BLEND_TARGET=6]="BLEND_TARGET",e[e.COUNT=7]="COUNT"}(Ta||(Ta=e("cS",{})));var Pa=((_o={})[Ta.IS_A2C]=mo.UINT32,_o[Ta.IS_INDEPEND]=mo.UINT32,_o[Ta.BLEND_COLOR]=mo.FLOAT32,_o[Ta.BLEND_TARGET]=mo.UINT32,_o[Ta.COUNT]=mo.NEVER,_o),wa=(e("cT",new xo(go.BLEND_STATE,Pa,Ta,9)),e("bu",function(){function e(){this._skyColor=new Pn(51,128,204,1),this._groundAlbedo=new Pn(51,51,51,255),this._albedoArray=Float32Array.from([.2,.2,.2,1]),this._colorArray=Float32Array.from([.2,.5,.8,1]),this._handle=Co,this._handle=na.alloc()}var t=e.prototype;return t.initialize=function(e){this._skyColor.set(e.skyColor),this._groundAlbedo.set(e.groundAlbedo),Pn.toArray(this._colorArray,this._skyColor),Rn.toArray(this._albedoArray,this._groundAlbedo),na.setVec4(this._handle,Qo.SKY_COLOR,this._skyColor),na.setVec4(this._handle,Qo.GROUND_ALBEDO,this._groundAlbedo),na.set(this._handle,Qo.ILLUM,e.skyIllum)},t.destroy=function(){this._handle&&(na.free(this._handle),this._handle=Co)},le(e,[{key:"colorArray",get:function(){return this._colorArray}},{key:"albedoArray",get:function(){return this._albedoArray}},{key:"enabled",get:function(){return na.get(this._handle,Qo.ENABLE)},set:function(e){na.set(this._handle,Qo.ENABLE,e?1:0)}},{key:"skyColor",get:function(){return this._skyColor},set:function(e){this._skyColor.set(e),Pn.toArray(this._colorArray,this._skyColor),na.setVec4(this._handle,Qo.SKY_COLOR,this._skyColor)}},{key:"skyIllum",get:function(){return na.get(this._handle,Qo.ILLUM)},set:function(e){na.set(this._handle,Qo.ILLUM,e)}},{key:"groundAlbedo",get:function(){return this._groundAlbedo},set:function(e){this._groundAlbedo.set(e),Rn.toArray(this._albedoArray,this._groundAlbedo),na.setVec4(this._handle,Qo.GROUND_ALBEDO,this._groundAlbedo)}},{key:"handle",get:function(){return this._handle}}]),e}()));wa.SUN_ILLUM=65e3,wa.SKY_ILLUM=2e4,s.Ambient=wa;var Ra=new Rn,ba=new Rn,Na=new Rn,Oa=new Rn,Da=new Rn,Ma=new Rn,La=new Array(3),za=new Array(3);function Fa(e,t){return Rn.dot(t.n,e)-t.d}function Ua(e,t,n){return Rn.copy(e,t),Rn.subtract(Da,n.center,n.halfExtents),Rn.add(Ma,n.center,n.halfExtents),e.x=e.x<Da.x?Da.x:e.x,e.y=e.y<Da.y?Da.y:e.y,e.z=e.z<Da.z?Da.z:e.z,e.x=e.x>Ma.x?Ma.x:e.x,e.y=e.y>Ma.y?Ma.y:e.y,e.z=e.z>Ma.z?Ma.z:e.z,e}function Ba(e,t,n){Rn.set(Ra,n.orientation.m00,n.orientation.m01,n.orientation.m02),Rn.set(ba,n.orientation.m03,n.orientation.m04,n.orientation.m05),Rn.set(Na,n.orientation.m06,n.orientation.m07,n.orientation.m08),La[0]=Ra,La[1]=ba,La[2]=Na,za[0]=n.halfExtents.x,za[1]=n.halfExtents.y,za[2]=n.halfExtents.z,Rn.subtract(Oa,t,n.center),Rn.set(e,n.center.x,n.center.y,n.center.z);for(var i=0;i<3;i++){var o=Rn.dot(Oa,La[i]);o>za[i]&&(o=za[i]),o<-za[i]&&(o=-za[i]),e.x+=o*La[i].x,e.y+=o*La[i].y,e.z+=o*La[i].z}return e}e("fx",Object.freeze({__proto__:null,point_plane:Fa,pt_point_plane:function(e,t,n){var i=Fa(t,n);return Rn.subtract(e,t,Rn.multiplyScalar(e,n.n,i))},pt_point_aabb:Ua,pt_point_obb:Ba,pt_point_line:function(e,t,n,i){Rn.subtract(Ra,n,i);var o=Ra,a=Rn.lengthSqr(o);if(0==a)Rn.copy(e,n);else{Rn.subtract(Ra,t,n);var r=Rn.dot(Ra,o)/a;r<0?Rn.copy(e,n):r>1?Rn.copy(e,i):Rn.scaleAndAdd(e,n,o,r)}}}));var Ga=e("fy",{SHAPE_RAY:1,SHAPE_LINE:2,SHAPE_SPHERE:4,SHAPE_AABB:8,SHAPE_OBB:16,SHAPE_PLANE:32,SHAPE_TRIANGLE:64,SHAPE_FRUSTUM:128,SHAPE_FRUSTUM_ACCURATE:256,SHAPE_CAPSULE:512}),Ha=e("fz",function(){function e(e,t,n,i,o,a){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=-1),this.s=void 0,this.e=void 0,this._type=void 0,this._type=Ga.SHAPE_LINE,this.s=new Rn(e,t,n),this.e=new Rn(i,o,a)}return e.create=function(t,n,i,o,a,r){return new e(t,n,i,o,a,r)},e.clone=function(t){return new e(t.s.x,t.s.y,t.s.z,t.e.x,t.e.y,t.e.z)},e.copy=function(e,t){return Rn.copy(e.s,t.s),Rn.copy(e.e,t.e),e},e.fromPoints=function(e,t,n){return Rn.copy(e.s,t),Rn.copy(e.e,n),e},e.set=function(e,t,n,i,o,a,r){return e.s.x=t,e.s.y=n,e.s.z=i,e.e.x=o,e.e.y=a,e.e.z=r,e},e.len=function(e){return Rn.distance(e.s,e.e)},e.prototype.length=function(){return Rn.distance(this.s,this.e)},le(e,[{key:"type",get:function(){return this._type}}]),e}()),ka=e("eU",function(){function e(e,t,n,i,o,a){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=-1),this.o=void 0,this.d=void 0,this._type=void 0,this._type=Ga.SHAPE_RAY,this.o=new Rn(e,t,n),this.d=new Rn(i,o,a)}return e.create=function(t,n,i,o,a,r){return void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=0),void 0===r&&(r=1),new e(t,n,i,o,a,r)},e.clone=function(t){return new e(t.o.x,t.o.y,t.o.z,t.d.x,t.d.y,t.d.z)},e.copy=function(e,t){return Rn.copy(e.o,t.o),Rn.copy(e.d,t.d),e},e.fromPoints=function(e,t,n){return Rn.copy(e.o,t),Rn.normalize(e.d,Rn.subtract(e.d,n,t)),e},e.set=function(e,t,n,i,o,a,r){return e.o.x=t,e.o.y=n,e.o.z=i,e.d.x=o,e.d.y=a,e.d.z=r,e},e.prototype.computeHit=function(e,t){Rn.normalize(e,this.d),Rn.scaleAndAdd(e,this.o,e,t)},le(e,[{key:"type",get:function(){return this._type}}]),e}()),Va=new Rn,ja=new Rn,Wa=new Rn,qa=new Rn;function Ya(e){return Math.max(Math.max(e.x,e.y),e.z)}var Xa,Ka,Ja,Qa,Za,$a,er,tr,nr,ir,or,ar,rr,sr,cr,lr,fr,ur,_r,mr,hr,dr,pr,vr,gr,xr,yr,Er,Sr,Ar,Cr,Tr,Ir,Pr,wr,Rr,br,Nr,Or=e("e_",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),this._center=new Rn(0,0,0),this._poolHandle=Co,this._type=void 0,this._type=Ga.SHAPE_SPHERE,this._center=new Rn(e,t,n),this._poolHandle=va.alloc(),va.setVec3(this._poolHandle,ma.CENTER,this._center),va.set(this._poolHandle,ma.RADIUS,i)}e.create=function(t,n,i,o){return new e(t,n,i,o)},e.clone=function(t){return new e(t.center.x,t.center.y,t.center.z,t.radius)},e.copy=function(e,t){return Rn.copy(e.center,t.center),e.radius=t.radius,e},e.fromPoints=function(e,t,n){return Rn.multiplyScalar(e.center,Rn.add(Va,t,n),.5),e.radius=.5*Rn.subtract(Va,n,t).length(),e},e.set=function(e,t,n,i,o){return e.center.x=t,e.center.y=n,e.center.z=i,e.radius=o,e},e.mergePoint=function(e,t,n){if(t.radius<0)return e.center.set(n),e.radius=0,e;Rn.subtract(ja,n,t.center);var i=ja.length();if(i>t.radius){var o=.5*(i-t.radius);e.radius+=o,Rn.multiplyScalar(ja,ja,o/i),Rn.add(e.center,e.center,ja)}return e},e.mergeAABB=function(t,n,i){return i.getBoundary(Wa,qa),e.mergePoint(t,n,Wa),e.mergePoint(t,n,qa),t};var t=e.prototype;return t.destroy=function(){this._poolHandle&&(va.free(this._poolHandle),this._poolHandle=Co)},t.clone=function(){return e.clone(this)},t.copy=function(t){return e.copy(this,t)},t.getBoundary=function(e,t){Rn.set(e,this.center.x-this.radius,this.center.y-this.radius,this.center.z-this.radius),Rn.set(t,this.center.x+this.radius,this.center.y+this.radius,this.center.z+this.radius)},t.transform=function(e,t,n,i,o){Rn.transformMat4(o.center,this.center,e),o.radius=this.radius*Ya(i)},t.translateAndRotate=function(e,t,n){Rn.transformMat4(n.center,this.center,e)},t.setScale=function(e,t){t.radius=this.radius*Ya(e)},le(e,[{key:"center",get:function(){return this._center},set:function(e){this._center=e,va.setVec3(this._poolHandle,ma.CENTER,this._center)}},{key:"radius",get:function(){return va.get(this._poolHandle,ma.RADIUS)},set:function(e){va.set(this._poolHandle,ma.RADIUS,e)}},{key:"handle",get:function(){return this._poolHandle}},{key:"type",get:function(){return this._type}}]),e}()),Dr=e("fB",function(){function e(e,t,n,i,o,a,r,s,c){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),void 0===o&&(o=0),void 0===a&&(a=0),void 0===r&&(r=0),void 0===s&&(s=1),void 0===c&&(c=0),this.a=void 0,this.b=void 0,this.c=void 0,this._type=void 0,this._type=Ga.SHAPE_TRIANGLE,this.a=new Rn(e,t,n),this.b=new Rn(i,o,a),this.c=new Rn(r,s,c)}return e.create=function(t,n,i,o,a,r,s,c,l){return void 0===t&&(t=1),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=0),void 0===r&&(r=0),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=1),new e(t,n,i,o,a,r,s,c,l)},e.clone=function(t){return new e(t.a.x,t.a.y,t.a.z,t.b.x,t.b.y,t.b.z,t.c.x,t.c.y,t.c.z)},e.copy=function(e,t){return Rn.copy(e.a,t.a),Rn.copy(e.b,t.b),Rn.copy(e.c,t.c),e},e.fromPoints=function(e,t,n,i){return Rn.copy(e.a,t),Rn.copy(e.b,n),Rn.copy(e.c,i),e},e.set=function(e,t,n,i,o,a,r,s,c,l){return e.a.x=t,e.a.y=n,e.a.z=i,e.b.x=o,e.b.y=a,e.b.z=r,e.c.x=s,e.c.y=c,e.c.z=l,e},le(e,[{key:"type",get:function(){return this._type}}]),e}()),Mr=function(e,t,n){for(var i=0;i<t.length;++i)e.length<=i&&e.push(new n),e[i].copy(t[i]);e.length=t.length};!function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.BUFFER=1]="BUFFER",e[e.TEXTURE=2]="TEXTURE",e[e.RENDER_PASS=3]="RENDER_PASS",e[e.FRAMEBUFFER=4]="FRAMEBUFFER",e[e.SAMPLER=5]="SAMPLER",e[e.SHADER=6]="SHADER",e[e.DESCRIPTOR_SET_LAYOUT=7]="DESCRIPTOR_SET_LAYOUT",e[e.PIPELINE_LAYOUT=8]="PIPELINE_LAYOUT",e[e.PIPELINE_STATE=9]="PIPELINE_STATE",e[e.DESCRIPTOR_SET=10]="DESCRIPTOR_SET",e[e.INPUT_ASSEMBLER=11]="INPUT_ASSEMBLER",e[e.COMMAND_BUFFER=12]="COMMAND_BUFFER",e[e.QUEUE=13]="QUEUE",e[e.GLOBAL_BARRIER=14]="GLOBAL_BARRIER",e[e.TEXTURE_BARRIER=15]="TEXTURE_BARRIER",e[e.BUFFER_BARRIER=16]="BUFFER_BARRIER"}(Xa||(Xa=e("O",{}))),function(e){e[e.UNREADY=0]="UNREADY",e[e.FAILED=1]="FAILED",e[e.SUCCESS=2]="SUCCESS"}(Ka||(Ka=e("S",{}))),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.GLES2=1]="GLES2",e[e.GLES3=2]="GLES3",e[e.METAL=3]="METAL",e[e.VULKAN=4]="VULKAN",e[e.WEBGL=5]="WEBGL",e[e.WEBGL2=6]="WEBGL2",e[e.WEBGPU=7]="WEBGPU"}(Ja||(Ja=e("A",{}))),function(e){e[e.IDENTITY=0]="IDENTITY",e[e.ROTATE_90=1]="ROTATE_90",e[e.ROTATE_180=2]="ROTATE_180",e[e.ROTATE_270=3]="ROTATE_270"}(Qa||(Qa=e("v",{}))),function(e){e[e.COLOR_FLOAT=0]="COLOR_FLOAT",e[e.COLOR_HALF_FLOAT=1]="COLOR_HALF_FLOAT",e[e.TEXTURE_FLOAT=2]="TEXTURE_FLOAT",e[e.TEXTURE_HALF_FLOAT=3]="TEXTURE_HALF_FLOAT",e[e.TEXTURE_FLOAT_LINEAR=4]="TEXTURE_FLOAT_LINEAR",e[e.TEXTURE_HALF_FLOAT_LINEAR=5]="TEXTURE_HALF_FLOAT_LINEAR",e[e.FORMAT_R11G11B10F=6]="FORMAT_R11G11B10F",e[e.FORMAT_D16=7]="FORMAT_D16",e[e.FORMAT_D16S8=8]="FORMAT_D16S8",e[e.FORMAT_D24=9]="FORMAT_D24",e[e.FORMAT_D24S8=10]="FORMAT_D24S8",e[e.FORMAT_D32F=11]="FORMAT_D32F",e[e.FORMAT_D32FS8=12]="FORMAT_D32FS8",e[e.FORMAT_ETC1=13]="FORMAT_ETC1",e[e.FORMAT_ETC2=14]="FORMAT_ETC2",e[e.FORMAT_DXT=15]="FORMAT_DXT",e[e.FORMAT_PVRTC=16]="FORMAT_PVRTC",e[e.FORMAT_ASTC=17]="FORMAT_ASTC",e[e.FORMAT_RGB8=18]="FORMAT_RGB8",e[e.MSAA=19]="MSAA",e[e.ELEMENT_INDEX_UINT=20]="ELEMENT_INDEX_UINT",e[e.INSTANCED_ARRAYS=21]="INSTANCED_ARRAYS",e[e.MULTIPLE_RENDER_TARGETS=22]="MULTIPLE_RENDER_TARGETS",e[e.BLEND_MINMAX=23]="BLEND_MINMAX",e[e.DEPTH_BOUNDS=24]="DEPTH_BOUNDS",e[e.LINE_WIDTH=25]="LINE_WIDTH",e[e.STENCIL_WRITE_MASK=26]="STENCIL_WRITE_MASK",e[e.STENCIL_COMPARE_MASK=27]="STENCIL_COMPARE_MASK",e[e.MULTITHREADED_SUBMISSION=28]="MULTITHREADED_SUBMISSION",e[e.COMPUTE_SHADER=29]="COMPUTE_SHADER",e[e.COUNT=30]="COUNT"}(Za||(Za=e("F",{}))),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.A8=1]="A8",e[e.L8=2]="L8",e[e.LA8=3]="LA8",e[e.R8=4]="R8",e[e.R8SN=5]="R8SN",e[e.R8UI=6]="R8UI",e[e.R8I=7]="R8I",e[e.R16F=8]="R16F",e[e.R16UI=9]="R16UI",e[e.R16I=10]="R16I",e[e.R32F=11]="R32F",e[e.R32UI=12]="R32UI",e[e.R32I=13]="R32I",e[e.RG8=14]="RG8",e[e.RG8SN=15]="RG8SN",e[e.RG8UI=16]="RG8UI",e[e.RG8I=17]="RG8I",e[e.RG16F=18]="RG16F",e[e.RG16UI=19]="RG16UI",e[e.RG16I=20]="RG16I",e[e.RG32F=21]="RG32F",e[e.RG32UI=22]="RG32UI",e[e.RG32I=23]="RG32I",e[e.RGB8=24]="RGB8",e[e.SRGB8=25]="SRGB8",e[e.RGB8SN=26]="RGB8SN",e[e.RGB8UI=27]="RGB8UI",e[e.RGB8I=28]="RGB8I",e[e.RGB16F=29]="RGB16F",e[e.RGB16UI=30]="RGB16UI",e[e.RGB16I=31]="RGB16I",e[e.RGB32F=32]="RGB32F",e[e.RGB32UI=33]="RGB32UI",e[e.RGB32I=34]="RGB32I",e[e.RGBA8=35]="RGBA8",e[e.BGRA8=36]="BGRA8",e[e.SRGB8_A8=37]="SRGB8_A8",e[e.RGBA8SN=38]="RGBA8SN",e[e.RGBA8UI=39]="RGBA8UI",e[e.RGBA8I=40]="RGBA8I",e[e.RGBA16F=41]="RGBA16F",e[e.RGBA16UI=42]="RGBA16UI",e[e.RGBA16I=43]="RGBA16I",e[e.RGBA32F=44]="RGBA32F",e[e.RGBA32UI=45]="RGBA32UI",e[e.RGBA32I=46]="RGBA32I",e[e.R5G6B5=47]="R5G6B5",e[e.R11G11B10F=48]="R11G11B10F",e[e.RGB5A1=49]="RGB5A1",e[e.RGBA4=50]="RGBA4",e[e.RGB10A2=51]="RGB10A2",e[e.RGB10A2UI=52]="RGB10A2UI",e[e.RGB9E5=53]="RGB9E5",e[e.D16=54]="D16",e[e.D16S8=55]="D16S8",e[e.D24=56]="D24",e[e.D24S8=57]="D24S8",e[e.D32F=58]="D32F",e[e.D32F_S8=59]="D32F_S8",e[e.BC1=60]="BC1",e[e.BC1_ALPHA=61]="BC1_ALPHA",e[e.BC1_SRGB=62]="BC1_SRGB",e[e.BC1_SRGB_ALPHA=63]="BC1_SRGB_ALPHA",e[e.BC2=64]="BC2",e[e.BC2_SRGB=65]="BC2_SRGB",e[e.BC3=66]="BC3",e[e.BC3_SRGB=67]="BC3_SRGB",e[e.BC4=68]="BC4",e[e.BC4_SNORM=69]="BC4_SNORM",e[e.BC5=70]="BC5",e[e.BC5_SNORM=71]="BC5_SNORM",e[e.BC6H_UF16=72]="BC6H_UF16",e[e.BC6H_SF16=73]="BC6H_SF16",e[e.BC7=74]="BC7",e[e.BC7_SRGB=75]="BC7_SRGB",e[e.ETC_RGB8=76]="ETC_RGB8",e[e.ETC2_RGB8=77]="ETC2_RGB8",e[e.ETC2_SRGB8=78]="ETC2_SRGB8",e[e.ETC2_RGB8_A1=79]="ETC2_RGB8_A1",e[e.ETC2_SRGB8_A1=80]="ETC2_SRGB8_A1",e[e.ETC2_RGBA8=81]="ETC2_RGBA8",e[e.ETC2_SRGB8_A8=82]="ETC2_SRGB8_A8",e[e.EAC_R11=83]="EAC_R11",e[e.EAC_R11SN=84]="EAC_R11SN",e[e.EAC_RG11=85]="EAC_RG11",e[e.EAC_RG11SN=86]="EAC_RG11SN",e[e.PVRTC_RGB2=87]="PVRTC_RGB2",e[e.PVRTC_RGBA2=88]="PVRTC_RGBA2",e[e.PVRTC_RGB4=89]="PVRTC_RGB4",e[e.PVRTC_RGBA4=90]="PVRTC_RGBA4",e[e.PVRTC2_2BPP=91]="PVRTC2_2BPP",e[e.PVRTC2_4BPP=92]="PVRTC2_4BPP",e[e.ASTC_RGBA_4x4=93]="ASTC_RGBA_4x4",e[e.ASTC_RGBA_5x4=94]="ASTC_RGBA_5x4",e[e.ASTC_RGBA_5x5=95]="ASTC_RGBA_5x5",e[e.ASTC_RGBA_6x5=96]="ASTC_RGBA_6x5",e[e.ASTC_RGBA_6x6=97]="ASTC_RGBA_6x6",e[e.ASTC_RGBA_8x5=98]="ASTC_RGBA_8x5",e[e.ASTC_RGBA_8x6=99]="ASTC_RGBA_8x6",e[e.ASTC_RGBA_8x8=100]="ASTC_RGBA_8x8",e[e.ASTC_RGBA_10x5=101]="ASTC_RGBA_10x5",e[e.ASTC_RGBA_10x6=102]="ASTC_RGBA_10x6",e[e.ASTC_RGBA_10x8=103]="ASTC_RGBA_10x8",e[e.ASTC_RGBA_10x10=104]="ASTC_RGBA_10x10",e[e.ASTC_RGBA_12x10=105]="ASTC_RGBA_12x10",e[e.ASTC_RGBA_12x12=106]="ASTC_RGBA_12x12",e[e.ASTC_SRGBA_4x4=107]="ASTC_SRGBA_4x4",e[e.ASTC_SRGBA_5x4=108]="ASTC_SRGBA_5x4",e[e.ASTC_SRGBA_5x5=109]="ASTC_SRGBA_5x5",e[e.ASTC_SRGBA_6x5=110]="ASTC_SRGBA_6x5",e[e.ASTC_SRGBA_6x6=111]="ASTC_SRGBA_6x6",e[e.ASTC_SRGBA_8x5=112]="ASTC_SRGBA_8x5",e[e.ASTC_SRGBA_8x6=113]="ASTC_SRGBA_8x6",e[e.ASTC_SRGBA_8x8=114]="ASTC_SRGBA_8x8",e[e.ASTC_SRGBA_10x5=115]="ASTC_SRGBA_10x5",e[e.ASTC_SRGBA_10x6=116]="ASTC_SRGBA_10x6",e[e.ASTC_SRGBA_10x8=117]="ASTC_SRGBA_10x8",e[e.ASTC_SRGBA_10x10=118]="ASTC_SRGBA_10x10",e[e.ASTC_SRGBA_12x10=119]="ASTC_SRGBA_12x10",e[e.ASTC_SRGBA_12x12=120]="ASTC_SRGBA_12x12",e[e.COUNT=121]="COUNT"}($a||($a=e("x",{}))),function(e){e[e.NONE=0]="NONE",e[e.UNORM=1]="UNORM",e[e.SNORM=2]="SNORM",e[e.UINT=3]="UINT",e[e.INT=4]="INT",e[e.UFLOAT=5]="UFLOAT",e[e.FLOAT=6]="FLOAT"}(er||(er=e("y",{}))),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.BOOL=1]="BOOL",e[e.BOOL2=2]="BOOL2",e[e.BOOL3=3]="BOOL3",e[e.BOOL4=4]="BOOL4",e[e.INT=5]="INT",e[e.INT2=6]="INT2",e[e.INT3=7]="INT3",e[e.INT4=8]="INT4",e[e.UINT=9]="UINT",e[e.UINT2=10]="UINT2",e[e.UINT3=11]="UINT3",e[e.UINT4=12]="UINT4",e[e.FLOAT=13]="FLOAT",e[e.FLOAT2=14]="FLOAT2",e[e.FLOAT3=15]="FLOAT3",e[e.FLOAT4=16]="FLOAT4",e[e.MAT2=17]="MAT2",e[e.MAT2X3=18]="MAT2X3",e[e.MAT2X4=19]="MAT2X4",e[e.MAT3X2=20]="MAT3X2",e[e.MAT3=21]="MAT3",e[e.MAT3X4=22]="MAT3X4",e[e.MAT4X2=23]="MAT4X2",e[e.MAT4X3=24]="MAT4X3",e[e.MAT4=25]="MAT4",e[e.SAMPLER1D=26]="SAMPLER1D",e[e.SAMPLER1D_ARRAY=27]="SAMPLER1D_ARRAY",e[e.SAMPLER2D=28]="SAMPLER2D",e[e.SAMPLER2D_ARRAY=29]="SAMPLER2D_ARRAY",e[e.SAMPLER3D=30]="SAMPLER3D",e[e.SAMPLER_CUBE=31]="SAMPLER_CUBE",e[e.SAMPLER=32]="SAMPLER",e[e.TEXTURE1D=33]="TEXTURE1D",e[e.TEXTURE1D_ARRAY=34]="TEXTURE1D_ARRAY",e[e.TEXTURE2D=35]="TEXTURE2D",e[e.TEXTURE2D_ARRAY=36]="TEXTURE2D_ARRAY",e[e.TEXTURE3D=37]="TEXTURE3D",e[e.TEXTURE_CUBE=38]="TEXTURE_CUBE",e[e.IMAGE1D=39]="IMAGE1D",e[e.IMAGE1D_ARRAY=40]="IMAGE1D_ARRAY",e[e.IMAGE2D=41]="IMAGE2D",e[e.IMAGE2D_ARRAY=42]="IMAGE2D_ARRAY",e[e.IMAGE3D=43]="IMAGE3D",e[e.IMAGE_CUBE=44]="IMAGE_CUBE",e[e.SUBPASS_INPUT=45]="SUBPASS_INPUT",e[e.COUNT=46]="COUNT"}(tr||(tr=e("T",{}))),function(e){e[e.NONE=0]="NONE",e[e.TRANSFER_SRC=1]="TRANSFER_SRC",e[e.TRANSFER_DST=2]="TRANSFER_DST",e[e.INDEX=4]="INDEX",e[e.VERTEX=8]="VERTEX",e[e.UNIFORM=16]="UNIFORM",e[e.STORAGE=32]="STORAGE",e[e.INDIRECT=64]="INDIRECT"}(nr||(nr=e("z",{}))),function(e){e[e.NONE=0]="NONE"}(ir||(ir=e("E",{}))),function(e){e[e.NONE=0]="NONE",e[e.READ_ONLY=1]="READ_ONLY",e[e.WRITE_ONLY=2]="WRITE_ONLY",e[e.READ_WRITE=3]="READ_WRITE"}(or||(or=e("M",{}))),function(e){e[e.NONE=0]="NONE",e[e.DEVICE=1]="DEVICE",e[e.HOST=2]="HOST"}(ar||(ar=e("G",{}))),function(e){e[e.TEX1D=0]="TEX1D",e[e.TEX2D=1]="TEX2D",e[e.TEX3D=2]="TEX3D",e[e.CUBE=3]="CUBE",e[e.TEX1D_ARRAY=4]="TEX1D_ARRAY",e[e.TEX2D_ARRAY=5]="TEX2D_ARRAY"}(rr||(rr=e("H",{}))),function(e){e[e.NONE=0]="NONE",e[e.TRANSFER_SRC=1]="TRANSFER_SRC",e[e.TRANSFER_DST=2]="TRANSFER_DST",e[e.SAMPLED=4]="SAMPLED",e[e.STORAGE=8]="STORAGE",e[e.COLOR_ATTACHMENT=16]="COLOR_ATTACHMENT",e[e.DEPTH_STENCIL_ATTACHMENT=32]="DEPTH_STENCIL_ATTACHMENT",e[e.TRANSIENT_ATTACHMENT=64]="TRANSIENT_ATTACHMENT",e[e.INPUT_ATTACHMENT=128]="INPUT_ATTACHMENT"}(sr||(sr=e("I",{}))),function(e){e[e.NONE=0]="NONE",e[e.GEN_MIPMAP=1]="GEN_MIPMAP",e[e.IMMUTABLE=2]="IMMUTABLE"}(cr||(cr=e("J",{}))),function(e){e[e.X1=0]="X1",e[e.X2=1]="X2",e[e.X4=2]="X4",e[e.X8=3]="X8",e[e.X16=4]="X16",e[e.X32=5]="X32",e[e.X64=6]="X64"}(lr||(lr=e("K",{}))),function(e){e[e.NONE=0]="NONE",e[e.POINT=1]="POINT",e[e.LINEAR=2]="LINEAR",e[e.ANISOTROPIC=3]="ANISOTROPIC"}(fr||(fr=e("L",{}))),function(e){e[e.WRAP=0]="WRAP",e[e.MIRROR=1]="MIRROR",e[e.CLAMP=2]="CLAMP",e[e.BORDER=3]="BORDER"}(ur||(ur=e("N",{}))),function(e){e[e.NEVER=0]="NEVER",e[e.LESS=1]="LESS",e[e.EQUAL=2]="EQUAL",e[e.LESS_EQUAL=3]="LESS_EQUAL",e[e.GREATER=4]="GREATER",e[e.NOT_EQUAL=5]="NOT_EQUAL",e[e.GREATER_EQUAL=6]="GREATER_EQUAL",e[e.ALWAYS=7]="ALWAYS"}(_r||(_r=e("Q",{}))),function(e){e[e.ZERO=0]="ZERO",e[e.KEEP=1]="KEEP",e[e.REPLACE=2]="REPLACE",e[e.INCR=3]="INCR",e[e.DECR=4]="DECR",e[e.INVERT=5]="INVERT",e[e.INCR_WRAP=6]="INCR_WRAP",e[e.DECR_WRAP=7]="DECR_WRAP"}(mr||(mr=e("U",{}))),function(e){e[e.ZERO=0]="ZERO",e[e.ONE=1]="ONE",e[e.SRC_ALPHA=2]="SRC_ALPHA",e[e.DST_ALPHA=3]="DST_ALPHA",e[e.ONE_MINUS_SRC_ALPHA=4]="ONE_MINUS_SRC_ALPHA",e[e.ONE_MINUS_DST_ALPHA=5]="ONE_MINUS_DST_ALPHA",e[e.SRC_COLOR=6]="SRC_COLOR",e[e.DST_COLOR=7]="DST_COLOR",e[e.ONE_MINUS_SRC_COLOR=8]="ONE_MINUS_SRC_COLOR",e[e.ONE_MINUS_DST_COLOR=9]="ONE_MINUS_DST_COLOR",e[e.SRC_ALPHA_SATURATE=10]="SRC_ALPHA_SATURATE",e[e.CONSTANT_COLOR=11]="CONSTANT_COLOR",e[e.ONE_MINUS_CONSTANT_COLOR=12]="ONE_MINUS_CONSTANT_COLOR",e[e.CONSTANT_ALPHA=13]="CONSTANT_ALPHA",e[e.ONE_MINUS_CONSTANT_ALPHA=14]="ONE_MINUS_CONSTANT_ALPHA"}(hr||(hr=e("V",{}))),function(e){e[e.ADD=0]="ADD",e[e.SUB=1]="SUB",e[e.REV_SUB=2]="REV_SUB",e[e.MIN=3]="MIN",e[e.MAX=4]="MAX"}(dr||(dr=e("W",{}))),function(e){e[e.NONE=0]="NONE",e[e.R=1]="R",e[e.G=2]="G",e[e.B=4]="B",e[e.A=8]="A",e[e.ALL=15]="ALL"}(pr||(pr=e("X",{}))),function(e){e[e.NONE=0]="NONE",e[e.VERTEX=1]="VERTEX",e[e.CONTROL=2]="CONTROL",e[e.EVALUATION=4]="EVALUATION",e[e.GEOMETRY=8]="GEOMETRY",e[e.FRAGMENT=16]="FRAGMENT",e[e.COMPUTE=32]="COMPUTE",e[e.ALL=63]="ALL"}(vr||(vr=e("Y",{}))),function(e){e[e.LOAD=0]="LOAD",e[e.CLEAR=1]="CLEAR",e[e.DISCARD=2]="DISCARD"}(gr||(gr=e("Z",{}))),function(e){e[e.STORE=0]="STORE",e[e.DISCARD=1]="DISCARD"}(xr||(xr=e("$",{}))),function(e){e[e.NONE=0]="NONE",e[e.INDIRECT_BUFFER=1]="INDIRECT_BUFFER",e[e.INDEX_BUFFER=2]="INDEX_BUFFER",e[e.VERTEX_BUFFER=3]="VERTEX_BUFFER",e[e.VERTEX_SHADER_READ_UNIFORM_BUFFER=4]="VERTEX_SHADER_READ_UNIFORM_BUFFER",e[e.VERTEX_SHADER_READ_TEXTURE=5]="VERTEX_SHADER_READ_TEXTURE",e[e.VERTEX_SHADER_READ_OTHER=6]="VERTEX_SHADER_READ_OTHER",e[e.FRAGMENT_SHADER_READ_UNIFORM_BUFFER=7]="FRAGMENT_SHADER_READ_UNIFORM_BUFFER",e[e.FRAGMENT_SHADER_READ_TEXTURE=8]="FRAGMENT_SHADER_READ_TEXTURE",e[e.FRAGMENT_SHADER_READ_COLOR_INPUT_ATTACHMENT=9]="FRAGMENT_SHADER_READ_COLOR_INPUT_ATTACHMENT",e[e.FRAGMENT_SHADER_READ_DEPTH_STENCIL_INPUT_ATTACHMENT=10]="FRAGMENT_SHADER_READ_DEPTH_STENCIL_INPUT_ATTACHMENT",e[e.FRAGMENT_SHADER_READ_OTHER=11]="FRAGMENT_SHADER_READ_OTHER",e[e.COLOR_ATTACHMENT_READ=12]="COLOR_ATTACHMENT_READ",e[e.DEPTH_STENCIL_ATTACHMENT_READ=13]="DEPTH_STENCIL_ATTACHMENT_READ",e[e.COMPUTE_SHADER_READ_UNIFORM_BUFFER=14]="COMPUTE_SHADER_READ_UNIFORM_BUFFER",e[e.COMPUTE_SHADER_READ_TEXTURE=15]="COMPUTE_SHADER_READ_TEXTURE",e[e.COMPUTE_SHADER_READ_OTHER=16]="COMPUTE_SHADER_READ_OTHER",e[e.TRANSFER_READ=17]="TRANSFER_READ",e[e.HOST_READ=18]="HOST_READ",e[e.PRESENT=19]="PRESENT",e[e.VERTEX_SHADER_WRITE=20]="VERTEX_SHADER_WRITE",e[e.FRAGMENT_SHADER_WRITE=21]="FRAGMENT_SHADER_WRITE",e[e.COLOR_ATTACHMENT_WRITE=22]="COLOR_ATTACHMENT_WRITE",e[e.DEPTH_STENCIL_ATTACHMENT_WRITE=23]="DEPTH_STENCIL_ATTACHMENT_WRITE",e[e.COMPUTE_SHADER_WRITE=24]="COMPUTE_SHADER_WRITE",e[e.TRANSFER_WRITE=25]="TRANSFER_WRITE",e[e.HOST_PREINITIALIZED=26]="HOST_PREINITIALIZED",e[e.HOST_WRITE=27]="HOST_WRITE"}(yr||(yr=e("a0",{}))),function(e){e[e.GRAPHICS=0]="GRAPHICS",e[e.COMPUTE=1]="COMPUTE",e[e.RAY_TRACING=2]="RAY_TRACING"}(Er||(Er=e("a1",{}))),function(e){e[e.POINT_LIST=0]="POINT_LIST",e[e.LINE_LIST=1]="LINE_LIST",e[e.LINE_STRIP=2]="LINE_STRIP",e[e.LINE_LOOP=3]="LINE_LOOP",e[e.LINE_LIST_ADJACENCY=4]="LINE_LIST_ADJACENCY",e[e.LINE_STRIP_ADJACENCY=5]="LINE_STRIP_ADJACENCY",e[e.ISO_LINE_LIST=6]="ISO_LINE_LIST",e[e.TRIANGLE_LIST=7]="TRIANGLE_LIST",e[e.TRIANGLE_STRIP=8]="TRIANGLE_STRIP",e[e.TRIANGLE_FAN=9]="TRIANGLE_FAN",e[e.TRIANGLE_LIST_ADJACENCY=10]="TRIANGLE_LIST_ADJACENCY",e[e.TRIANGLE_STRIP_ADJACENCY=11]="TRIANGLE_STRIP_ADJACENCY",e[e.TRIANGLE_PATCH_ADJACENCY=12]="TRIANGLE_PATCH_ADJACENCY",e[e.QUAD_PATCH_LIST=13]="QUAD_PATCH_LIST"}(Sr||(Sr=e("a2",{}))),function(e){e[e.FILL=0]="FILL",e[e.POINT=1]="POINT",e[e.LINE=2]="LINE"}(Ar||(Ar=e("a3",{}))),function(e){e[e.GOURAND=0]="GOURAND",e[e.FLAT=1]="FLAT"}(Cr||(Cr=e("a4",{}))),function(e){e[e.NONE=0]="NONE",e[e.FRONT=1]="FRONT",e[e.BACK=2]="BACK"}(Tr||(Tr=e("a5",{}))),function(e){e[e.NONE=0]="NONE",e[e.VIEWPORT=1]="VIEWPORT",e[e.SCISSOR=2]="SCISSOR",e[e.LINE_WIDTH=4]="LINE_WIDTH",e[e.DEPTH_BIAS=8]="DEPTH_BIAS",e[e.BLEND_CONSTANTS=16]="BLEND_CONSTANTS",e[e.DEPTH_BOUNDS=32]="DEPTH_BOUNDS",e[e.STENCIL_WRITE_MASK=64]="STENCIL_WRITE_MASK",e[e.STENCIL_COMPARE_MASK=128]="STENCIL_COMPARE_MASK"}(Ir||(Ir=e("a6",{}))),function(e){e[e.FRONT=1]="FRONT",e[e.BACK=2]="BACK",e[e.ALL=3]="ALL"}(Pr||(Pr=e("a7",{}))),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.UNIFORM_BUFFER=1]="UNIFORM_BUFFER",e[e.DYNAMIC_UNIFORM_BUFFER=2]="DYNAMIC_UNIFORM_BUFFER",e[e.STORAGE_BUFFER=4]="STORAGE_BUFFER",e[e.DYNAMIC_STORAGE_BUFFER=8]="DYNAMIC_STORAGE_BUFFER",e[e.SAMPLER_TEXTURE=16]="SAMPLER_TEXTURE",e[e.SAMPLER=32]="SAMPLER",e[e.TEXTURE=64]="TEXTURE",e[e.STORAGE_IMAGE=128]="STORAGE_IMAGE",e[e.INPUT_ATTACHMENT=256]="INPUT_ATTACHMENT"}(wr||(wr=e("a8",{}))),function(e){e[e.GRAPHICS=0]="GRAPHICS",e[e.COMPUTE=1]="COMPUTE",e[e.TRANSFER=2]="TRANSFER"}(Rr||(Rr=e("a9",{}))),function(e){e[e.PRIMARY=0]="PRIMARY",e[e.SECONDARY=1]="SECONDARY"}(br||(br=e("aa",{}))),function(e){e[e.NONE=0]="NONE",e[e.COLOR=1]="COLOR",e[e.DEPTH=2]="DEPTH",e[e.STENCIL=4]="STENCIL",e[e.DEPTH_STENCIL=6]="DEPTH_STENCIL",e[e.ALL=7]="ALL"}(Nr||(Nr=e("ab",{})));var Lr,zr=e("ac",function(){function e(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),this.x=e,this.y=t,this.z=n}return e.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},e}()),Fr=e("ad",function(){function e(e,t,n,i,o,a,r,s,c,l,f,u,_,m,h,d,p,v,g,x,y,E,S){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=0),void 0===r&&(r=0),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=0),void 0===f&&(f=0),void 0===u&&(u=0),void 0===_&&(_=0),void 0===m&&(m=0),void 0===h&&(h=0),void 0===d&&(d=1),void 0===p&&(p=0),void 0===v&&(v=0),void 0===g&&(g=new zr),void 0===x&&(x=new zr),void 0===y&&(y=-1),void 0===E&&(E=1),void 0===S&&(S=1),this.maxVertexAttributes=e,this.maxVertexUniformVectors=t,this.maxFragmentUniformVectors=n,this.maxTextureUnits=i,this.maxImageUnits=o,this.maxVertexTextureUnits=a,this.maxColorRenderTargets=r,this.maxShaderStorageBufferBindings=s,this.maxShaderStorageBlockSize=c,this.maxUniformBufferBindings=l,this.maxUniformBlockSize=f,this.maxTextureSize=u,this.maxCubeMapTextureSize=_,this.depthBits=m,this.stencilBits=h,this.uboOffsetAlignment=d,this.maxComputeSharedMemorySize=p,this.maxComputeWorkGroupInvocations=v,this.maxComputeWorkGroupSize=g,this.maxComputeWorkGroupCount=x,this.clipSpaceMinZ=y,this.screenSpaceSignY=E,this.clipSpaceSignY=S}return e.prototype.copy=function(e){return this.maxVertexAttributes=e.maxVertexAttributes,this.maxVertexUniformVectors=e.maxVertexUniformVectors,this.maxFragmentUniformVectors=e.maxFragmentUniformVectors,this.maxTextureUnits=e.maxTextureUnits,this.maxImageUnits=e.maxImageUnits,this.maxVertexTextureUnits=e.maxVertexTextureUnits,this.maxColorRenderTargets=e.maxColorRenderTargets,this.maxShaderStorageBufferBindings=e.maxShaderStorageBufferBindings,this.maxShaderStorageBlockSize=e.maxShaderStorageBlockSize,this.maxUniformBufferBindings=e.maxUniformBufferBindings,this.maxUniformBlockSize=e.maxUniformBlockSize,this.maxTextureSize=e.maxTextureSize,this.maxCubeMapTextureSize=e.maxCubeMapTextureSize,this.depthBits=e.depthBits,this.stencilBits=e.stencilBits,this.uboOffsetAlignment=e.uboOffsetAlignment,this.maxComputeSharedMemorySize=e.maxComputeSharedMemorySize,this.maxComputeWorkGroupInvocations=e.maxComputeWorkGroupInvocations,this.maxComputeWorkGroupSize.copy(e.maxComputeWorkGroupSize),this.maxComputeWorkGroupCount.copy(e.maxComputeWorkGroupCount),this.clipSpaceMinZ=e.clipSpaceMinZ,this.screenSpaceSignY=e.screenSpaceSignY,this.clipSpaceSignY=e.clipSpaceSignY,this},e}()),Ur=e("ae",function(){function e(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),this.x=e,this.y=t,this.z=n}return e.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},e}()),Br=e("af",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),this.x=e,this.y=t,this.width=n,this.height=i}return e.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.width=e.width,this.height=e.height,this},e}()),Gr=e("ag",function(){function e(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=1),this.width=e,this.height=t,this.depth=n}return e.prototype.copy=function(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this},e}()),Hr=e("ah",function(){function e(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=1),this.mipLevel=e,this.baseArrayLayer=t,this.layerCount=n}return e.prototype.copy=function(e){return this.mipLevel=e.mipLevel,this.baseArrayLayer=e.baseArrayLayer,this.layerCount=e.layerCount,this},e}()),kr=e("ai",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=1),void 0===n&&(n=0),void 0===i&&(i=1),this.baseMipLevel=e,this.levelCount=t,this.baseArrayLayer=n,this.layerCount=i}return e.prototype.copy=function(e){return this.baseMipLevel=e.baseMipLevel,this.levelCount=e.levelCount,this.baseArrayLayer=e.baseArrayLayer,this.layerCount=e.layerCount,this},e}()),Vr=e("aj",function(){function e(e,t,n,i,o){void 0===e&&(e=new Hr),void 0===t&&(t=new Ur),void 0===n&&(n=new Hr),void 0===i&&(i=new Ur),void 0===o&&(o=new Gr),this.srcSubres=e,this.srcOffset=t,this.dstSubres=n,this.dstOffset=i,this.extent=o}return e.prototype.copy=function(e){return this.srcSubres.copy(e.srcSubres),this.srcOffset.copy(e.srcOffset),this.dstSubres.copy(e.dstSubres),this.dstOffset.copy(e.dstOffset),this.extent.copy(e.extent),this},e}()),jr=e("ak",function(){function e(e,t,n,i,o,a){void 0===e&&(e=new Hr),void 0===t&&(t=new Ur),void 0===n&&(n=new Gr),void 0===i&&(i=new Hr),void 0===o&&(o=new Ur),void 0===a&&(a=new Gr),this.srcSubres=e,this.srcOffset=t,this.srcExtent=n,this.dstSubres=i,this.dstOffset=o,this.dstExtent=a}return e.prototype.copy=function(e){return this.srcSubres.copy(e.srcSubres),this.srcOffset.copy(e.srcOffset),this.srcExtent.copy(e.srcExtent),this.dstSubres.copy(e.dstSubres),this.dstOffset.copy(e.dstOffset),this.dstExtent.copy(e.dstExtent),this},e}()),Wr=e("al",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=new Ur),void 0===i&&(i=new Gr),void 0===o&&(o=new Hr),this.buffStride=e,this.buffTexHeight=t,this.texOffset=n,this.texExtent=i,this.texSubres=o}return e.prototype.copy=function(e){return this.buffStride=e.buffStride,this.buffTexHeight=e.buffTexHeight,this.texOffset.copy(e.texOffset),this.texExtent.copy(e.texExtent),this.texSubres.copy(e.texSubres),this},e}()),qr=e("am",function(){function e(e,t,n,i,o,a){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=1),this.left=e,this.top=t,this.width=n,this.height=i,this.minDepth=o,this.maxDepth=a}return e.prototype.copy=function(e){return this.left=e.left,this.top=e.top,this.width=e.width,this.height=e.height,this.minDepth=e.minDepth,this.maxDepth=e.maxDepth,this},e}()),Yr=e("an",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),this.x=e,this.y=t,this.z=n,this.w=i}return e.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},e}()),Xr=e("ao",function(){function e(e,t,n){void 0===e&&(e=[]),void 0===t&&(t=[]),void 0===n&&(n=0),this.bufferOffsets=e,this.samplerOffsets=t,this.flexibleSet=n}return e.prototype.copy=function(e){return this.bufferOffsets=e.bufferOffsets.slice(),this.samplerOffsets=e.samplerOffsets.slice(),this.flexibleSet=e.flexibleSet,this},e}()),Kr=e("ap",function(){function e(e,t,n,i,o){void 0===e&&(e=nr.NONE),void 0===t&&(t=ar.NONE),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=ir.NONE),this.usage=e,this.memUsage=t,this.size=n,this.stride=i,this.flags=o}return e.prototype.copy=function(e){return this.usage=e.usage,this.memUsage=e.memUsage,this.size=e.size,this.stride=e.stride,this.flags=e.flags,this},e}()),Jr=e("aq",function(){function e(e,t,n){void 0===e&&(e=null),void 0===t&&(t=0),void 0===n&&(n=0),this.buffer=e,this.offset=t,this.range=n}return e.prototype.copy=function(e){return this.buffer=e.buffer,this.offset=e.offset,this.range=e.range,this},e}()),Qr=e("ar",function(){function e(e,t,n,i,o,a,r){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=0),void 0===r&&(r=0),this.vertexCount=e,this.firstVertex=t,this.indexCount=n,this.firstIndex=i,this.vertexOffset=o,this.instanceCount=a,this.firstInstance=r}return e.prototype.copy=function(e){return this.vertexCount=e.vertexCount,this.firstVertex=e.firstVertex,this.indexCount=e.indexCount,this.firstIndex=e.firstIndex,this.vertexOffset=e.vertexOffset,this.instanceCount=e.instanceCount,this.firstInstance=e.firstInstance,this},e}()),Zr=e("as",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=null),void 0===o&&(o=0),this.groupCountX=e,this.groupCountY=t,this.groupCountZ=n,this.indirectBuffer=i,this.indirectOffset=o}return e.prototype.copy=function(e){return this.groupCountX=e.groupCountX,this.groupCountY=e.groupCountY,this.groupCountZ=e.groupCountZ,this.indirectBuffer=e.indirectBuffer,this.indirectOffset=e.indirectOffset,this},e}()),$r=e("at",function(){function e(e){void 0===e&&(e=[]),this.drawInfos=e}return e.prototype.copy=function(e){return Mr(this.drawInfos,e.drawInfos,Qr),this},e}()),es=e("au",function(){function e(e,t,n,i,o,a,r,s,c,l){void 0===e&&(e=rr.TEX2D),void 0===t&&(t=sr.NONE),void 0===n&&(n=$a.UNKNOWN),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=cr.NONE),void 0===r&&(r=1),void 0===s&&(s=1),void 0===c&&(c=lr.X1),void 0===l&&(l=1),this.type=e,this.usage=t,this.format=n,this.width=i,this.height=o,this.flags=a,this.layerCount=r,this.levelCount=s,this.samples=c,this.depth=l}return e.prototype.copy=function(e){return this.type=e.type,this.usage=e.usage,this.format=e.format,this.width=e.width,this.height=e.height,this.flags=e.flags,this.layerCount=e.layerCount,this.levelCount=e.levelCount,this.samples=e.samples,this.depth=e.depth,this},e}()),ts=e("av",function(){function e(e,t,n,i,o,a,r){void 0===e&&(e=null),void 0===t&&(t=rr.TEX2D),void 0===n&&(n=$a.UNKNOWN),void 0===i&&(i=0),void 0===o&&(o=1),void 0===a&&(a=0),void 0===r&&(r=1),this.texture=e,this.type=t,this.format=n,this.baseLevel=i,this.levelCount=o,this.baseLayer=a,this.layerCount=r}return e.prototype.copy=function(e){return this.texture=e.texture,this.type=e.type,this.format=e.format,this.baseLevel=e.baseLevel,this.levelCount=e.levelCount,this.baseLayer=e.baseLayer,this.layerCount=e.layerCount,this},e}()),ns=e("aw",function(){function e(e,t,n,i,o,a,r,s,c,l){void 0===e&&(e=fr.LINEAR),void 0===t&&(t=fr.LINEAR),void 0===n&&(n=fr.NONE),void 0===i&&(i=ur.WRAP),void 0===o&&(o=ur.WRAP),void 0===a&&(a=ur.WRAP),void 0===r&&(r=0),void 0===s&&(s=_r.ALWAYS),void 0===c&&(c=new Yr),void 0===l&&(l=0),this.minFilter=e,this.magFilter=t,this.mipFilter=n,this.addressU=i,this.addressV=o,this.addressW=a,this.maxAnisotropy=r,this.cmpFunc=s,this.borderColor=c,this.mipLODBias=l}return e.prototype.copy=function(e){return this.minFilter=e.minFilter,this.magFilter=e.magFilter,this.mipFilter=e.mipFilter,this.addressU=e.addressU,this.addressV=e.addressV,this.addressW=e.addressW,this.maxAnisotropy=e.maxAnisotropy,this.cmpFunc=e.cmpFunc,this.borderColor.copy(e.borderColor),this.mipLODBias=e.mipLODBias,this},e}()),is=e("ax",function(){function e(e,t,n){void 0===e&&(e=""),void 0===t&&(t=tr.UNKNOWN),void 0===n&&(n=0),this.name=e,this.type=t,this.count=n}return e.prototype.copy=function(e){return this.name=e.name,this.type=e.type,this.count=e.count,this},e}()),os=e("ay",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=[]),void 0===o&&(o=0),this.set=e,this.binding=t,this.name=n,this.members=i,this.count=o}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,Mr(this.members,e.members,is),this.count=e.count,this},e}()),as=e("az",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=tr.UNKNOWN),void 0===o&&(o=0),this.set=e,this.binding=t,this.name=n,this.type=i,this.count=o}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.type=e.type,this.count=e.count,this},e}()),rs=e("aA",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=0),this.set=e,this.binding=t,this.name=n,this.count=i}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.count=e.count,this},e}()),ss=e("aB",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=tr.UNKNOWN),void 0===o&&(o=0),this.set=e,this.binding=t,this.name=n,this.type=i,this.count=o}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.type=e.type,this.count=e.count,this},e}()),cs=e("aC",function(){function e(e,t,n,i,o,a){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=tr.UNKNOWN),void 0===o&&(o=0),void 0===a&&(a=or.READ_WRITE),this.set=e,this.binding=t,this.name=n,this.type=i,this.count=o,this.memoryAccess=a}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.type=e.type,this.count=e.count,this.memoryAccess=e.memoryAccess,this},e}()),ls=e("aD",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=0),void 0===o&&(o=or.READ_WRITE),this.set=e,this.binding=t,this.name=n,this.count=i,this.memoryAccess=o}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.count=e.count,this.memoryAccess=e.memoryAccess,this},e}()),fs=e("aE",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=0),this.set=e,this.binding=t,this.name=n,this.count=i}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.count=e.count,this},e}()),us=e("aF",function(){function e(e,t){void 0===e&&(e=vr.NONE),void 0===t&&(t=""),this.stage=e,this.source=t}return e.prototype.copy=function(e){return this.stage=e.stage,this.source=e.source,this},e}()),_s=e("aG",function(){function e(e,t,n,i,o,a){void 0===e&&(e=""),void 0===t&&(t=$a.UNKNOWN),void 0===n&&(n=!1),void 0===i&&(i=0),void 0===o&&(o=!1),void 0===a&&(a=0),this.name=e,this.format=t,this.isNormalized=n,this.stream=i,this.isInstanced=o,this.location=a}return e.prototype.copy=function(e){return this.name=e.name,this.format=e.format,this.isNormalized=e.isNormalized,this.stream=e.stream,this.isInstanced=e.isInstanced,this.location=e.location,this},e}()),ms=e("aH",function(){function e(e,t,n,i,o,a,r,s,c,l){void 0===e&&(e=""),void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===i&&(i=[]),void 0===o&&(o=[]),void 0===a&&(a=[]),void 0===r&&(r=[]),void 0===s&&(s=[]),void 0===c&&(c=[]),void 0===l&&(l=[]),this.name=e,this.stages=t,this.attributes=n,this.blocks=i,this.buffers=o,this.samplerTextures=a,this.samplers=r,this.textures=s,this.images=c,this.subpassInputs=l}return e.prototype.copy=function(e){return this.name=e.name,Mr(this.stages,e.stages,us),Mr(this.attributes,e.attributes,_s),Mr(this.blocks,e.blocks,os),Mr(this.buffers,e.buffers,ls),Mr(this.samplerTextures,e.samplerTextures,as),Mr(this.samplers,e.samplers,rs),Mr(this.textures,e.textures,ss),Mr(this.images,e.images,cs),Mr(this.subpassInputs,e.subpassInputs,fs),this},e}()),hs=e("aI",function(){function e(e,t,n,i){void 0===e&&(e=[]),void 0===t&&(t=[]),void 0===n&&(n=null),void 0===i&&(i=null),this.attributes=e,this.vertexBuffers=t,this.indexBuffer=n,this.indirectBuffer=i}return e.prototype.copy=function(e){return Mr(this.attributes,e.attributes,_s),this.vertexBuffers=e.vertexBuffers.slice(),this.indexBuffer=e.indexBuffer,this.indirectBuffer=e.indirectBuffer,this},e}()),ds=e("aJ",function(){function e(e,t,n,i,o,a){void 0===e&&(e=$a.UNKNOWN),void 0===t&&(t=lr.X1),void 0===n&&(n=gr.CLEAR),void 0===i&&(i=xr.STORE),void 0===o&&(o=[]),void 0===a&&(a=[yr.PRESENT]),this.format=e,this.sampleCount=t,this.loadOp=n,this.storeOp=i,this.beginAccesses=o,this.endAccesses=a}return e.prototype.copy=function(e){return this.format=e.format,this.sampleCount=e.sampleCount,this.loadOp=e.loadOp,this.storeOp=e.storeOp,this.beginAccesses=e.beginAccesses.slice(),this.endAccesses=e.endAccesses.slice(),this},e}()),ps=e("aK",function(){function e(e,t,n,i,o,a,r,s){void 0===e&&(e=$a.UNKNOWN),void 0===t&&(t=lr.X1),void 0===n&&(n=gr.CLEAR),void 0===i&&(i=xr.STORE),void 0===o&&(o=gr.CLEAR),void 0===a&&(a=xr.STORE),void 0===r&&(r=[]),void 0===s&&(s=[yr.DEPTH_STENCIL_ATTACHMENT_WRITE]),this.format=e,this.sampleCount=t,this.depthLoadOp=n,this.depthStoreOp=i,this.stencilLoadOp=o,this.stencilStoreOp=a,this.beginAccesses=r,this.endAccesses=s}return e.prototype.copy=function(e){return this.format=e.format,this.sampleCount=e.sampleCount,this.depthLoadOp=e.depthLoadOp,this.depthStoreOp=e.depthStoreOp,this.stencilLoadOp=e.stencilLoadOp,this.stencilStoreOp=e.stencilStoreOp,this.beginAccesses=e.beginAccesses.slice(),this.endAccesses=e.endAccesses.slice(),this},e}()),vs=e("aL",function(){function e(e,t,n,i,o){void 0===e&&(e=[]),void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===i&&(i=[]),void 0===o&&(o=-1),this.inputs=e,this.colors=t,this.resolves=n,this.preserves=i,this.depthStencil=o}return e.prototype.copy=function(e){return this.inputs=e.inputs.slice(),this.colors=e.colors.slice(),this.resolves=e.resolves.slice(),this.preserves=e.preserves.slice(),this.depthStencil=e.depthStencil,this},e}()),gs=e("aM",function(){function e(e,t,n){void 0===e&&(e=[]),void 0===t&&(t=new ps),void 0===n&&(n=[]),this.colorAttachments=e,this.depthStencilAttachment=t,this.subpasses=n}return e.prototype.copy=function(e){return Mr(this.colorAttachments,e.colorAttachments,ds),this.depthStencilAttachment.copy(e.depthStencilAttachment),Mr(this.subpasses,e.subpasses,vs),this},e}()),xs=e("aN",function(){function e(e,t){void 0===e&&(e=[]),void 0===t&&(t=[]),this.prevAccesses=e,this.nextAccesses=t}return e.prototype.copy=function(e){return this.prevAccesses=e.prevAccesses.slice(),this.nextAccesses=e.nextAccesses.slice(),this},e}()),ys=e("aO",function(){function e(e,t,n,i,o){void 0===e&&(e=[]),void 0===t&&(t=[]),void 0===n&&(n=!1),void 0===i&&(i=null),void 0===o&&(o=null),this.prevAccesses=e,this.nextAccesses=t,this.discardContents=n,this.srcQueue=i,this.dstQueue=o}return e.prototype.copy=function(e){return this.prevAccesses=e.prevAccesses.slice(),this.nextAccesses=e.nextAccesses.slice(),this.discardContents=e.discardContents,this.srcQueue=e.srcQueue,this.dstQueue=e.dstQueue,this},e}()),Es=e("aP",function(){function e(e,t,n,i,o){void 0===e&&(e=null),void 0===t&&(t=[]),void 0===n&&(n=null),void 0===i&&(i=[]),void 0===o&&(o=0),this.renderPass=e,this.colorTextures=t,this.depthStencilTexture=n,this.colorMipmapLevels=i,this.depthStencilMipmapLevel=o}return e.prototype.copy=function(e){return this.renderPass=e.renderPass,this.colorTextures=e.colorTextures.slice(),this.depthStencilTexture=e.depthStencilTexture,this.colorMipmapLevels=e.colorMipmapLevels.slice(),this.depthStencilMipmapLevel=e.depthStencilMipmapLevel,this},e}()),Ss=e("aQ",function(){function e(e,t,n,i,o){void 0===e&&(e=-1),void 0===t&&(t=wr.UNKNOWN),void 0===n&&(n=0),void 0===i&&(i=vr.NONE),void 0===o&&(o=[]),this.binding=e,this.descriptorType=t,this.count=n,this.stageFlags=i,this.immutableSamplers=o}return e.prototype.copy=function(e){return this.binding=e.binding,this.descriptorType=e.descriptorType,this.count=e.count,this.stageFlags=e.stageFlags,this.immutableSamplers=e.immutableSamplers.slice(),this},e}()),As=e("aR",function(){function e(e){void 0===e&&(e=[]),this.bindings=e}return e.prototype.copy=function(e){return Mr(this.bindings,e.bindings,Ss),this},e}()),Cs=e("aS",function(){function e(e){void 0===e&&(e=null),this.layout=e}return e.prototype.copy=function(e){return this.layout=e.layout,this},e}()),Ts=e("aT",function(){function e(e){void 0===e&&(e=[]),this.setLayouts=e}return e.prototype.copy=function(e){return this.setLayouts=e.setLayouts.slice(),this},e}()),Is=e("aU",function(){function e(e){void 0===e&&(e=[]),this.attributes=e}return e.prototype.copy=function(e){return Mr(this.attributes,e.attributes,_s),this},e}()),Ps=e("aV",function(){function e(e,t){void 0===e&&(e=null),void 0===t&&(t=br.PRIMARY),this.queue=e,this.type=t}return e.prototype.copy=function(e){return this.queue=e.queue,this.type=e.type,this},e}()),ws=e("aW",function(){function e(e){void 0===e&&(e=Rr.GRAPHICS),this.type=e}return e.prototype.copy=function(e){return this.type=e.type,this},e}()),Rs=e("aX",(function(e,t,n,i,o,a,r,s){void 0===e&&(e=""),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=er.NONE),void 0===o&&(o=!1),void 0===a&&(a=!1),void 0===r&&(r=!1),void 0===s&&(s=!1),this.name=e,this.size=t,this.count=n,this.type=i,this.hasAlpha=o,this.hasDepth=a,this.hasStencil=r,this.isCompressed=s})),bs=e("aY",function(){function e(e,t){void 0===e&&(e=0),void 0===t&&(t=0),this.bufferSize=e,this.textureSize=t}return e.prototype.copy=function(e){return this.bufferSize=e.bufferSize,this.textureSize=e.textureSize,this},e}()),Ns=e("aZ",function(){function e(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),this.writeMask=e,this.compareMask=t,this.reference=n}return e.prototype.copy=function(e){return this.writeMask=e.writeMask,this.compareMask=e.compareMask,this.reference=e.reference,this},e}()),Os=e("a_",function(){function e(e,t,n,i,o,a,r,s,c,l,f){void 0===e&&(e=new qr),void 0===t&&(t=new Br),void 0===n&&(n=new Yr),void 0===i&&(i=1),void 0===o&&(o=0),void 0===a&&(a=0),void 0===r&&(r=0),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=new Ns),void 0===f&&(f=new Ns),this.viewport=e,this.scissor=t,this.blendConstant=n,this.lineWidth=i,this.depthBiasConstant=o,this.depthBiasClamp=a,this.depthBiasSlope=r,this.depthMinBounds=s,this.depthMaxBounds=c,this.stencilStatesFront=l,this.stencilStatesBack=f}return e.prototype.copy=function(e){return this.viewport.copy(e.viewport),this.scissor.copy(e.scissor),this.blendConstant.copy(e.blendConstant),this.lineWidth=e.lineWidth,this.depthBiasConstant=e.depthBiasConstant,this.depthBiasClamp=e.depthBiasClamp,this.depthBiasSlope=e.depthBiasSlope,this.depthMinBounds=e.depthMinBounds,this.depthMaxBounds=e.depthMaxBounds,this.stencilStatesFront.copy(e.stencilStatesFront),this.stencilStatesBack.copy(e.stencilStatesBack),this},e}()),Ds=e("a$",function(){function e(e){this._gfxType=Xa.UNKNOWN,this._gfxType=e}return le(e,[{key:"gfxType",get:function(){return this._gfxType}}]),e}()),Ms=e("b0",(function(e,t,n,i,o,a,r){void 0===t&&(t=!0),void 0===n&&(n=!0),void 0===i&&(i=1),void 0===o&&(o=1),void 0===a&&(a=1),void 0===r&&(r=new Xr),this.canvasElm=e,this.isAntialias=t,this.isPremultipliedAlpha=n,this.devicePixelRatio=i,this.nativeWidth=o,this.nativeHeight=a,this.bindingMappingInfo=r}));!function(e){e.ATTR_POSITION="a_position",e.ATTR_NORMAL="a_normal",e.ATTR_TANGENT="a_tangent",e.ATTR_BITANGENT="a_bitangent",e.ATTR_WEIGHTS="a_weights",e.ATTR_JOINTS="a_joints",e.ATTR_COLOR="a_color",e.ATTR_COLOR1="a_color1",e.ATTR_COLOR2="a_color2",e.ATTR_TEX_COORD="a_texCoord",e.ATTR_TEX_COORD1="a_texCoord1",e.ATTR_TEX_COORD2="a_texCoord2",e.ATTR_TEX_COORD3="a_texCoord3",e.ATTR_TEX_COORD4="a_texCoord4",e.ATTR_TEX_COORD5="a_texCoord5",e.ATTR_TEX_COORD6="a_texCoord6",e.ATTR_TEX_COORD7="a_texCoord7",e.ATTR_TEX_COORD8="a_texCoord8",e.ATTR_BATCH_ID="a_batch_id",e.ATTR_BATCH_UV="a_batch_uv"}(Lr||(Lr=e("b1",{})));var Ls=e("b2",Object.freeze([new Rs("UNKNOWN",0,0,er.NONE,!1,!1,!1,!1),new Rs("A8",1,1,er.UNORM,!0,!1,!1,!1),new Rs("L8",1,1,er.UNORM,!1,!1,!1,!1),new Rs("LA8",1,2,er.UNORM,!0,!1,!1,!1),new Rs("R8",1,1,er.UNORM,!1,!1,!1,!1),new Rs("R8SN",1,1,er.SNORM,!1,!1,!1,!1),new Rs("R8UI",1,1,er.UINT,!1,!1,!1,!1),new Rs("R8I",1,1,er.INT,!1,!1,!1,!1),new Rs("R16F",2,1,er.FLOAT,!1,!1,!1,!1),new Rs("R16UI",2,1,er.UINT,!1,!1,!1,!1),new Rs("R16I",2,1,er.INT,!1,!1,!1,!1),new Rs("R32F",4,1,er.FLOAT,!1,!1,!1,!1),new Rs("R32UI",4,1,er.UINT,!1,!1,!1,!1),new Rs("R32I",4,1,er.INT,!1,!1,!1,!1),new Rs("RG8",2,2,er.UNORM,!1,!1,!1,!1),new Rs("RG8SN",2,2,er.SNORM,!1,!1,!1,!1),new Rs("RG8UI",2,2,er.UINT,!1,!1,!1,!1),new Rs("RG8I",2,2,er.INT,!1,!1,!1,!1),new Rs("RG16F",4,2,er.FLOAT,!1,!1,!1,!1),new Rs("RG16UI",4,2,er.UINT,!1,!1,!1,!1),new Rs("RG16I",4,2,er.INT,!1,!1,!1,!1),new Rs("RG32F",8,2,er.FLOAT,!1,!1,!1,!1),new Rs("RG32UI",8,2,er.UINT,!1,!1,!1,!1),new Rs("RG32I",8,2,er.INT,!1,!1,!1,!1),new Rs("RGB8",3,3,er.UNORM,!1,!1,!1,!1),new Rs("SRGB8",3,3,er.UNORM,!1,!1,!1,!1),new Rs("RGB8SN",3,3,er.SNORM,!1,!1,!1,!1),new Rs("RGB8UI",3,3,er.UINT,!1,!1,!1,!1),new Rs("RGB8I",3,3,er.INT,!1,!1,!1,!1),new Rs("RGB16F",6,3,er.FLOAT,!1,!1,!1,!1),new Rs("RGB16UI",6,3,er.UINT,!1,!1,!1,!1),new Rs("RGB16I",6,3,er.INT,!1,!1,!1,!1),new Rs("RGB32F",12,3,er.FLOAT,!1,!1,!1,!1),new Rs("RGB32UI",12,3,er.UINT,!1,!1,!1,!1),new Rs("RGB32I",12,3,er.INT,!1,!1,!1,!1),new Rs("RGBA8",4,4,er.UNORM,!0,!1,!1,!1),new Rs("BGRA8",4,4,er.UNORM,!0,!1,!1,!1),new Rs("SRGB8_A8",4,4,er.UNORM,!0,!1,!1,!1),new Rs("RGBA8SN",4,4,er.SNORM,!0,!1,!1,!1),new Rs("RGBA8UI",4,4,er.UINT,!0,!1,!1,!1),new Rs("RGBA8I",4,4,er.INT,!0,!1,!1,!1),new Rs("RGBA16F",8,4,er.FLOAT,!0,!1,!1,!1),new Rs("RGBA16UI",8,4,er.UINT,!0,!1,!1,!1),new Rs("RGBA16I",8,4,er.INT,!0,!1,!1,!1),new Rs("RGBA32F",16,4,er.FLOAT,!0,!1,!1,!1),new Rs("RGBA32UI",16,4,er.UINT,!0,!1,!1,!1),new Rs("RGBA32I",16,4,er.INT,!0,!1,!1,!1),new Rs("R5G6B5",2,3,er.UNORM,!1,!1,!1,!1),new Rs("R11G11B10F",4,3,er.FLOAT,!1,!1,!1,!1),new Rs("RGB5A1",2,4,er.UNORM,!0,!1,!1,!1),new Rs("RGBA4",2,4,er.UNORM,!0,!1,!1,!1),new Rs("RGB10A2",2,4,er.UNORM,!0,!1,!1,!1),new Rs("RGB10A2UI",2,4,er.UINT,!0,!1,!1,!1),new Rs("RGB9E5",2,4,er.FLOAT,!0,!1,!1,!1),new Rs("D16",2,1,er.UINT,!1,!0,!1,!1),new Rs("D16S8",3,2,er.UINT,!1,!0,!0,!1),new Rs("D24",3,1,er.UINT,!1,!0,!1,!1),new Rs("D24S8",4,2,er.UINT,!1,!0,!0,!1),new Rs("D32F",4,1,er.FLOAT,!1,!0,!1,!1),new Rs("D32FS8",5,2,er.FLOAT,!1,!0,!0,!1),new Rs("BC1",1,3,er.UNORM,!1,!1,!1,!0),new Rs("BC1_ALPHA",1,4,er.UNORM,!0,!1,!1,!0),new Rs("BC1_SRGB",1,3,er.UNORM,!1,!1,!1,!0),new Rs("BC1_SRGB_ALPHA",1,4,er.UNORM,!0,!1,!1,!0),new Rs("BC2",1,4,er.UNORM,!0,!1,!1,!0),new Rs("BC2_SRGB",1,4,er.UNORM,!0,!1,!1,!0),new Rs("BC3",1,4,er.UNORM,!0,!1,!1,!0),new Rs("BC3_SRGB",1,4,er.UNORM,!0,!1,!1,!0),new Rs("BC4",1,1,er.UNORM,!1,!1,!1,!0),new Rs("BC4_SNORM",1,1,er.SNORM,!1,!1,!1,!0),new Rs("BC5",1,2,er.UNORM,!1,!1,!1,!0),new Rs("BC5_SNORM",1,2,er.SNORM,!1,!1,!1,!0),new Rs("BC6H_UF16",1,3,er.UFLOAT,!1,!1,!1,!0),new Rs("BC6H_SF16",1,3,er.FLOAT,!1,!1,!1,!0),new Rs("BC7",1,4,er.UNORM,!0,!1,!1,!0),new Rs("BC7_SRGB",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ETC_RGB8",1,3,er.UNORM,!1,!1,!1,!0),new Rs("ETC2_RGB8",1,3,er.UNORM,!1,!1,!1,!0),new Rs("ETC2_SRGB8",1,3,er.UNORM,!1,!1,!1,!0),new Rs("ETC2_RGB8_A1",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ETC2_SRGB8_A1",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ETC2_RGBA8",2,4,er.UNORM,!0,!1,!1,!0),new Rs("ETC2_SRGB8_A8",2,4,er.UNORM,!0,!1,!1,!0),new Rs("EAC_R11",1,1,er.UNORM,!1,!1,!1,!0),new Rs("EAC_R11SN",1,1,er.SNORM,!1,!1,!1,!0),new Rs("EAC_RG11",2,2,er.UNORM,!1,!1,!1,!0),new Rs("EAC_RG11SN",2,2,er.SNORM,!1,!1,!1,!0),new Rs("PVRTC_RGB2",2,3,er.UNORM,!1,!1,!1,!0),new Rs("PVRTC_RGBA2",2,4,er.UNORM,!0,!1,!1,!0),new Rs("PVRTC_RGB4",2,3,er.UNORM,!1,!1,!1,!0),new Rs("PVRTC_RGBA4",2,4,er.UNORM,!0,!1,!1,!0),new Rs("PVRTC2_2BPP",2,4,er.UNORM,!0,!1,!1,!0),new Rs("PVRTC2_4BPP",2,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_RGBA_4x4",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_RGBA_5x4",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_RGBA_5x5",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_RGBA_6x5",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_RGBA_6x6",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_RGBA_8x5",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_RGBA_8x6",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_RGBA_8x8",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_RGBA_10x5",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_RGBA_10x6",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_RGBA_10x8",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_RGBA_10x10",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_RGBA_12x10",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_RGBA_12x12",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_SRGBA_4x4",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_SRGBA_5x4",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_SRGBA_5x5",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_SRGBA_6x5",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_SRGBA_6x6",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_SRGBA_8x5",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_SRGBA_8x6",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_SRGBA_8x8",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_SRGBA_10x5",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_SRGBA_10x6",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_SRGBA_10x8",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_SRGBA_10x10",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_SRGBA_12x10",1,4,er.UNORM,!0,!1,!1,!0),new Rs("ASTC_SRGBA_12x12",1,4,er.UNORM,!0,!1,!1,!0)])),zs=e("b3",wr.UNIFORM_BUFFER|wr.DYNAMIC_UNIFORM_BUFFER|wr.STORAGE_BUFFER|wr.DYNAMIC_STORAGE_BUFFER),Fs=e("b4",wr.SAMPLER_TEXTURE|wr.SAMPLER|wr.TEXTURE|wr.STORAGE_IMAGE|wr.INPUT_ATTACHMENT),Us=e("b5",wr.DYNAMIC_STORAGE_BUFFER|wr.DYNAMIC_UNIFORM_BUFFER),Bs=e("b6",28);function Gs(e){return e>0&&0==(e&e-1)}function Hs(e,t,n,i){if(!Ls[e].isCompressed)return t*n*i*Ls[e].size;switch(e){case $a.BC1:case $a.BC1_ALPHA:case $a.BC1_SRGB:case $a.BC1_SRGB_ALPHA:return Math.ceil(t/4)*Math.ceil(n/4)*8*i;case $a.BC2:case $a.BC2_SRGB:case $a.BC3:case $a.BC3_SRGB:case $a.BC4:case $a.BC4_SNORM:case $a.BC6H_SF16:case $a.BC6H_UF16:case $a.BC7:case $a.BC7_SRGB:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case $a.BC5:case $a.BC5_SNORM:return Math.ceil(t/4)*Math.ceil(n/4)*32*i;case $a.ETC_RGB8:case $a.ETC2_RGB8:case $a.ETC2_SRGB8:case $a.ETC2_RGB8_A1:case $a.EAC_R11:case $a.EAC_R11SN:return Math.ceil(t/4)*Math.ceil(n/4)*8*i;case $a.ETC2_RGBA8:case $a.ETC2_SRGB8_A1:case $a.EAC_RG11:case $a.EAC_RG11SN:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case $a.PVRTC_RGB2:case $a.PVRTC_RGBA2:case $a.PVRTC2_2BPP:return Math.ceil(Math.max(t,16)*Math.max(n,8)/4)*i;case $a.PVRTC_RGB4:case $a.PVRTC_RGBA4:case $a.PVRTC2_4BPP:return Math.ceil(Math.max(t,8)*Math.max(n,8)/2)*i;case $a.ASTC_RGBA_4x4:case $a.ASTC_SRGBA_4x4:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case $a.ASTC_RGBA_5x4:case $a.ASTC_SRGBA_5x4:return Math.ceil(t/5)*Math.ceil(n/4)*16*i;case $a.ASTC_RGBA_5x5:case $a.ASTC_SRGBA_5x5:return Math.ceil(t/5)*Math.ceil(n/5)*16*i;case $a.ASTC_RGBA_6x5:case $a.ASTC_SRGBA_6x5:return Math.ceil(t/6)*Math.ceil(n/5)*16*i;case $a.ASTC_RGBA_6x6:case $a.ASTC_SRGBA_6x6:return Math.ceil(t/6)*Math.ceil(n/6)*16*i;case $a.ASTC_RGBA_8x5:case $a.ASTC_SRGBA_8x5:return Math.ceil(t/8)*Math.ceil(n/5)*16*i;case $a.ASTC_RGBA_8x6:case $a.ASTC_SRGBA_8x6:return Math.ceil(t/8)*Math.ceil(n/6)*16*i;case $a.ASTC_RGBA_8x8:case $a.ASTC_SRGBA_8x8:return Math.ceil(t/8)*Math.ceil(n/8)*16*i;case $a.ASTC_RGBA_10x5:case $a.ASTC_SRGBA_10x5:return Math.ceil(t/10)*Math.ceil(n/5)*16*i;case $a.ASTC_RGBA_10x6:case $a.ASTC_SRGBA_10x6:return Math.ceil(t/10)*Math.ceil(n/6)*16*i;case $a.ASTC_RGBA_10x8:case $a.ASTC_SRGBA_10x8:return Math.ceil(t/10)*Math.ceil(n/8)*16*i;case $a.ASTC_RGBA_10x10:case $a.ASTC_SRGBA_10x10:return Math.ceil(t/10)*Math.ceil(n/10)*16*i;case $a.ASTC_RGBA_12x10:case $a.ASTC_SRGBA_12x10:return Math.ceil(t/12)*Math.ceil(n/10)*16*i;case $a.ASTC_RGBA_12x12:case $a.ASTC_SRGBA_12x12:return Math.ceil(t/12)*Math.ceil(n/12)*16*i;default:return 0}}function ks(e,t,n,i,o){for(var a=0,r=0;r<o;++r)a+=Hs(e,t,n,i),t=Math.max(t>>1,1),n=Math.max(n>>1,1);return a}var Vs=[0,4,8,12,16,4,8,12,16,4,8,12,16,4,8,12,16,16,24,32,24,36,48,32,48,64,4,4,4,4,4,4];function js(e){return Vs[e]||0}function Ws(e){var t=e.size/e.count;switch(e.type){case er.UNORM:case er.UINT:switch(t){case 1:return Uint8Array;case 2:return Uint16Array;case 4:return Uint32Array}break;case er.SNORM:case er.INT:switch(t){case 1:return Int8Array;case 2:return Int16Array;case 4:return Int32Array}break;case er.FLOAT:return Float32Array}return Float32Array}var qs=Object.freeze({__proto__:null,get ObjectType(){return Xa},get Status(){return Ka},get API(){return Ja},get SurfaceTransform(){return Qa},get Feature(){return Za},get Format(){return $a},get FormatType(){return er},get Type(){return tr},get BufferUsageBit(){return nr},get BufferFlagBit(){return ir},get MemoryAccessBit(){return or},get MemoryUsageBit(){return ar},get TextureType(){return rr},get TextureUsageBit(){return sr},get TextureFlagBit(){return cr},get SampleCount(){return lr},get Filter(){return fr},get Address(){return ur},get ComparisonFunc(){return _r},get StencilOp(){return mr},get BlendFactor(){return hr},get BlendOp(){return dr},get ColorMask(){return pr},get ShaderStageFlagBit(){return vr},get LoadOp(){return gr},get StoreOp(){return xr},get AccessType(){return yr},get PipelineBindPoint(){return Er},get PrimitiveMode(){return Sr},get PolygonMode(){return Ar},get ShadeModel(){return Cr},get CullMode(){return Tr},get DynamicStateFlagBit(){return Ir},get StencilFace(){return Pr},get DescriptorType(){return wr},get QueueType(){return Rr},get CommandBufferType(){return br},get ClearFlagBit(){return Nr},Size:zr,DeviceCaps:Fr,Offset:Ur,Rect:Br,Extent:Gr,TextureSubresLayers:Hr,TextureSubresRange:kr,TextureCopy:Vr,TextureBlit:jr,BufferTextureCopy:Wr,Viewport:qr,Color:Yr,BindingMappingInfo:Xr,BufferInfo:Kr,BufferViewInfo:Jr,DrawInfo:Qr,DispatchInfo:Zr,IndirectBuffer:$r,TextureInfo:es,TextureViewInfo:ts,SamplerInfo:ns,Uniform:is,UniformBlock:os,UniformSamplerTexture:as,UniformSampler:rs,UniformTexture:ss,UniformStorageImage:cs,UniformStorageBuffer:ls,UniformInputAttachment:fs,ShaderStage:us,Attribute:_s,ShaderInfo:ms,InputAssemblerInfo:hs,ColorAttachment:ds,DepthStencilAttachment:ps,SubpassInfo:vs,RenderPassInfo:gs,GlobalBarrierInfo:xs,TextureBarrierInfo:ys,FramebufferInfo:Es,DescriptorSetLayoutBinding:Ss,DescriptorSetLayoutInfo:As,DescriptorSetInfo:Cs,PipelineLayoutInfo:Ts,InputState:Is,CommandBufferInfo:Ps,QueueInfo:ws,FormatInfo:Rs,MemoryStatus:bs,DynamicStencilStates:Ns,DynamicStates:Os,Obj:Ds,DeviceInfo:Ms,get AttributeName(){return Lr},FormatInfos:Ls,DESCRIPTOR_BUFFER_TYPE:zs,DESCRIPTOR_SAMPLER_TYPE:Fs,DESCRIPTOR_DYNAMIC_TYPE:Us,DRAW_INFO_SIZE:Bs,IsPowerOf2:Gs,FormatSize:Hs,FormatSurfaceSize:ks,GetTypeSize:js,getTypedArrayConstructor:Ws}),Ys=e("B",function(e){function t(t){var n;return(n=e.call(this,Xa.BUFFER)||this)._device=void 0,n._usage=nr.NONE,n._memUsage=ar.NONE,n._size=0,n._stride=1,n._count=0,n._flags=ir.NONE,n._indirectBuffer=null,n._isBufferView=!1,n._device=t,n}return ue(t,e),le(t,[{key:"usage",get:function(){return this._usage}},{key:"memUsage",get:function(){return this._memUsage}},{key:"size",get:function(){return this._size}},{key:"stride",get:function(){return this._stride}},{key:"count",get:function(){return this._count}},{key:"flags",get:function(){return this._flags}}]),t}(Ds)),Xs=e("u",function(e){function t(t){var n;return(n=e.call(this,Xa.COMMAND_BUFFER)||this)._device=void 0,n._queue=null,n._type=br.PRIMARY,n._numDrawCalls=0,n._numInstances=0,n._numTris=0,n._device=t,n}return ue(t,e),le(t,[{key:"type",get:function(){return this._type}},{key:"queue",get:function(){return this._queue}},{key:"numDrawCalls",get:function(){return this._numDrawCalls}},{key:"numInstances",get:function(){return this._numInstances}},{key:"numTris",get:function(){return this._numTris}}]),t}(Ds));xt($a);var Ks=e("bc",function(){function e(){this._canvas=null,this._canvas2D=null,this._gfxAPI=Ja.UNKNOWN,this._transform=Qa.IDENTITY,this._deviceName="",this._renderer="",this._vendor="",this._version="",this._features=new Array(Za.COUNT),this._queue=null,this._cmdBuff=null,this._devicePixelRatio=1,this._width=0,this._height=0,this._nativeWidth=0,this._nativeHeight=0,this._colorFmt=$a.UNKNOWN,this._depthStencilFmt=$a.UNKNOWN,this._numDrawCalls=0,this._numInstances=0,this._numTris=0,this._memoryStatus=new bs,this._caps=new Fr}return e.prototype.hasFeature=function(e){return this._features[e]},le(e,[{key:"canvas",get:function(){return this._canvas}},{key:"canvas2D",get:function(){return this._canvas2D}},{key:"gfxAPI",get:function(){return this._gfxAPI}},{key:"queue",get:function(){return this._queue}},{key:"commandBuffer",get:function(){return this._cmdBuff}},{key:"devicePixelRatio",get:function(){return this._devicePixelRatio}},{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}},{key:"nativeWidth",get:function(){return this._nativeWidth}},{key:"nativeHeight",get:function(){return this._nativeHeight}},{key:"renderer",get:function(){return this._renderer}},{key:"vendor",get:function(){return this._vendor}},{key:"colorFormat",get:function(){return this._colorFmt}},{key:"depthStencilFormat",get:function(){return this._depthStencilFmt}},{key:"numDrawCalls",get:function(){return this._numDrawCalls}},{key:"numInstances",get:function(){return this._numInstances}},{key:"numTris",get:function(){return this._numTris}},{key:"memoryStatus",get:function(){return this._memoryStatus}},{key:"capabilities",get:function(){return this._caps}},{key:"surfaceTransform",get:function(){return this._transform}}]),e}()),Js=e("bd",function(e){function t(t){var n;return(n=e.call(this,Xa.FRAMEBUFFER)||this)._device=void 0,n._renderPass=null,n._colorTextures=[],n._depthStencilTexture=null,n._device=t,n}return ue(t,e),le(t,[{key:"renderPass",get:function(){return this._renderPass}},{key:"colorTextures",get:function(){return this._colorTextures}},{key:"depthStencilTexture",get:function(){return this._depthStencilTexture}}]),t}(Ds)),Qs=String.prototype.charCodeAt;function Zs(e){return this[e]}function $s(e,t){for(var n=e.length,i=t^n,o=0,a="string"==typeof e?Qs:Zs;n>=4;){var r=255&a.call(e,o)|(255&a.call(e,++o))<<8|(255&a.call(e,++o))<<16|(255&a.call(e,++o))<<24;r=1540483477*(65535&r)+((1540483477*(r>>>16)&65535)<<16),i=1540483477*(65535&i)+((1540483477*(i>>>16)&65535)<<16)^(r=1540483477*(65535&(r^=r>>>24))+((1540483477*(r>>>16)&65535)<<16)),n-=4,++o}switch(n){case 3:i^=(255&a.call(e,o+2))<<16;case 2:i^=(255&a.call(e,o+1))<<8;case 1:i=1540483477*(65535&(i^=255&a.call(e,o)))+((1540483477*(i>>>16)&65535)<<16)}return i=1540483477*(65535&(i^=i>>>13))+((1540483477*(i>>>16)&65535)<<16),(i^=i>>>15)>>>0}var ec=e("be",function(e){function t(t){var n;return(n=e.call(this,Xa.INPUT_ASSEMBLER)||this)._device=void 0,n._attributes=[],n._vertexBuffers=[],n._indexBuffer=null,n._vertexCount=0,n._firstVertex=0,n._indexCount=0,n._firstIndex=0,n._vertexOffset=0,n._instanceCount=0,n._firstInstance=0,n._attributesHash=0,n._indirectBuffer=null,n._device=t,n}ue(t,e);var n=t.prototype;return n.getVertexBuffer=function(e){return void 0===e&&(e=0),e<this._vertexBuffers.length?this._vertexBuffers[e]:null},n.computeAttributesHash=function(){for(var e="attrs",t=0;t<this.attributes.length;++t){var n=this.attributes[t];e+=","+n.name+","+n.format+","+n.isNormalized+","+n.stream+","+n.isInstanced}return $s(e,666)},le(t,[{key:"vertexBuffers",get:function(){return this._vertexBuffers}},{key:"indexBuffer",get:function(){return this._indexBuffer}},{key:"attributes",get:function(){return this._attributes}},{key:"attributesHash",get:function(){return this._attributesHash}},{key:"vertexCount",get:function(){return this._vertexCount},set:function(e){this._vertexCount=e}},{key:"firstVertex",get:function(){return this._firstVertex},set:function(e){this._firstVertex=e}},{key:"indexCount",get:function(){return this._indexCount},set:function(e){this._indexCount=e}},{key:"firstIndex",get:function(){return this._firstIndex},set:function(e){this._firstIndex=e}},{key:"vertexOffset",get:function(){return this._vertexOffset},set:function(e){this._vertexOffset=e}},{key:"instanceCount",get:function(){return this._instanceCount},set:function(e){this._instanceCount=e}},{key:"firstInstance",get:function(){return this._firstInstance},set:function(e){this._firstInstance=e}},{key:"indirectBuffer",get:function(){return this._indirectBuffer}}]),t}(Ds)),tc=e("D",function(e){function t(t){var n;return(n=e.call(this,Xa.DESCRIPTOR_SET)||this)._device=void 0,n._layout=null,n._buffers=[],n._textures=[],n._samplers=[],n._isDirty=!1,n._device=t,n}ue(t,e);var n=t.prototype;return n.bindBuffer=function(e,t,n){void 0===n&&(n=0);var i=this._layout.bindingIndices[e],o=this._layout.bindings[i];if(o&&o.descriptorType&zs){var a=this._layout.descriptorIndices[e];this._buffers[a+n]!==t&&(this._buffers[a+n]=t,this._isDirty=!0)}},n.bindSampler=function(e,t,n){void 0===n&&(n=0);var i=this._layout.bindingIndices[e],o=this._layout.bindings[i];if(o&&o.descriptorType&Fs){var a=this._layout.descriptorIndices[e];this._samplers[a+n]!==t&&(this._samplers[a+n]=t,this._isDirty=!0)}},n.bindTexture=function(e,t,n){void 0===n&&(n=0);var i=this._layout.bindingIndices[e],o=this._layout.bindings[i];if(o&&o.descriptorType&Fs){var a=this._layout.descriptorIndices[e];this._textures[a+n]!==t&&(this._textures[a+n]=t,this._isDirty=!0)}},n.getBuffer=function(e,t){void 0===t&&(t=0);var n=this._layout.descriptorIndices[e];return this._buffers[n+t]},n.getSampler=function(e,t){void 0===t&&(t=0);var n=this._layout.descriptorIndices[e];return this._samplers[n+t]},n.getTexture=function(e,t){void 0===t&&(t=0);var n=this._layout.descriptorIndices[e];return this._textures[n+t]},le(t,[{key:"layout",get:function(){return this._layout}}]),t}(Ds)),nc=e("bf",function(e){function t(t){var n;return(n=e.call(this,Xa.DESCRIPTOR_SET_LAYOUT)||this)._device=void 0,n._bindings=[],n._bindingIndices=[],n._descriptorIndices=[],n._device=t,n}return ue(t,e),le(t,[{key:"bindings",get:function(){return this._bindings}},{key:"bindingIndices",get:function(){return this._bindingIndices}},{key:"descriptorIndices",get:function(){return this._descriptorIndices}}]),t}(Ds)),ic=e("bg",function(e){function t(t){var n;return(n=e.call(this,Xa.PIPELINE_LAYOUT)||this)._device=void 0,n._setLayouts=[],n._device=t,n}return ue(t,e),le(t,[{key:"setLayouts",get:function(){return this._setLayouts}}]),t}(Ds)),oc=e("bh",function(){function e(e,t,n,i,o,a,r,s,c,l,f,u){void 0===e&&(e=!1),void 0===t&&(t=Ar.FILL),void 0===n&&(n=Cr.GOURAND),void 0===i&&(i=Tr.BACK),void 0===o&&(o=!0),void 0===a&&(a=!1),void 0===r&&(r=0),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=!0),void 0===f&&(f=!1),void 0===u&&(u=1),this.isDiscard=e,this.polygonMode=t,this.shadeModel=n,this.cullMode=i,this.isFrontFaceCCW=o,this.depthBiasEnabled=a,this.depthBias=r,this.depthBiasClamp=s,this.depthBiasSlop=c,this.isDepthClip=l,this.isMultisample=f,this.lineWidth=u}var t=e.prototype;return t.reset=function(){this.isDiscard=!1,this.polygonMode=Ar.FILL,this.shadeModel=Cr.GOURAND,this.cullMode=Tr.BACK,this.isFrontFaceCCW=!0,this.depthBiasEnabled=!1,this.depthBias=0,this.depthBiasClamp=0,this.depthBiasSlop=0,this.isDepthClip=!0,this.isMultisample=!1,this.lineWidth=1},t.assign=function(e){Object.assign(this,e)},t.destroy=function(){},le(e,[{key:"handle",get:function(){return Co}}]),e}()),ac=e("bi",function(){function e(e,t,n,i,o,a,r,s,c,l,f,u,_,m,h,d,p,v,g){void 0===e&&(e=!0),void 0===t&&(t=!0),void 0===n&&(n=_r.LESS),void 0===i&&(i=!1),void 0===o&&(o=_r.ALWAYS),void 0===a&&(a=65535),void 0===r&&(r=65535),void 0===s&&(s=mr.KEEP),void 0===c&&(c=mr.KEEP),void 0===l&&(l=mr.KEEP),void 0===f&&(f=1),void 0===u&&(u=!1),void 0===_&&(_=_r.ALWAYS),void 0===m&&(m=65535),void 0===h&&(h=65535),void 0===d&&(d=mr.KEEP),void 0===p&&(p=mr.KEEP),void 0===v&&(v=mr.KEEP),void 0===g&&(g=1),this.depthTest=e,this.depthWrite=t,this.depthFunc=n,this.stencilTestFront=i,this.stencilFuncFront=o,this.stencilReadMaskFront=a,this.stencilWriteMaskFront=r,this.stencilFailOpFront=s,this.stencilZFailOpFront=c,this.stencilPassOpFront=l,this.stencilRefFront=f,this.stencilTestBack=u,this.stencilFuncBack=_,this.stencilReadMaskBack=m,this.stencilWriteMaskBack=h,this.stencilFailOpBack=d,this.stencilZFailOpBack=p,this.stencilPassOpBack=v,this.stencilRefBack=g}var t=e.prototype;return t.reset=function(){this.depthTest=!0,this.depthWrite=!0,this.depthFunc=_r.LESS,this.stencilTestFront=!1,this.stencilFuncFront=_r.ALWAYS,this.stencilReadMaskFront=65535,this.stencilWriteMaskFront=65535,this.stencilFailOpFront=mr.KEEP,this.stencilZFailOpFront=mr.KEEP,this.stencilPassOpFront=mr.KEEP,this.stencilRefFront=1,this.stencilTestBack=!1,this.stencilFuncBack=_r.ALWAYS,this.stencilReadMaskBack=65535,this.stencilWriteMaskBack=65535,this.stencilFailOpBack=mr.KEEP,this.stencilZFailOpBack=mr.KEEP,this.stencilPassOpBack=mr.KEEP,this.stencilRefBack=1},t.assign=function(e){Object.assign(this,e)},t.destroy=function(){},le(e,[{key:"handle",get:function(){return Co}}]),e}()),rc=e("bj",function(){function e(e,t,n,i,o,a,r,s){void 0===e&&(e=!1),void 0===t&&(t=hr.ONE),void 0===n&&(n=hr.ZERO),void 0===i&&(i=dr.ADD),void 0===o&&(o=hr.ONE),void 0===a&&(a=hr.ZERO),void 0===r&&(r=dr.ADD),void 0===s&&(s=pr.ALL),this.blend=e,this.blendSrc=t,this.blendDst=n,this.blendEq=i,this.blendSrcAlpha=o,this.blendDstAlpha=a,this.blendAlphaEq=r,this.blendColorMask=s}var t=e.prototype;return t.reset=function(){this.blend=!1,this.blendSrc=hr.ONE,this.blendDst=hr.ZERO,this.blendEq=dr.ADD,this.blendSrcAlpha=hr.ONE,this.blendDstAlpha=hr.ZERO,this.blendAlphaEq=dr.ADD,this.blendColorMask=pr.ALL},t.assign=function(e){Object.assign(this,e)},t.destroy=function(){},le(e,[{key:"handle",get:function(){return Co}}]),e}()),sc=e("bk",function(){function e(e,t,n,i){void 0===e&&(e=!1),void 0===t&&(t=!1),void 0===n&&(n=new Yr),void 0===i&&(i=[new rc]),this.isA2C=e,this.isIndepend=t,this.blendColor=n,this.targets=i}var t=e.prototype;return t.setTarget=function(e,t){var n=this.targets[e];n||(n=this.targets[e]=new rc),Object.assign(n,t)},t.reset=function(){this.isA2C=!1,this.isIndepend=!1,this.blendColor.x=0,this.blendColor.y=0,this.blendColor.z=0,this.blendColor.w=0,this.targets.length=1,this.targets[0].reset()},t.destroy=function(){},le(e,[{key:"handle",get:function(){return Co}}]),e}()),cc=e("bl",(function(e,t,n,i,o,a,r,s,c,l){void 0===e&&(e=null),void 0===t&&(t=null),void 0===n&&(n=null),void 0===i&&(i=new Is),void 0===o&&(o=new oc),void 0===a&&(a=new ac),void 0===r&&(r=new sc),void 0===s&&(s=Sr.TRIANGLE_LIST),void 0===c&&(c=Ir.NONE),void 0===l&&(l=Er.GRAPHICS),this.shader=e,this.pipelineLayout=t,this.renderPass=n,this.inputState=i,this.rasterizerState=o,this.depthStencilState=a,this.blendState=r,this.primitive=s,this.dynamicStates=c,this.bindPoint=l})),lc=e("bm",function(e){function t(t){var n;return(n=e.call(this,Xa.PIPELINE_STATE)||this)._device=void 0,n._shader=null,n._pipelineLayout=null,n._primitive=Sr.TRIANGLE_LIST,n._is=null,n._rs=new oc,n._dss=new ac,n._bs=new sc,n._dynamicStates=Ir.NONE,n._renderPass=null,n._device=t,n}return ue(t,e),le(t,[{key:"shader",get:function(){return this._shader}},{key:"pipelineLayout",get:function(){return this._pipelineLayout}},{key:"primitive",get:function(){return this._primitive}},{key:"rasterizerState",get:function(){return this._rs}},{key:"depthStencilState",get:function(){return this._dss}},{key:"blendState",get:function(){return this._bs}},{key:"inputState",get:function(){return this._is}},{key:"dynamicStates",get:function(){return this._dynamicStates}},{key:"renderPass",get:function(){return this._renderPass}}]),t}(Ds)),fc=e("bn",function(e){function t(t){var n;return(n=e.call(this,Xa.QUEUE)||this)._device=void 0,n._type=Rr.GRAPHICS,n._isAsync=!1,n._device=t,n}return ue(t,e),t.prototype.isAsync=function(){return this._isAsync},le(t,[{key:"type",get:function(){return this._type}}]),t}(Ds)),uc=e("bo",function(e){function t(t){var n;return(n=e.call(this,Xa.RENDER_PASS)||this)._device=void 0,n._colorInfos=[],n._depthStencilInfo=null,n._subpasses=[],n._hash=0,n._device=t,n}return ue(t,e),t.prototype.computeHash=function(){var e="";if(this._subpasses.length)for(var t=0;t<this._subpasses.length;++t){var n=this._subpasses[t];if(n.inputs.length){e+="ia";for(var i=0;i<n.inputs.length;++i){var o=this._colorInfos[n.inputs[i]];e+=","+o.format+","+o.sampleCount}}if(n.colors.length){e+="ca";for(var a=0;a<n.inputs.length;++a){var r=this._colorInfos[n.inputs[a]];e+=","+r.format+","+r.sampleCount}}if(n.depthStencil>=0){var s=this._colorInfos[n.depthStencil];e+="ds,"+s.format+","+s.sampleCount}}else{e+="ca";for(var c=0;c<this._colorInfos.length;++c){var l=this._colorInfos[c];e+=","+l.format+","+l.sampleCount}var f=this._depthStencilInfo;f&&(e+="ds,"+f.format+","+f.sampleCount)}return $s(e,666)},le(t,[{key:"colorAttachments",get:function(){return this._colorInfos}},{key:"depthStencilAttachment",get:function(){return this._depthStencilInfo}},{key:"subPasses",get:function(){return this._subpasses}},{key:"hash",get:function(){return this._hash}}]),t}(Ds)),_c=e("bp",function(e){function t(t){var n;return(n=e.call(this,Xa.SAMPLER)||this)._device=void 0,n._minFilter=fr.LINEAR,n._magFilter=fr.LINEAR,n._mipFilter=fr.NONE,n._addressU=ur.WRAP,n._addressV=ur.WRAP,n._addressW=ur.WRAP,n._maxAnisotropy=16,n._cmpFunc=_r.NEVER,n._borderColor=new Yr,n._mipLODBias=0,n._device=t,n}return ue(t,e),le(t,[{key:"minFilter",get:function(){return this._minFilter}},{key:"magFilter",get:function(){return this._magFilter}},{key:"mipFilter",get:function(){return this._mipFilter}},{key:"addressU",get:function(){return this._addressU}},{key:"addressV",get:function(){return this._addressV}},{key:"addressW",get:function(){return this._addressW}},{key:"maxAnisotropy",get:function(){return this._maxAnisotropy}},{key:"cmpFunc",get:function(){return this._cmpFunc}},{key:"borderColor",get:function(){return this._borderColor}},{key:"mipLODBias",get:function(){return this._mipLODBias}}]),t}(Ds)),mc=e("bq",function(e){function t(n){var i;return(i=e.call(this,Xa.SHADER)||this)._device=void 0,i._id=void 0,i._name="",i._stages=[],i._attributes=[],i._blocks=[],i._samplers=[],i._device=n,i._id=t._shaderIdGen++,i}return ue(t,e),le(t,[{key:"id",get:function(){return this._id}},{key:"name",get:function(){return this._name}},{key:"attributes",get:function(){return this._attributes}},{key:"blocks",get:function(){return this._blocks}},{key:"samplers",get:function(){return this._samplers}}]),t}(Ds));mc._shaderIdGen=0;var hc=e("br",function(e){function t(t){var n;return(n=e.call(this,Xa.TEXTURE)||this)._device=void 0,n._type=rr.TEX2D,n._usage=sr.NONE,n._format=$a.UNKNOWN,n._width=0,n._height=0,n._depth=1,n._layerCount=1,n._levelCount=1,n._samples=lr.X1,n._flags=cr.NONE,n._isPowerOf2=!1,n._size=0,n._device=t,n}return ue(t,e),le(t,[{key:"type",get:function(){return this._type}},{key:"usage",get:function(){return this._usage}},{key:"format",get:function(){return this._format}},{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}},{key:"depth",get:function(){return this._depth}},{key:"layerCount",get:function(){return this._layerCount}},{key:"levelCount",get:function(){return this._levelCount}},{key:"samples",get:function(){return this._samples}},{key:"flags",get:function(){return this._flags}},{key:"size",get:function(){return this._size}}]),t}(Ds)),dc=e("bs",function(e){function t(t){var n;return(n=e.call(this,Xa.GLOBAL_BARRIER)||this)._device=void 0,n._info=new xs,n._device=t,n}return ue(t,e),t.prototype.initialize=function(e){return this._info.copy(e),!0},t}(Ds)),pc=e("bt",function(e){function t(t){var n;return(n=e.call(this,Xa.TEXTURE_BARRIER)||this)._device=void 0,n._info=new ys,n._device=t,n}return ue(t,e),t.prototype.initialize=function(e){return this._info.copy(e),!0},t}(Ds)),vc={Device:Ks,Buffer:Ys,Texture:hc,Sampler:_c,Shader:mc,InputAssembler:ec,RenderPass:uc,Framebuffer:Js,DescriptorSet:tc,DescriptorSetLayout:nc,PipelineLayout:ic,PipelineState:lc,CommandBuffer:Xs,Queue:fc,GlobalBarrier:dc,TextureBarrier:pc,RasterizerState:oc,BlendState:sc,BlendTarget:rc,DepthStencilState:ac,PipelineStateInfo:cc};Object.assign(vc,qs),s.gfx=vc;var gc,xc={Obj:"GFXObject",DRAW_INFO_SIZE:"GFX_DRAW_INFO_SIZE",DESCRIPTOR_BUFFER_TYPE:"",DESCRIPTOR_SAMPLER_TYPE:"",DESCRIPTOR_DYNAMIC_TYPE:"",getTypedArrayConstructor:""};for(var yc in s.gfx)if("__esModule"!==yc){var Ec=xc[yc];""===Ec?Ec=yc:void 0===Ec&&(Ec="GFX"+yc),ee(s,"cc",[{name:Ec,newName:yc,target:s.gfx,targetName:"cc.gfx"}])}!function(e){e[e.ALL=0]="ALL",e[e.CLOSEST=1]="CLOSEST",e[e.ANY=2]="ANY"}(gc||(gc=e("fG",{})));var Sc,Ac,Cc,Tc,Ic,Pc,wc,Rc,bc=(Sc=new Rn(0,0,0),function(e,t){var n=Rn.dot(e.d,t.n);if(Math.abs(n)<Number.EPSILON)return 0;Rn.multiplyScalar(Sc,t.n,t.d);var i=Rn.dot(Rn.subtract(Sc,Sc,e.o),t.n)/n;return i<0?0:i}),Nc=(Ac=new Rn(0,0,0),Cc=new Rn(0,0,0),Tc=new Rn(0,0,0),Ic=new Rn(0,0,0),Pc=new Rn(0,0,0),function(e,t,n){Rn.subtract(Ac,t.b,t.a),Rn.subtract(Cc,t.c,t.a),Rn.cross(Tc,e.d,Cc);var i=Rn.dot(Ac,Tc);if(i<Number.EPSILON&&(!n||i>-Number.EPSILON))return 0;var o=1/i;Rn.subtract(Ic,e.o,t.a);var a=Rn.dot(Ic,Tc)*o;if(a<0||a>1)return 0;Rn.cross(Pc,Ic,Ac);var r=Rn.dot(e.d,Pc)*o;if(r<0||a+r>1)return 0;var s=Rn.dot(Cc,Pc)*o;return s<0?0:s}),Oc=function(){var e=new Rn(0,0,0);return function(t,n){var i=n.radius,o=n.center,a=t.o,r=t.d,s=i*i;Rn.subtract(e,o,a);var c=e.lengthSqr(),l=Rn.dot(e,r),f=s-(c-l*l);if(f<0)return 0;var u=Math.sqrt(f),_=c<s?l+u:l-u;return _<0?0:_}}(),Dc=(wc=new Rn,Rc=new Rn,function(e,t){return Rn.subtract(wc,t.center,t.halfExtents),Rn.add(Rc,t.center,t.halfExtents),Mc(e,wc,Rc)});function Mc(e,t,n){var i=e.o,o=e.d,a=1/o.x,r=1/o.y,s=1/o.z,c=(t.x-i.x)*a,l=(n.x-i.x)*a,f=(t.y-i.y)*r,u=(n.y-i.y)*r,_=(t.z-i.z)*s,m=(n.z-i.z)*s,h=Math.max(Math.max(Math.min(c,l),Math.min(f,u)),Math.min(_,m)),d=Math.min(Math.min(Math.max(c,l),Math.max(f,u)),Math.max(_,m));return d<0||h>d?0:h>0?h:d}var Lc,zc,Fc,Uc,Bc=function(){var e=new Rn,t=new Rn,n=new Rn,i=new Rn,o=new Rn,a=new Rn,r=new Rn,s=new Array(3),c=new Array(3),l=new Array(3),f=new Array(6);return function(u,_){s[0]=_.halfExtents.x,s[1]=_.halfExtents.y,s[2]=_.halfExtents.z,e=_.center,t=u.o,n=u.d,Rn.set(i,_.orientation.m00,_.orientation.m01,_.orientation.m02),Rn.set(o,_.orientation.m03,_.orientation.m04,_.orientation.m05),Rn.set(a,_.orientation.m06,_.orientation.m07,_.orientation.m08),Rn.subtract(r,e,t),c[0]=Rn.dot(i,n),c[1]=Rn.dot(o,n),c[2]=Rn.dot(a,n),l[0]=Rn.dot(i,r),l[1]=Rn.dot(o,r),l[2]=Rn.dot(a,r);for(var m=0;m<3;++m){if(0===c[m]){if(-l[m]-s[m]>0||-l[m]+s[m]<0)return 0;c[m]=1e-7}f[2*m+0]=(l[m]+s[m])/c[m],f[2*m+1]=(l[m]-s[m])/c[m]}var h=Math.max(Math.max(Math.min(f[0],f[1]),Math.min(f[2],f[3])),Math.min(f[4],f[5])),d=Math.min(Math.min(Math.max(f[0],f[1]),Math.max(f[2],f[3])),Math.max(f[4],f[5]));return d<0||h>d?0:h>0?h:d}}(),Gc=function(){var e=new Rn,t=new Rn,n=new Rn,i=new Rn,o=new Rn,a=new Rn,r=new Rn,s=new Or;return function(c,l){var f=l.radius*l.radius,u=Rn.normalize(e,c.d),_=l.ellipseCenter0,m=l.ellipseCenter1,h=Rn.subtract(t,m,_);if(h.equals(Rn.ZERO))return s.radius=l.radius,s.center.set(l.ellipseCenter0),Cl.raySphere(c,s);var d=c.o,p=Rn.subtract(n,d,_),v=Rn.cross(i,u,h),g=v.lengthSqr();if(0===g){s.radius=l.radius;var x=Rn.subtract(o,m,d);return p.lengthSqr()<x.lengthSqr()?s.center.set(l.ellipseCenter0):s.center.set(l.ellipseCenter1),Cl.raySphere(c,s)}var y=Rn.cross(o,p,h),E=h.lengthSqr(),S=2*Rn.dot(v,y),A=S*S-4*g*(y.lengthSqr()-f*E);if(A<0)return 0;var C=(-S-Math.sqrt(A))/(2*g);if(C<0){s.radius=l.radius;var T=Rn.subtract(a,m,d);return p.lengthSqr()<T.lengthSqr()?s.center.set(l.ellipseCenter0):s.center.set(l.ellipseCenter1),Cl.raySphere(c,s)}var I=Rn.scaleAndAdd(a,c.o,u,C),P=Rn.subtract(r,I,_),w=Rn.dot(P,h)/E;return w>=0&&w<=1?C:w<0?(s.radius=l.radius,s.center.set(l.ellipseCenter0),Cl.raySphere(c,s)):w>1?(s.radius=l.radius,s.center.set(l.ellipseCenter1),Cl.raySphere(c,s)):0}}(),Hc=(Lc=Dr.create(),zc={distance:1/0,doubleSided:!1,mode:gc.ANY},Fc=0,Uc=function(e,t,n,i,o,a){e===gc.CLOSEST?(Fc>t||0===Fc)&&(Fc=t,a&&(0===a.length?a.push({distance:t,vertexIndex0:n/3,vertexIndex1:i/3,vertexIndex2:o/3}):(a[0].distance=t,a[0].vertexIndex0=n/3,a[0].vertexIndex1=i/3,a[0].vertexIndex2=o/3))):(Fc=t,a&&a.push({distance:t,vertexIndex0:n/3,vertexIndex1:i/3,vertexIndex2:o/3}))},function(e,t,n){if(Fc=0,0===t.geometricInfo.positions.length)return Fc;var i=void 0===n?zc:n;if(Mc(e,t.geometricInfo.boundingBox.min,t.geometricInfo.boundingBox.max)){var o=t.primitiveMode,a=t.geometricInfo;!function(e,t,n,i,o){if(n===Sr.TRIANGLE_LIST)for(var a=t.length,r=0;r<a;r+=3){var s=3*t[r],c=3*t[r+1],l=3*t[r+2];Rn.set(Lc.a,e[s],e[s+1],e[s+2]),Rn.set(Lc.b,e[c],e[c+1],e[c+2]),Rn.set(Lc.c,e[l],e[l+1],e[l+2]);var f=Cl.rayTriangle(i,Lc,o.doubleSided);if(!(0===f||f>o.distance)&&(Uc(o.mode,f,s,c,l,o.result),o.mode===gc.ANY))return f}else if(n===Sr.TRIANGLE_STRIP)for(var u=t.length-2,_=0,m=0;m<u;m+=1){var h=3*t[m-_],d=3*t[m+_+1],p=3*t[m+2];Rn.set(Lc.a,e[h],e[h+1],e[h+2]),Rn.set(Lc.b,e[d],e[d+1],e[d+2]),Rn.set(Lc.c,e[p],e[p+1],e[p+2]),_=~_;var v=Cl.rayTriangle(i,Lc,o.doubleSided);if(!(0===v||v>o.distance)&&(Uc(o.mode,v,h,d,p,o.result),o.mode===gc.ANY))return v}else if(n===Sr.TRIANGLE_FAN){var g=t.length-1,x=3*t[0];Rn.set(Lc.a,e[x],e[x+1],e[x+2]);for(var y=1;y<g;y+=1){var E=3*t[y],S=3*t[y+1];Rn.set(Lc.b,e[E],e[E+1],e[E+2]),Rn.set(Lc.c,e[S],e[S+1],e[S+2]);var A=Cl.rayTriangle(i,Lc,o.doubleSided);if(!(0===A||A>o.distance)&&(Uc(o.mode,A,x,E,S,o.result),o.mode===gc.ANY))return A}}}(a.positions,a.indices,o,e,i)}return Fc}),kc=function(){var e=0,t={distance:1/0,doubleSided:!1,mode:gc.ANY};return function(n,i,o){e=0;var a=void 0===o?t:o,r=i.renderingSubMeshes.length,s=i.struct.minPosition,c=i.struct.maxPosition;if(s&&c&&!Mc(n,s,c))return e;for(var l=0;l<r;l++){var f=i.renderingSubMeshes[l],u=Hc(n,f,a);if(u)if(a.mode===gc.CLOSEST)(0===e||e>u)&&(e=u,a.subIndices&&(a.subIndices[0]=l));else if(e=u,a.subIndices&&a.subIndices.push(l),a.mode===gc.ANY)return u}return e&&a.mode===gc.CLOSEST&&(a.result&&(a.result[0].distance=e,a.result.length=1),a.subIndices&&(a.subIndices.length=1)),e}}(),Vc=function(){var e=0,t={distance:1/0,doubleSided:!1,mode:gc.ANY},n=new ka,i=new jn;return function(o,a,r){e=0;var s=void 0===r?t:r,c=a.worldBounds;if(c&&!Dc(o,c))return e;ka.copy(n,o),a.node&&(jn.invert(i,a.node.getWorldMatrix(i)),Rn.transformMat4(n.o,o.o,i),Rn.transformMat4Normal(n.d,o.d,i));for(var l=a.subModels,f=0;f<l.length;f++){var u=l[f].subMesh,_=Hc(n,u,s);if(_)if(s.mode===gc.CLOSEST)(0===e||e>_)&&(e=_,s.subIndices&&(s.subIndices[0]=f));else if(e=_,s.subIndices&&s.subIndices.push(f),s.mode===gc.ANY)return _}return e&&s.mode===gc.CLOSEST&&(s.result&&(s.result[0].distance=e,s.result.length=1),s.subIndices&&(s.subIndices.length=1)),e}}(),jc=function(){var e=new Rn(0,0,0);return function(t,n){Rn.subtract(e,t.e,t.s);var i=(n.d-Rn.dot(t.s,n.n))/Rn.dot(e,n.n);return i<0||i>1?0:i}}(),Wc=function(){var e=new Rn(0,0,0),t=new Rn(0,0,0),n=new Rn(0,0,0),i=new Rn(0,0,0),o=new Rn(0,0,0),a=new Rn(0,0,0);return function(r,s,c){Rn.subtract(e,s.b,s.a),Rn.subtract(t,s.c,s.a),Rn.subtract(n,r.s,r.e),Rn.cross(o,e,t);var l=Rn.dot(n,o);if(l<=0)return 0;Rn.subtract(i,r.s,s.a);var f=Rn.dot(i,o);if(f<0||f>l)return 0;Rn.cross(a,n,i);var u=Rn.dot(t,a);if(u<0||u>l)return 0;var _=-Rn.dot(e,a);if(_<0||u+_>l)return 0;if(c){var m=1/l,h=1-(u*=m)-(_*=m);Rn.set(c,s.a.x*h+s.b.x*u+s.c.x*_,s.a.y*h+s.b.y*u+s.c.y*_,s.a.z*h+s.b.z*u+s.c.z*_)}return 1}}(),qc=new ka;function Yc(e,t){qc.o.set(e.s),Rn.subtract(qc.d,e.e,e.s),qc.d.normalize();var n=Dc(qc,t);return n<=e.length()?n:0}function Xc(e,t){qc.o.set(e.s),Rn.subtract(qc.d,e.e,e.s),qc.d.normalize();var n=Bc(qc,t);return n<=e.length()?n:0}function Kc(e,t){qc.o.set(e.s),Rn.subtract(qc.d,e.e,e.s),qc.d.normalize();var n=Oc(qc,t);return n<=e.length()?n:0}var Jc,Qc,Zc,$c,el=(Jc=new Rn,Qc=new Rn,Zc=new Rn,$c=new Rn,function(e,t){return Rn.subtract(Jc,e.center,e.halfExtents),Rn.add(Qc,e.center,e.halfExtents),Rn.subtract(Zc,t.center,t.halfExtents),Rn.add($c,t.center,t.halfExtents),Jc.x<=$c.x&&Qc.x>=Zc.x&&Jc.y<=$c.y&&Qc.y>=Zc.y&&Jc.z<=$c.z&&Qc.z>=Zc.z});function tl(e,t,n,i,o,a){Rn.set(a[0],e.x+n.x*t.x+i.x*t.y+o.x*t.z,e.y+n.y*t.x+i.y*t.y+o.y*t.z,e.z+n.z*t.x+i.z*t.y+o.z*t.z),Rn.set(a[1],e.x-n.x*t.x+i.x*t.y+o.x*t.z,e.y-n.y*t.x+i.y*t.y+o.y*t.z,e.z-n.z*t.x+i.z*t.y+o.z*t.z),Rn.set(a[2],e.x+n.x*t.x-i.x*t.y+o.x*t.z,e.y+n.y*t.x-i.y*t.y+o.y*t.z,e.z+n.z*t.x-i.z*t.y+o.z*t.z),Rn.set(a[3],e.x+n.x*t.x+i.x*t.y-o.x*t.z,e.y+n.y*t.x+i.y*t.y-o.y*t.z,e.z+n.z*t.x+i.z*t.y-o.z*t.z),Rn.set(a[4],e.x-n.x*t.x-i.x*t.y-o.x*t.z,e.y-n.y*t.x-i.y*t.y-o.y*t.z,e.z-n.z*t.x-i.z*t.y-o.z*t.z),Rn.set(a[5],e.x+n.x*t.x-i.x*t.y-o.x*t.z,e.y+n.y*t.x-i.y*t.y-o.y*t.z,e.z+n.z*t.x-i.z*t.y-o.z*t.z),Rn.set(a[6],e.x-n.x*t.x+i.x*t.y-o.x*t.z,e.y-n.y*t.x+i.y*t.y-o.y*t.z,e.z-n.z*t.x+i.z*t.y-o.z*t.z),Rn.set(a[7],e.x-n.x*t.x-i.x*t.y+o.x*t.z,e.y-n.y*t.x-i.y*t.y+o.y*t.z,e.z-n.z*t.x-i.z*t.y+o.z*t.z)}function nl(e,t){for(var n=Rn.dot(t,e[0]),i=n,o=1;o<8;++o){var a=Rn.dot(t,e[o]);n=a<n?a:n,i=a>i?a:i}return[n,i]}var il,ol,al,rl=function(){for(var e=new Array(15),t=0;t<15;t++)e[t]=new Rn(0,0,0);for(var n=new Array(8),i=new Array(8),o=0;o<8;o++)n[o]=new Rn(0,0,0),i[o]=new Rn(0,0,0);var a=new Rn,r=new Rn;return function(t,o){Rn.set(e[0],1,0,0),Rn.set(e[1],0,1,0),Rn.set(e[2],0,0,1),Rn.set(e[3],o.orientation.m00,o.orientation.m01,o.orientation.m02),Rn.set(e[4],o.orientation.m03,o.orientation.m04,o.orientation.m05),Rn.set(e[5],o.orientation.m06,o.orientation.m07,o.orientation.m08);for(var s=0;s<3;++s)Rn.cross(e[6+3*s],e[s],e[0]),Rn.cross(e[7+3*s],e[s],e[1]),Rn.cross(e[7+3*s],e[s],e[2]);Rn.subtract(a,t.center,t.halfExtents),Rn.add(r,t.center,t.halfExtents),function(e,t,n){Rn.set(n[0],e.x,t.y,t.z),Rn.set(n[1],e.x,t.y,e.z),Rn.set(n[2],e.x,e.y,t.z),Rn.set(n[3],e.x,e.y,e.z),Rn.set(n[4],t.x,t.y,t.z),Rn.set(n[5],t.x,t.y,e.z),Rn.set(n[6],t.x,e.y,t.z),Rn.set(n[7],t.x,e.y,e.z)}(a,r,n),tl(o.center,o.halfExtents,e[3],e[4],e[5],i);for(var c=0;c<15;++c){var l=nl(n,e[c]),f=nl(i,e[c]);if(f[0]>l[1]||l[0]>f[1])return 0}return 1}}(),sl=function(e,t){var n=e.halfExtents.x*Math.abs(t.n.x)+e.halfExtents.y*Math.abs(t.n.y)+e.halfExtents.z*Math.abs(t.n.z),i=Rn.dot(t.n,e.center);return i+n<t.d?-1:i-n>t.d?0:1},cl=function(e,t){for(var n=0;n<t.planes.length;n++)if(-1===sl(e,t.planes[n]))return 0;return 1},ll=function(){for(var e=new Array(8),t=0,n=0,i=0;i<e.length;i++)e[i]=new Rn(0,0,0);return function(i,o){for(var a=0,r=!1,s=0;s<o.planes.length;s++){if(-1===(a=sl(i,o.planes[s])))return 0;1===a&&(r=!0)}if(!r)return 1;for(var c=0;c<o.vertices.length;c++)Rn.subtract(e[c],o.vertices[c],i.center);t=0,n=0;for(var l=0;l<o.vertices.length;l++)e[l].x>i.halfExtents.x?t++:e[l].x<-i.halfExtents.x&&n++;if(t===o.vertices.length||n===o.vertices.length)return 0;t=0,n=0;for(var f=0;f<o.vertices.length;f++)e[f].y>i.halfExtents.y?t++:e[f].y<-i.halfExtents.y&&n++;if(t===o.vertices.length||n===o.vertices.length)return 0;t=0,n=0;for(var u=0;u<o.vertices.length;u++)e[u].z>i.halfExtents.z?t++:e[u].z<-i.halfExtents.z&&n++;return t===o.vertices.length||n===o.vertices.length?0:1}}(),fl=(il=new Rn(0,0,0),ol=new Dn,function(e,t){return Rn.subtract(il,t,e.center),Rn.transformMat3(il,il,Dn.transpose(ol,e.orientation)),n=il,i=e.halfExtents,Math.abs(n.x)<i.x&&Math.abs(n.y)<i.y&&Math.abs(n.z)<i.z;var n,i}),ul=(al=function(e,t,n,i){return Math.abs(e.x*t+e.y*n+e.z*i)},function(e,t){var n=e.halfExtents.x*al(t.n,e.orientation.m00,e.orientation.m01,e.orientation.m02)+e.halfExtents.y*al(t.n,e.orientation.m03,e.orientation.m04,e.orientation.m05)+e.halfExtents.z*al(t.n,e.orientation.m06,e.orientation.m07,e.orientation.m08),i=Rn.dot(t.n,e.center);return i+n<t.d?-1:i-n>t.d?0:1}),_l=function(e,t){for(var n=0;n<t.planes.length;n++)if(-1===ul(e,t.planes[n]))return 0;return 1},ml=function(){for(var e=new Array(8),t=0,n=0,i=0,o=0;o<e.length;o++)e[o]=new Rn(0,0,0);var a=function(e,t,n,i){return e.x*t+e.y*n+e.z*i};return function(o,r){for(var s=0,c=!1,l=0;l<r.planes.length;l++){if(-1===(s=ul(o,r.planes[l])))return 0;1===s&&(c=!0)}if(!c)return 1;for(var f=0;f<r.vertices.length;f++)Rn.subtract(e[f],r.vertices[f],o.center);n=0,i=0;for(var u=0;u<r.vertices.length;u++)(t=a(e[u],o.orientation.m00,o.orientation.m01,o.orientation.m02))>o.halfExtents.x?n++:t<-o.halfExtents.x&&i++;if(n===r.vertices.length||i===r.vertices.length)return 0;n=0,i=0;for(var _=0;_<r.vertices.length;_++)(t=a(e[_],o.orientation.m03,o.orientation.m04,o.orientation.m05))>o.halfExtents.y?n++:t<-o.halfExtents.y&&i++;if(n===r.vertices.length||i===r.vertices.length)return 0;n=0,i=0;for(var m=0;m<r.vertices.length;m++)(t=a(e[m],o.orientation.m06,o.orientation.m07,o.orientation.m08))>o.halfExtents.z?n++:t<-o.halfExtents.z&&i++;return n===r.vertices.length||i===r.vertices.length?0:1}}(),hl=function(){for(var e=new Array(15),t=0;t<15;t++)e[t]=new Rn(0,0,0);for(var n=new Array(8),i=new Array(8),o=0;o<8;o++)n[o]=new Rn(0,0,0),i[o]=new Rn(0,0,0);return function(t,o){Rn.set(e[0],t.orientation.m00,t.orientation.m01,t.orientation.m02),Rn.set(e[1],t.orientation.m03,t.orientation.m04,t.orientation.m05),Rn.set(e[2],t.orientation.m06,t.orientation.m07,t.orientation.m08),Rn.set(e[3],o.orientation.m00,o.orientation.m01,o.orientation.m02),Rn.set(e[4],o.orientation.m03,o.orientation.m04,o.orientation.m05),Rn.set(e[5],o.orientation.m06,o.orientation.m07,o.orientation.m08);for(var a=0;a<3;++a)Rn.cross(e[6+3*a],e[a],e[0]),Rn.cross(e[7+3*a],e[a],e[1]),Rn.cross(e[7+3*a],e[a],e[2]);tl(t.center,t.halfExtents,e[0],e[1],e[2],n),tl(o.center,o.halfExtents,e[3],e[4],e[5],i);for(var r=0;r<15;++r){var s=nl(n,e[r]),c=nl(i,e[r]);if(c[0]>s[1]||s[0]>c[1])return 0}return 1}}(),dl=function(){for(var e=new Or,t=new Rn,n=new Rn,i=new Rn,o=new Array(8),a=0;a<8;a++)o[a]=new Rn;for(var r=new Array(8),s=0;s<8;s++)r[s]=new Rn;return function(a,s){if(0===Rn.squaredDistance(s.ellipseCenter0,s.ellipseCenter1))return e.radius=s.radius,e.center.set(s.ellipseCenter0),Cl.sphereOBB(e,a);t.x=a.orientation.m00,t.y=a.orientation.m01,t.z=a.orientation.m02,n.x=a.orientation.m03,n.y=a.orientation.m04,n.z=a.orientation.m05,i.x=a.orientation.m06,i.y=a.orientation.m07,i.z=a.orientation.m08,tl(a.center,a.halfExtents,t,n,i,o);var c=r,l=Rn.copy(c[0],t),f=Rn.copy(c[1],n),u=Rn.copy(c[2],i);Rn.subtract(c[3],s.center,a.center).normalize();var _=Rn.subtract(c[4],s.ellipseCenter0,s.ellipseCenter1);_.normalize(),Rn.cross(c[5],l,_),Rn.cross(c[6],f,_),Rn.cross(c[7],u,_);for(var m=0;m<8;++m){var h=nl(o,c[m]),d=Rn.dot(c[m],s.ellipseCenter0),p=Rn.dot(c[m],s.ellipseCenter1),v=Math.max(d,p),g=Math.min(d,p)-s.radius,x=v+s.radius;if(g>h[1]||h[0]>x)return 0}return 1}}(),pl=function(e,t){var n=Rn.dot(t.n,e.center),i=e.radius*t.n.length();return n+i<t.d?-1:n-i>t.d?0:1},vl=function(e,t){for(var n=0;n<t.planes.length;n++)if(-1===pl(e,t.planes[n]))return 0;return 1},gl=function(){var e=new Rn(0,0,0),t=[1,-1,1,-1,1,-1];return function(n,i){for(var o=0;o<6;o++){var a=i.planes[o],r=n.radius,s=n.center,c=a.n,l=a.d,f=Rn.dot(c,s);if(f+r<l)return 0;if(!(f-r>l)){Rn.add(e,s,Rn.multiplyScalar(e,c,r));for(var u=0;u<6;u++)if(u!==o&&u!==o+t[o]){var _=i.planes[u];if(Rn.dot(_.n,e)<_.d)return 0}}}return 1}}(),xl=function(e,t){var n=e.radius+t.radius;return Rn.squaredDistance(e.center,t.center)<n*n},yl=function(){var e=new Rn;return function(t,n){return Ua(e,t.center,n),Rn.squaredDistance(t.center,e)<t.radius*t.radius}}(),El=function(){var e=new Rn;return function(t,n){return Ba(e,t.center,n),Rn.squaredDistance(t.center,e)<t.radius*t.radius}}(),Sl=function(){var e=new Rn,t=new Rn;return function(n,i){var o=n.radius+i.radius,a=o*o,r=Rn.squaredDistance(i.ellipseCenter0,i.ellipseCenter1);if(0===r)return Rn.squaredDistance(n.center,i.center)<a;Rn.subtract(e,n.center,i.ellipseCenter0),Rn.subtract(t,i.ellipseCenter1,i.ellipseCenter0);var s=Rn.dot(e,t)/r;return s<0?Rn.squaredDistance(n.center,i.ellipseCenter0)<a:s>1?Rn.squaredDistance(n.center,i.ellipseCenter1)<a:(Rn.scaleAndAdd(e,i.ellipseCenter0,t,s),Rn.squaredDistance(n.center,e)<a)}}(),Al=function(){var e=new Rn,t=new Rn,n=new Rn,i=new Rn,o=new Rn,a=new Rn;return function(r,s){var c,l,f,u,_=Rn.subtract(e,r.ellipseCenter1,r.ellipseCenter0),m=Rn.subtract(t,s.ellipseCenter1,s.ellipseCenter0),h=Rn.subtract(n,r.ellipseCenter0,s.ellipseCenter0),d=Rn.dot(_,_),p=Rn.dot(_,m),v=Rn.dot(m,m),g=Rn.dot(_,h),x=Rn.dot(m,h),y=d*v-p*p,E=y,S=y;y<dn?(l=0,E=1,u=x,S=v):(u=d*x-p*g,(l=p*x-v*g)<0?(l=0,u=x,S=v):l>E&&(l=E,u=x+p,S=v)),u<0?(u=0,-g<0?l=0:-g>d?l=E:(l=-g,E=d)):u>S&&(u=S,-g+p<0?l=0:-g+p>d?l=E:(l=-g+p,E=d)),c=Math.abs(l)<dn?0:l/E,f=Math.abs(u)<dn?0:u/S;var A=i;A.set(h),A.add(Rn.multiplyScalar(o,_,c)),A.subtract(Rn.multiplyScalar(a,m,f));var C=r.radius+s.radius;return A.lengthSqr()<C*C}}(),Cl=e("e$",{raySphere:Oc,rayAABB:Dc,rayOBB:Bc,rayPlane:bc,rayTriangle:Nc,rayCapsule:Gc,raySubMesh:Hc,rayMesh:kc,rayModel:Vc,lineSphere:Kc,lineAABB:Yc,lineOBB:Xc,linePlane:jc,lineTriangle:Wc,sphereWithSphere:xl,sphereAABB:yl,sphereOBB:El,spherePlane:pl,sphereFrustum:vl,sphereFrustumAccurate:gl,sphereCapsule:Sl,aabbWithAABB:el,aabbWithOBB:rl,aabbPlane:sl,aabbFrustum:cl,aabbFrustumAccurate:ll,obbWithOBB:hl,obbPlane:ul,obbFrustum:_l,obbFrustumAccurate:ml,obbPoint:fl,obbCapsule:dl,capsuleWithCapsule:Al,resolve:function(e,t,n){void 0===n&&(n=null);var i=e._type,o=t._type,a=this[i|o];return i<o?a(e,t,n):a(t,e,n)}});Cl[Ga.SHAPE_RAY|Ga.SHAPE_SPHERE]=Oc,Cl[Ga.SHAPE_RAY|Ga.SHAPE_AABB]=Dc,Cl[Ga.SHAPE_RAY|Ga.SHAPE_OBB]=Bc,Cl[Ga.SHAPE_RAY|Ga.SHAPE_PLANE]=bc,Cl[Ga.SHAPE_RAY|Ga.SHAPE_TRIANGLE]=Nc,Cl[Ga.SHAPE_RAY|Ga.SHAPE_CAPSULE]=Gc,Cl[Ga.SHAPE_LINE|Ga.SHAPE_SPHERE]=Kc,Cl[Ga.SHAPE_LINE|Ga.SHAPE_AABB]=Yc,Cl[Ga.SHAPE_LINE|Ga.SHAPE_OBB]=Xc,Cl[Ga.SHAPE_LINE|Ga.SHAPE_PLANE]=jc,Cl[Ga.SHAPE_LINE|Ga.SHAPE_TRIANGLE]=Wc,Cl[Ga.SHAPE_SPHERE]=xl,Cl[Ga.SHAPE_SPHERE|Ga.SHAPE_AABB]=yl,Cl[Ga.SHAPE_SPHERE|Ga.SHAPE_OBB]=El,Cl[Ga.SHAPE_SPHERE|Ga.SHAPE_PLANE]=pl,Cl[Ga.SHAPE_SPHERE|Ga.SHAPE_FRUSTUM]=vl,Cl[Ga.SHAPE_SPHERE|Ga.SHAPE_FRUSTUM_ACCURATE]=gl,Cl[Ga.SHAPE_SPHERE|Ga.SHAPE_CAPSULE]=Sl,Cl[Ga.SHAPE_AABB]=el,Cl[Ga.SHAPE_AABB|Ga.SHAPE_OBB]=rl,Cl[Ga.SHAPE_AABB|Ga.SHAPE_PLANE]=sl,Cl[Ga.SHAPE_AABB|Ga.SHAPE_FRUSTUM]=cl,Cl[Ga.SHAPE_AABB|Ga.SHAPE_FRUSTUM_ACCURATE]=ll,Cl[Ga.SHAPE_OBB]=hl,Cl[Ga.SHAPE_OBB|Ga.SHAPE_PLANE]=ul,Cl[Ga.SHAPE_OBB|Ga.SHAPE_FRUSTUM]=_l,Cl[Ga.SHAPE_OBB|Ga.SHAPE_FRUSTUM_ACCURATE]=ml,Cl[Ga.SHAPE_OBB|Ga.SHAPE_CAPSULE]=dl,Cl[Ga.SHAPE_CAPSULE]=Al,ee(Ha.prototype,"line",[{name:"mag",newName:"len"},{name:"magnitude",newName:"len"}]),te(Cl,"intersect",[{name:"line_quad"}]);var Tl=new Rn(0,0,0),Il=new Rn(0,0,0),Pl=s.mat4(),wl=s.v4(),Rl=e("fA",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=1),void 0===n&&(n=0),void 0===i&&(i=0),this.n=void 0,this.d=void 0,this._type=void 0,this._type=Ga.SHAPE_PLANE,this.n=new Rn(e,t,n),this.d=i}return e.create=function(t,n,i,o){return new e(t,n,i,o)},e.clone=function(t){return new e(t.n.x,t.n.y,t.n.z,t.d)},e.copy=function(e,t){return Rn.copy(e.n,t.n),e.d=t.d,e},e.fromPoints=function(e,t,n,i){return Rn.subtract(Tl,n,t),Rn.subtract(Il,i,t),Rn.normalize(e.n,Rn.cross(e.n,Tl,Il)),e.d=Rn.dot(e.n,t),e},e.set=function(e,t,n,i,o){return e.n.x=t,e.n.y=n,e.n.z=i,e.d=o,e},e.fromNormalAndPoint=function(e,t,n){return Rn.copy(e.n,t),e.d=Rn.dot(t,n),e},e.normalize=function(e,t){var n=t.n.length();return Rn.normalize(e.n,t.n),n>0&&(e.d=t.d/n),e},e.prototype.transform=function(e){jn.invert(Pl,e),jn.transpose(Pl,Pl),Zn.set(wl,this.n.x,this.n.y,this.n.z,this.d),Zn.transformMat4(wl,wl,Pl),Rn.set(this.n,wl.x,wl.y,wl.z),this.d=wl.w},le(e,[{key:"type",get:function(){return this._type}},{key:"x",get:function(){return this.n.x},set:function(e){this.n.x=e}},{key:"y",get:function(){return this.n.y},set:function(e){this.n.y=e}},{key:"z",get:function(){return this.n.z},set:function(e){this.n.z=e}},{key:"w",get:function(){return this.d},set:function(e){this.d=e}}]),e}()),bl=new Rn,Nl=new Rn,Ol=new Rn,Dl=new Rn,Ml=new Dn,Ll=function(e,t,n){Ml.m00=Math.abs(n.m00),Ml.m01=Math.abs(n.m01),Ml.m02=Math.abs(n.m02),Ml.m03=Math.abs(n.m04),Ml.m04=Math.abs(n.m05),Ml.m05=Math.abs(n.m06),Ml.m06=Math.abs(n.m08),Ml.m07=Math.abs(n.m09),Ml.m08=Math.abs(n.m10),Rn.transformMat3(e,t,Ml)},zl=e("eZ",function(){function e(e,t,n,i,o,a){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),void 0===o&&(o=1),void 0===a&&(a=1),this.center=void 0,this.halfExtents=void 0,this._type=void 0,this._type=Ga.SHAPE_AABB,this.center=new Rn(e,t,n),this.halfExtents=new Rn(i,o,a)}e.create=function(t,n,i,o,a,r){return new e(t,n,i,o,a,r)},e.clone=function(t){return new e(t.center.x,t.center.y,t.center.z,t.halfExtents.x,t.halfExtents.y,t.halfExtents.z)},e.copy=function(e,t){return Rn.copy(e.center,t.center),Rn.copy(e.halfExtents,t.halfExtents),e},e.fromPoints=function(e,t,n){return Rn.add(bl,n,t),Rn.subtract(Nl,n,t),Rn.multiplyScalar(e.center,bl,.5),Rn.multiplyScalar(e.halfExtents,Nl,.5),e},e.set=function(e,t,n,i,o,a,r){return Rn.set(e.center,t,n,i),Rn.set(e.halfExtents,o,a,r),e},e.merge=function(t,n,i){return Rn.subtract(bl,n.center,n.halfExtents),Rn.subtract(Nl,i.center,i.halfExtents),Rn.add(Ol,n.center,n.halfExtents),Rn.add(Dl,i.center,i.halfExtents),Rn.max(Dl,Ol,Dl),Rn.min(Ol,bl,Nl),e.fromPoints(t,Ol,Dl)},e.toBoundingSphere=function(e,t){t.getBoundary(bl,Nl),e.center.set(bl),e.radius=0,Rn.subtract(Ol,Nl,e.center);var n=Ol.length(),i=.5*n;return e.radius+=i,Rn.multiplyScalar(Ol,Ol,i/n),Rn.add(e.center,e.center,Ol),e},e.transform=function(e,t,n){return Rn.transformMat4(e.center,t.center,n),Ll(e.halfExtents,t.halfExtents,n),e};var t=e.prototype;return t.getBoundary=function(e,t){Rn.subtract(e,this.center,this.halfExtents),Rn.add(t,this.center,this.halfExtents)},t.transform=function(e,t,n,i,o){Rn.transformMat4(o.center,this.center,e),Ll(o.halfExtents,this.halfExtents,e)},t.clone=function(){return e.clone(this)},t.copy=function(t){return e.copy(this,t)},le(e,[{key:"type",get:function(){return this._type}}]),e}()),Fl=new Rn,Ul=new Rn,Bl=new Dn,Gl=e("fC",function(){function e(e,t,n,i,o,a,r,s,c,l,f,u,_,m,h){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),void 0===o&&(o=1),void 0===a&&(a=1),void 0===r&&(r=1),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=0),void 0===f&&(f=1),void 0===u&&(u=0),void 0===_&&(_=0),void 0===m&&(m=0),void 0===h&&(h=1),this.center=void 0,this.halfExtents=void 0,this.orientation=void 0,this._type=void 0,this._type=Ga.SHAPE_OBB,this.center=new Rn(e,t,n),this.halfExtents=new Rn(i,o,a),this.orientation=new Dn(r,s,c,l,f,u,_,m,h)}e.create=function(t,n,i,o,a,r,s,c,l,f,u,_,m,h,d){return new e(t,n,i,o,a,r,s,c,l,f,u,_,m,h,d)},e.clone=function(t){return new e(t.center.x,t.center.y,t.center.z,t.halfExtents.x,t.halfExtents.y,t.halfExtents.z,t.orientation.m00,t.orientation.m01,t.orientation.m02,t.orientation.m03,t.orientation.m04,t.orientation.m05,t.orientation.m06,t.orientation.m07,t.orientation.m08)},e.copy=function(e,t){return Rn.copy(e.center,t.center),Rn.copy(e.halfExtents,t.halfExtents),Dn.copy(e.orientation,t.orientation),e},e.fromPoints=function(e,t,n){return Rn.multiplyScalar(e.center,Rn.add(Fl,t,n),.5),Rn.multiplyScalar(e.halfExtents,Rn.subtract(Ul,n,t),.5),Dn.identity(e.orientation),e},e.set=function(e,t,n,i,o,a,r,s,c,l,f,u,_,m,h,d){return Rn.set(e.center,t,n,i),Rn.set(e.halfExtents,o,a,r),Dn.set(e.orientation,s,c,l,f,u,_,m,h,d),e};var t=e.prototype;return t.getBoundary=function(e,t){!function(e,t,n){Bl.m00=Math.abs(n.m00),Bl.m01=Math.abs(n.m01),Bl.m02=Math.abs(n.m02),Bl.m03=Math.abs(n.m03),Bl.m04=Math.abs(n.m04),Bl.m05=Math.abs(n.m05),Bl.m06=Math.abs(n.m06),Bl.m07=Math.abs(n.m07),Bl.m08=Math.abs(n.m08),Rn.transformMat3(e,t,Bl)}(Fl,this.halfExtents,this.orientation),Rn.subtract(e,this.center,Fl),Rn.add(t,this.center,Fl)},t.transform=function(e,t,n,i,o){Rn.transformMat4(o.center,this.center,e),Dn.fromQuat(o.orientation,n),Rn.multiply(o.halfExtents,this.halfExtents,i)},t.translateAndRotate=function(e,t,n){Rn.transformMat4(n.center,this.center,e),Dn.fromQuat(n.orientation,t)},t.setScale=function(e,t){Rn.multiply(t.halfExtents,this.halfExtents,e)},le(e,[{key:"type",get:function(){return this._type}}]),e}()),Hl=e("fD",function(){function e(e,t,n){void 0===e&&(e=.5),void 0===t&&(t=.5),void 0===n&&(n=1),this._type=void 0,this.radius=void 0,this.halfHeight=void 0,this.axis=void 0,this.center=void 0,this.rotation=void 0,this.ellipseCenter0=void 0,this.ellipseCenter1=void 0,this._type=Ga.SHAPE_CAPSULE,this.radius=e,this.halfHeight=t,this.axis=n,this.center=new Rn,this.rotation=new zn,this.ellipseCenter0=new Rn(0,t,0),this.ellipseCenter1=new Rn(0,-t,0),this.updateCache()}var t=e.prototype;return t.transform=function(e,t,n,i,o){var a=i,r=Tn(a);o.radius=this.radius*Math.abs(r);var s=(this.halfHeight+this.radius)*Math.abs(a.y)-o.radius;s<0&&(s=0),o.halfHeight=s,Rn.transformMat4(o.center,this.center,e),zn.multiply(o.rotation,this.rotation,n),o.updateCache()},t.updateCache=function(){this.updateLocalCenter(),Rn.transformQuat(this.ellipseCenter0,this.ellipseCenter0,this.rotation),Rn.transformQuat(this.ellipseCenter1,this.ellipseCenter1,this.rotation),this.ellipseCenter0.add(this.center),this.ellipseCenter1.add(this.center)},t.updateLocalCenter=function(){var e=this.halfHeight;switch(this.axis){case 0:this.ellipseCenter0.set(e,0,0),this.ellipseCenter1.set(-e,0,0);break;case 1:this.ellipseCenter0.set(0,e,0),this.ellipseCenter1.set(0,-e,0);break;case 2:this.ellipseCenter0.set(0,0,e),this.ellipseCenter1.set(0,0,-e)}},le(e,[{key:"type",get:function(){return this._type}}]),e}()),kl=new Array(8);kl[0]=new Rn(1,1,1),kl[1]=new Rn(-1,1,1),kl[2]=new Rn(-1,-1,1),kl[3]=new Rn(1,-1,1),kl[4]=new Rn(1,1,-1),kl[5]=new Rn(-1,1,-1),kl[6]=new Rn(-1,-1,-1),kl[7]=new Rn(1,-1,-1);var Vl,jl,Wl,ql=e("eV",function(){function e(){this._type=void 0,this.planes=void 0,this.vertices=void 0,this._type=Ga.SHAPE_FRUSTUM,this.planes=new Array(6);for(var e=0;e<6;++e)this.planes[e]=Rl.create(0,0,0,0);this.vertices=new Array(8);for(var t=0;t<8;++t)this.vertices[t]=new Rn}e.create=function(){return new e},e.clone=function(t){return e.copy(new e,t)},e.copy=function(e,t){e._type=t._type;for(var n=0;n<6;++n)Rl.copy(e.planes[n],t.planes[n]);for(var i=0;i<8;++i)Rn.copy(e.vertices[i],t.vertices[i]);return e};var t=e.prototype;return t.update=function(e,t){if(Rn.set(this.planes[0].n,e.m03+e.m00,e.m07+e.m04,e.m11+e.m08),this.planes[0].d=-(e.m15+e.m12),Rn.set(this.planes[1].n,e.m03-e.m00,e.m07-e.m04,e.m11-e.m08),this.planes[1].d=-(e.m15-e.m12),Rn.set(this.planes[2].n,e.m03+e.m01,e.m07+e.m05,e.m11+e.m09),this.planes[2].d=-(e.m15+e.m13),Rn.set(this.planes[3].n,e.m03-e.m01,e.m07-e.m05,e.m11-e.m09),this.planes[3].d=-(e.m15-e.m13),Rn.set(this.planes[4].n,e.m03+e.m02,e.m07+e.m06,e.m11+e.m10),this.planes[4].d=-(e.m15+e.m14),Rn.set(this.planes[5].n,e.m03-e.m02,e.m07-e.m06,e.m11-e.m10),this.planes[5].d=-(e.m15-e.m14),this._type===Ga.SHAPE_FRUSTUM_ACCURATE){for(var n=0;n<6;n++){var i=this.planes[n],o=1/i.n.length();Rn.multiplyScalar(i.n,i.n,o),i.d*=o}for(var a=0;a<8;a++)Rn.transformMat4(this.vertices[a],kl[a],t)}},t.transform=function(e){if(this._type===Ga.SHAPE_FRUSTUM_ACCURATE){for(var t=0;t<8;t++)Rn.transformMat4(this.vertices[t],this.vertices[t],e);Rl.fromPoints(this.planes[0],this.vertices[1],this.vertices[5],this.vertices[6]),Rl.fromPoints(this.planes[1],this.vertices[3],this.vertices[7],this.vertices[4]),Rl.fromPoints(this.planes[2],this.vertices[6],this.vertices[7],this.vertices[3]),Rl.fromPoints(this.planes[3],this.vertices[0],this.vertices[4],this.vertices[5]),Rl.fromPoints(this.planes[4],this.vertices[2],this.vertices[3],this.vertices[0]),Rl.fromPoints(this.planes[0],this.vertices[7],this.vertices[6],this.vertices[5])}},le(e,[{key:"accurate",set:function(e){this._type=e?Ga.SHAPE_FRUSTUM_ACCURATE:Ga.SHAPE_FRUSTUM}},{key:"type",get:function(){return this._type}}]),e}());ql.createOrtho=(Vl=new Rn,function(e,t,n,i,o,a){var r=t/2,s=n/2;Rn.set(Vl,r,s,i),Rn.transformMat4(e.vertices[0],Vl,a),Rn.set(Vl,-r,s,i),Rn.transformMat4(e.vertices[1],Vl,a),Rn.set(Vl,-r,-s,i),Rn.transformMat4(e.vertices[2],Vl,a),Rn.set(Vl,r,-s,i),Rn.transformMat4(e.vertices[3],Vl,a),Rn.set(Vl,r,s,o),Rn.transformMat4(e.vertices[4],Vl,a),Rn.set(Vl,-r,s,o),Rn.transformMat4(e.vertices[5],Vl,a),Rn.set(Vl,-r,-s,o),Rn.transformMat4(e.vertices[6],Vl,a),Rn.set(Vl,r,-s,o),Rn.transformMat4(e.vertices[7],Vl,a),Rl.fromPoints(e.planes[0],e.vertices[1],e.vertices[6],e.vertices[5]),Rl.fromPoints(e.planes[1],e.vertices[3],e.vertices[4],e.vertices[7]),Rl.fromPoints(e.planes[2],e.vertices[6],e.vertices[3],e.vertices[7]),Rl.fromPoints(e.planes[3],e.vertices[0],e.vertices[5],e.vertices[4]),Rl.fromPoints(e.planes[4],e.vertices[2],e.vertices[0],e.vertices[3]),Rl.fromPoints(e.planes[0],e.vertices[7],e.vertices[5],e.vertices[6])}),function(e){e[e.Default=0]="Default",e[e.Normal=1]="Normal",e[e.Loop=2]="Loop",e[e.ShouldWrap=4]="ShouldWrap",e[e.Clamp=8]="Clamp",e[e.PingPong=22]="PingPong",e[e.Reverse=36]="Reverse"}(jl||(jl=e("gw",{}))),function(e){e[e.Default=jl.Default]="Default",e[e.Normal=jl.Normal]="Normal",e[e.Reverse=jl.Reverse]="Reverse",e[e.Loop=jl.Loop]="Loop",e[e.LoopReverse=jl.Loop|jl.Reverse]="LoopReverse",e[e.PingPong=jl.PingPong]="PingPong",e[e.PingPongReverse=jl.PingPong|jl.Reverse]="PingPongReverse"}(Wl||(Wl=e("gv",{}))),xt(Wl),e("gx",function(){function e(e){this.ratio=0,this.time=0,this.direction=1,this.stopped=!0,this.iterations=0,this.frameIndex=void 0,e&&this.set(e)}return e.prototype.set=function(e){this.ratio=e.ratio,this.time=e.time,this.direction=e.direction,this.stopped=e.stopped,this.iterations=e.iterations,this.frameIndex=e.frameIndex},e}());var Yl=pt({Default:jl.Default,Normal:jl.Normal,Clamp:jl.Clamp,Loop:jl.Loop,PingPong:jl.PingPong}),Xl=e("fE",(function(){this.time=0,this.value=0,this.inTangent=0,this.outTangent=0}));fn.fastDefine("cc.Keyframe",Xl,{time:0,value:0,inTangent:0,outTangent:0});var Kl=function(){function e(){this.index=void 0,this.time=void 0,this.endTime=void 0,this.coefficient=void 0,this.index=-1,this.time=0,this.endTime=0,this.coefficient=new Float32Array(4)}return e.prototype.evaluate=function(e){return t=e-this.time,n=this.coefficient,t*(t*(t*n[0]+n[1])+n[2])+n[3];var t,n},e}(),Jl=e("fF",function(){function e(t){void 0===t&&(t=null),this.keyFrames=void 0,this.preWrapMode=Yl.Loop,this.postWrapMode=Yl.Clamp,this.cachedKey=void 0,this.keyFrames=t||[].concat(e.defaultKF),this.cachedKey=new Kl}var t=e.prototype;return t.addKey=function(e){null==this.keyFrames&&(this.keyFrames=[]),this.keyFrames.push(e)},t.evaluate_slow=function(e){var t=e,n=e<0?this.preWrapMode:this.postWrapMode,i=this.keyFrames[0].time,o=this.keyFrames[this.keyFrames.length-1].time;switch(n){case Yl.Loop:t=Sn(e-i,o-i)+i;break;case Yl.PingPong:t=An(e-i,o-i)+i;break;case Yl.Default:case Yl.Normal:case Yl.Clamp:default:t=pn(e,i,o)}var a=0;if(t>this.keyFrames[0].time)if(t>=this.keyFrames[this.keyFrames.length-1].time)a=this.keyFrames.length-2;else for(var r=0;r<this.keyFrames.length-1;r++)if(t>=this.keyFrames[0].time&&t<=this.keyFrames[r+1].time){a=r;break}var s=this.keyFrames[a],c=this.keyFrames[a+1],l=Cn(s.time,c.time,t),f=c.time-s.time,u=s.outTangent*f,_=c.inTangent*f,m=l*l,h=m*l,d=h-2*m+l,p=h-m,v=-2*h+3*m;return(2*h-3*m+1)*s.value+d*u+p*_+v*c.value},t.evaluate=function(e){var t=e,n=e<0?this.preWrapMode:this.postWrapMode,i=this.keyFrames[0].time,o=this.keyFrames[this.keyFrames.length-1].time;switch(n){case Yl.Loop:t=Sn(e-i,o-i)+i;break;case Yl.PingPong:t=An(e-i,o-i)+i;break;case Yl.Default:case Yl.Normal:case Yl.Clamp:default:t=pn(e,i,o)}if(t>=this.cachedKey.time&&t<this.cachedKey.endTime)return this.cachedKey.evaluate(t);var a=this.findIndex(this.cachedKey,t),r=Math.min(a+1,this.keyFrames.length-1);return this.calcOptimizedKey(this.cachedKey,a,r),this.cachedKey.evaluate(t)},t.calcOptimizedKey=function(e,t,n){var i=this.keyFrames[t],o=this.keyFrames[n];e.index=t,e.time=i.time,e.endTime=o.time;var a=o.time-i.time,r=o.value-i.value,s=1/(a*a),c=i.outTangent*a,l=o.inTangent*a;e.coefficient[0]=(c+l-r-r)*s/a,e.coefficient[1]=(r+r+r-c-c-l)*s,e.coefficient[2]=i.outTangent,e.coefficient[3]=i.value},t.findIndex=function(e,t){var n=e.index;if(-1!==n)if(t>this.keyFrames[n].time)for(var i=0;i<3;i++){var o=n+i;if(o+1<this.keyFrames.length&&this.keyFrames[o+1].time>t)return o}else for(var a=0;a<3;a++){var r=n-a;if(r>=0&&this.keyFrames[r-1].time<=t)return r-1}for(var s,c=0,l=this.keyFrames.length;l-c>1;)s=Math.floor((c+l)/2),this.keyFrames[s].time>=t?l=s:c=s;return c},e}());function Ql(e,t){console.warn(e+" is deprecated, please use "+t+" instead.")}Jl.defaultKF=[{time:0,value:1,inTangent:0,outTangent:0},{time:1,value:1,inTangent:0,outTangent:0}],fn.fastDefine("cc.AnimationCurve",Jl,{preWrapMode:Yl.Default,postWrapMode:Yl.Default,keyFrames:[]}),ee(Cl,"intersect",[{name:"ray_aabb",newName:"rayAABB"},{name:"ray_plane",newName:"rayPlane"},{name:"ray_triangle",newName:"rayTriangle"},{name:"ray_sphere",newName:"raySphere"},{name:"ray_obb",newName:"rayOBB"},{name:"ray_capsule",newName:"rayCapsule"},{name:"ray_subMesh",newName:"raySubMesh"},{name:"ray_mesh",newName:"rayMesh"},{name:"ray_model",newName:"rayModel"},{name:"line_plane",newName:"linePlane"},{name:"line_triangle",newName:"lineTriangle"},{name:"line_aabb",newName:"lineAABB"},{name:"line_obb",newName:"lineOBB"},{name:"line_sphere",newName:"lineSphere"},{name:"aabb_aabb",newName:"aabbWithAABB"},{name:"aabb_obb",newName:"aabbWithOBB"},{name:"aabb_plane",newName:"aabbPlane"},{name:"aabb_frustum",newName:"aabbFrustum"},{name:"aabbFrustum_accurate",newName:"aabbFrustumAccurate"},{name:"obb_point",newName:"obbPoint"},{name:"obb_plane",newName:"obbPlane"},{name:"obb_frustum",newName:"obbFrustum"},{name:"obbFrustum_accurate",newName:"obbFrustumAccurate"},{name:"obb_obb",newName:"obbWithOBB"},{name:"obb_capsule",newName:"obbCapsule"},{name:"sphere_plane",newName:"spherePlane"},{name:"sphere_frustum",newName:"sphereFrustum"},{name:"sphereFrustum_accurate",newName:"sphereFrustumAccurate"},{name:"sphere_sphere",newName:"sphereWithSphere"},{name:"sphere_aabb",newName:"sphereAABB"},{name:"sphere_obb",newName:"sphereOBB"},{name:"sphere_capsule",newName:"sphereCapsule"},{name:"capsule_capsule",newName:"capsuleWithCapsule"}]),e("fH",function(e){function t(){var t;return t=e.call(this)||this,Ql("line","Line"),t}return ue(t,e),t}(Ha)),e("fI",function(e){function t(){var t;return t=e.call(this)||this,Ql("plane","Plane"),t}return ue(t,e),t}(Rl)),e("fJ",function(e){function t(){var t;return t=e.call(this)||this,Ql("ray","Ray"),t}return ue(t,e),t}(ka)),e("fK",function(e){function t(){var t;return t=e.call(this)||this,Ql("triangle","Triangle"),t}return ue(t,e),t}(Dr)),e("fL",function(e){function t(){var t;return t=e.call(this)||this,Ql("sphere","Sphere"),t}return ue(t,e),t}(Or)),e("fM",function(e){function t(){var t;return t=e.call(this)||this,Ql("aabb","AABB"),t}return ue(t,e),t}(zl)),e("fN",function(e){function t(){var t;return t=e.call(this)||this,Ql("obb","OBB"),t}return ue(t,e),t}(Gl)),e("fO",function(e){function t(){var t;return t=e.call(this)||this,Ql("capsule","Capsule"),t}return ue(t,e),t}(Hl)),e("fP",function(e){function t(){var t;return t=e.call(this)||this,Ql("frustum","Frustum"),t}return ue(t,e),t}(ql));var Zl={NONE:0,IGNORE_RAYCAST:1<<20,GIZMOS:1<<21,EDITOR:1<<22,UI_3D:1<<23,SCENE_GIZMO:1<<24,UI_2D:1<<25,PROFILER:1<<28,DEFAULT:1<<30,ALL:4294967295},$l=e("eo",function(){function e(){}return e.makeMaskInclude=function(e){for(var t,n=0,i=ve(e);!(t=i()).done;)n|=t.value;return n},e.makeMaskExclude=function(t){return~e.makeMaskInclude(t)},e.addLayer=function(t,n){void 0!==n?n>19||n<0?console.warn("maximum layers reached."):(e.Enum[t]=1<<n,e.Enum[n]=t,e.BitMask[t]=1<<n,e.BitMask[n]=t):console.warn("bitNum can't be undefined")},e.deleteLayer=function(t){t>19||t<0?console.warn("do not change buildin layers."):(delete e.Enum[e.Enum[t]],delete e.Enum[t],delete e.BitMask[e.BitMask[t]],delete e.BitMask[t])},e}());$l.Enum=pt(Zl),$l.BitMask=dt(fe({},Zl)),s.Layers=$l;var ef,tf,nf=e("fg","GbufferFlow"),of=e("fj","LightingFlow"),af=e("fe","ForwardFlow"),rf=e("ff","ShadowFlow");!function(e){e[e.DEFAULT=100]="DEFAULT",e[e.UI=200]="UI"}(ef||(ef={})),s.RenderPassStage=ef,function(e){e[e.MIN=0]="MIN",e[e.MAX=255]="MAX",e[e.DEFAULT=128]="DEFAULT"}(tf||(tf=e("gq",{})));var sf,cf=e("f8",{bindings:[],layouts:{}}),lf=e("fi",{bindings:[],layouts:{}});!function(e){e[e.UBO_GLOBAL=0]="UBO_GLOBAL",e[e.UBO_CAMERA=1]="UBO_CAMERA",e[e.UBO_SHADOW=2]="UBO_SHADOW",e[e.SAMPLER_SHADOWMAP=3]="SAMPLER_SHADOWMAP",e[e.SAMPLER_ENVIRONMENT=4]="SAMPLER_ENVIRONMENT",e[e.SAMPLER_SPOT_LIGHTING_MAP=5]="SAMPLER_SPOT_LIGHTING_MAP",e[e.SAMPLER_GBUFFER_ALBEDOMAP=6]="SAMPLER_GBUFFER_ALBEDOMAP",e[e.SAMPLER_GBUFFER_POSITIONMAP=7]="SAMPLER_GBUFFER_POSITIONMAP",e[e.SAMPLER_GBUFFER_NORMALMAP=8]="SAMPLER_GBUFFER_NORMALMAP",e[e.SAMPLER_GBUFFER_EMISSIVEMAP=9]="SAMPLER_GBUFFER_EMISSIVEMAP",e[e.SAMPLER_LIGHTING_RESULTMAP=10]="SAMPLER_LIGHTING_RESULTMAP",e[e.COUNT=11]="COUNT"}(sf||(sf=e("f7",{})));var ff,uf=sf.SAMPLER_SHADOWMAP,_f=sf.COUNT-uf;!function(e){e[e.UBO_LOCAL=0]="UBO_LOCAL",e[e.UBO_FORWARD_LIGHTS=1]="UBO_FORWARD_LIGHTS",e[e.UBO_SKINNING_ANIMATION=2]="UBO_SKINNING_ANIMATION",e[e.UBO_SKINNING_TEXTURE=3]="UBO_SKINNING_TEXTURE",e[e.UBO_MORPH=4]="UBO_MORPH",e[e.SAMPLER_JOINTS=5]="SAMPLER_JOINTS",e[e.SAMPLER_MORPH_POSITION=6]="SAMPLER_MORPH_POSITION",e[e.SAMPLER_MORPH_NORMAL=7]="SAMPLER_MORPH_NORMAL",e[e.SAMPLER_MORPH_TANGENT=8]="SAMPLER_MORPH_TANGENT",e[e.SAMPLER_LIGHTMAP=9]="SAMPLER_LIGHTMAP",e[e.SAMPLER_SPRITE=10]="SAMPLER_SPRITE",e[e.COUNT=11]="COUNT"}(ff||(ff=e("gZ",{})));var mf,hf=ff.SAMPLER_JOINTS,df=ff.COUNT-hf;!function(e){e[e.GLOBAL=0]="GLOBAL",e[e.MATERIAL=1]="MATERIAL",e[e.LOCAL=2]="LOCAL"}(mf||(mf=e("f9",{})));var pf=e("fs",new Xr);pf.bufferOffsets=[0,uf+hf,uf],pf.samplerOffsets=[-uf,_f+df,_f-hf],pf.flexibleSet=1;var vf=e("f1",(function(){}));vf.TIME_OFFSET=0,vf.NATIVE_SIZE_OFFSET=vf.TIME_OFFSET+4,vf.SCREEN_SIZE_OFFSET=vf.NATIVE_SIZE_OFFSET+4,vf.COUNT=vf.SCREEN_SIZE_OFFSET+4,vf.SIZE=4*vf.COUNT,vf.NAME="CCGlobal",vf.BINDING=sf.UBO_GLOBAL,vf.DESCRIPTOR=new Ss(vf.BINDING,wr.UNIFORM_BUFFER,1,vr.ALL),vf.LAYOUT=new os(mf.GLOBAL,vf.BINDING,vf.NAME,[new is("cc_time",tr.FLOAT4,1),new is("cc_screenSize",tr.FLOAT4,1),new is("cc_nativeSize",tr.FLOAT4,1)],1),cf.layouts[vf.NAME]=vf.LAYOUT,cf.bindings[vf.BINDING]=vf.DESCRIPTOR;var gf=e("f2",(function(){}));gf.MAT_VIEW_OFFSET=0,gf.MAT_VIEW_INV_OFFSET=gf.MAT_VIEW_OFFSET+16,gf.MAT_PROJ_OFFSET=gf.MAT_VIEW_INV_OFFSET+16,gf.MAT_PROJ_INV_OFFSET=gf.MAT_PROJ_OFFSET+16,gf.MAT_VIEW_PROJ_OFFSET=gf.MAT_PROJ_INV_OFFSET+16,gf.MAT_VIEW_PROJ_INV_OFFSET=gf.MAT_VIEW_PROJ_OFFSET+16,gf.CAMERA_POS_OFFSET=gf.MAT_VIEW_PROJ_INV_OFFSET+16,gf.SCREEN_SCALE_OFFSET=gf.CAMERA_POS_OFFSET+4,gf.EXPOSURE_OFFSET=gf.SCREEN_SCALE_OFFSET+4,gf.MAIN_LIT_DIR_OFFSET=gf.EXPOSURE_OFFSET+4,gf.MAIN_LIT_COLOR_OFFSET=gf.MAIN_LIT_DIR_OFFSET+4,gf.AMBIENT_SKY_OFFSET=gf.MAIN_LIT_COLOR_OFFSET+4,gf.AMBIENT_GROUND_OFFSET=gf.AMBIENT_SKY_OFFSET+4,gf.GLOBAL_FOG_COLOR_OFFSET=gf.AMBIENT_GROUND_OFFSET+4,gf.GLOBAL_FOG_BASE_OFFSET=gf.GLOBAL_FOG_COLOR_OFFSET+4,gf.GLOBAL_FOG_ADD_OFFSET=gf.GLOBAL_FOG_BASE_OFFSET+4,gf.COUNT=gf.GLOBAL_FOG_ADD_OFFSET+4,gf.SIZE=4*gf.COUNT,gf.NAME="CCCamera",gf.BINDING=sf.UBO_CAMERA,gf.DESCRIPTOR=new Ss(gf.BINDING,wr.UNIFORM_BUFFER,1,vr.ALL),gf.LAYOUT=new os(mf.GLOBAL,gf.BINDING,gf.NAME,[new is("cc_matView",tr.MAT4,1),new is("cc_matViewInv",tr.MAT4,1),new is("cc_matProj",tr.MAT4,1),new is("cc_matProjInv",tr.MAT4,1),new is("cc_matViewProj",tr.MAT4,1),new is("cc_matViewProjInv",tr.MAT4,1),new is("cc_cameraPos",tr.FLOAT4,1),new is("cc_screenScale",tr.FLOAT4,1),new is("cc_exposure",tr.FLOAT4,1),new is("cc_mainLitDir",tr.FLOAT4,1),new is("cc_mainLitColor",tr.FLOAT4,1),new is("cc_ambientSky",tr.FLOAT4,1),new is("cc_ambientGround",tr.FLOAT4,1),new is("cc_fogColor",tr.FLOAT4,1),new is("cc_fogBase",tr.FLOAT4,1),new is("cc_fogAdd",tr.FLOAT4,1)],1),cf.layouts[gf.NAME]=gf.LAYOUT,cf.bindings[gf.BINDING]=gf.DESCRIPTOR;var xf=e("f0",(function(){}));xf.MAT_LIGHT_PLANE_PROJ_OFFSET=0,xf.MAT_LIGHT_VIEW_OFFSET=xf.MAT_LIGHT_PLANE_PROJ_OFFSET+16,xf.MAT_LIGHT_VIEW_PROJ_OFFSET=xf.MAT_LIGHT_VIEW_OFFSET+16,xf.SHADOW_NEAR_FAR_LINEAR_SELF_INFO_OFFSET=xf.MAT_LIGHT_VIEW_PROJ_OFFSET+16,xf.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET=xf.SHADOW_NEAR_FAR_LINEAR_SELF_INFO_OFFSET+4,xf.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET=xf.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET+4,xf.SHADOW_COLOR_OFFSET=xf.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET+4,xf.COUNT=xf.SHADOW_COLOR_OFFSET+4,xf.SIZE=4*xf.COUNT,xf.NAME="CCShadow",xf.BINDING=sf.UBO_SHADOW,xf.DESCRIPTOR=new Ss(xf.BINDING,wr.UNIFORM_BUFFER,1,vr.ALL),xf.LAYOUT=new os(mf.GLOBAL,xf.BINDING,xf.NAME,[new is("cc_matLightPlaneProj",tr.MAT4,1),new is("cc_matLightView",tr.MAT4,1),new is("cc_matLightViewProj",tr.MAT4,1),new is("cc_shadowNFLSInfo",tr.FLOAT4,1),new is("cc_shadowWHPBInfo",tr.FLOAT4,1),new is("cc_shadowLPNNInfo",tr.FLOAT4,1),new is("cc_shadowColor",tr.FLOAT4,1)],1),cf.layouts[xf.NAME]=xf.LAYOUT,cf.bindings[xf.BINDING]=xf.DESCRIPTOR;var yf=e("f3",sf.SAMPLER_SHADOWMAP),Ef=new Ss(yf,wr.SAMPLER_TEXTURE,1,vr.FRAGMENT),Sf=new as(mf.GLOBAL,yf,"cc_shadowMap",tr.SAMPLER2D,1);cf.layouts.cc_shadowMap=Sf,cf.bindings[yf]=Ef;var Af=e("fk",sf.SAMPLER_GBUFFER_ALBEDOMAP),Cf=new Ss(Af,wr.SAMPLER_TEXTURE,1,vr.FRAGMENT),Tf=new as(mf.GLOBAL,Af,"cc_gbuffer_albedoMap",tr.SAMPLER2D,1);cf.layouts.cc_gbuffer_albedoMap=Tf,cf.bindings[Af]=Cf;var If=e("fl",sf.SAMPLER_GBUFFER_POSITIONMAP),Pf=new Ss(If,wr.SAMPLER_TEXTURE,1,vr.FRAGMENT),wf=new as(mf.GLOBAL,If,"cc_gbuffer_positionMap",tr.SAMPLER2D,1);cf.layouts.cc_gbuffer_positionMap=wf,cf.bindings[If]=Pf;var Rf=e("fm",sf.SAMPLER_GBUFFER_NORMALMAP),bf=new Ss(Rf,wr.SAMPLER_TEXTURE,1,vr.FRAGMENT),Nf=new as(mf.GLOBAL,Rf,"cc_gbuffer_normalMap",tr.SAMPLER2D,1);cf.layouts.cc_gbuffer_normalMap=Nf,cf.bindings[Rf]=bf;var Of=e("fo",sf.SAMPLER_LIGHTING_RESULTMAP),Df=new Ss(Of,wr.SAMPLER_TEXTURE,1,vr.FRAGMENT),Mf=new as(mf.GLOBAL,Of,"cc_lighting_resultMap",tr.SAMPLER2D,1);cf.layouts.cc_lighting_resultMap=Mf,cf.bindings[Of]=Df;var Lf=e("fn",sf.SAMPLER_GBUFFER_EMISSIVEMAP),zf=new Ss(Lf,wr.SAMPLER_TEXTURE,1,vr.FRAGMENT),Ff=new as(mf.GLOBAL,Lf,"cc_gbuffer_emissiveMap",tr.SAMPLER2D,1);cf.layouts.cc_gbuffer_emissiveMap=Ff,cf.bindings[Lf]=zf;var Uf=e("f5",sf.SAMPLER_ENVIRONMENT),Bf=new Ss(Uf,wr.SAMPLER_TEXTURE,1,vr.FRAGMENT),Gf=new as(mf.GLOBAL,Uf,"cc_environment",tr.SAMPLER_CUBE,1);cf.layouts.cc_environment=Gf,cf.bindings[Uf]=Bf;var Hf=e("fd",sf.SAMPLER_SPOT_LIGHTING_MAP),kf=new Ss(Hf,wr.SAMPLER_TEXTURE,1,vr.FRAGMENT),Vf=new as(mf.GLOBAL,Hf,"cc_spotLightingMap",tr.SAMPLER2D,1);cf.layouts.cc_spotLightingMap=Vf,cf.bindings[Hf]=kf;var jf=e("gr",(function(){}));jf.MAT_WORLD_OFFSET=0,jf.MAT_WORLD_IT_OFFSET=jf.MAT_WORLD_OFFSET+16,jf.LIGHTINGMAP_UVPARAM=jf.MAT_WORLD_IT_OFFSET+16,jf.COUNT=jf.LIGHTINGMAP_UVPARAM+4,jf.SIZE=4*jf.COUNT,jf.NAME="CCLocal",jf.BINDING=ff.UBO_LOCAL,jf.DESCRIPTOR=new Ss(jf.BINDING,wr.UNIFORM_BUFFER,1,vr.VERTEX),jf.LAYOUT=new os(mf.LOCAL,jf.BINDING,jf.NAME,[new is("cc_matWorld",tr.MAT4,1),new is("cc_matWorldIT",tr.MAT4,1),new is("cc_lightingMapUVParam",tr.FLOAT4,1)],1),lf.layouts[jf.NAME]=jf.LAYOUT,lf.bindings[jf.BINDING]=jf.DESCRIPTOR;var Wf=e("gs","a_matWorld0"),qf=e("fa",(function(){}));qf.BATCHING_COUNT=10,qf.MAT_WORLDS_OFFSET=0,qf.COUNT=16*qf.BATCHING_COUNT,qf.SIZE=4*qf.COUNT,qf.NAME="CCLocalBatched",qf.BINDING=ff.UBO_LOCAL,qf.DESCRIPTOR=new Ss(qf.BINDING,wr.UNIFORM_BUFFER,1,vr.VERTEX),qf.LAYOUT=new os(mf.LOCAL,qf.BINDING,qf.NAME,[new is("cc_matWorlds",tr.MAT4,qf.BATCHING_COUNT)],1),lf.layouts[qf.NAME]=qf.LAYOUT,lf.bindings[qf.BINDING]=qf.DESCRIPTOR;var Yf=e("fc",(function(){}));Yf.LIGHTS_PER_PASS=1,Yf.LIGHT_POS_OFFSET=0,Yf.LIGHT_COLOR_OFFSET=Yf.LIGHT_POS_OFFSET+4*Yf.LIGHTS_PER_PASS,Yf.LIGHT_SIZE_RANGE_ANGLE_OFFSET=Yf.LIGHT_COLOR_OFFSET+4*Yf.LIGHTS_PER_PASS,Yf.LIGHT_DIR_OFFSET=Yf.LIGHT_SIZE_RANGE_ANGLE_OFFSET+4*Yf.LIGHTS_PER_PASS,Yf.COUNT=Yf.LIGHT_DIR_OFFSET+4*Yf.LIGHTS_PER_PASS,Yf.SIZE=4*Yf.COUNT,Yf.NAME="CCForwardLight",Yf.BINDING=ff.UBO_FORWARD_LIGHTS,Yf.DESCRIPTOR=new Ss(Yf.BINDING,wr.DYNAMIC_UNIFORM_BUFFER,1,vr.FRAGMENT),Yf.LAYOUT=new os(mf.LOCAL,Yf.BINDING,Yf.NAME,[new is("cc_lightPos",tr.FLOAT4,Yf.LIGHTS_PER_PASS),new is("cc_lightColor",tr.FLOAT4,Yf.LIGHTS_PER_PASS),new is("cc_lightSizeRangeAngle",tr.FLOAT4,Yf.LIGHTS_PER_PASS),new is("cc_lightDir",tr.FLOAT4,Yf.LIGHTS_PER_PASS)],1),lf.layouts[Yf.NAME]=Yf.LAYOUT,lf.bindings[Yf.BINDING]=Yf.DESCRIPTOR;var Xf=e("fh",(function(){}));Xf.LIGHTS_PER_PASS=10;var Kf=e("gH",(function(){}));Kf.JOINTS_TEXTURE_INFO_OFFSET=0,Kf.COUNT=Kf.JOINTS_TEXTURE_INFO_OFFSET+4,Kf.SIZE=4*Kf.COUNT,Kf.NAME="CCSkinningTexture",Kf.BINDING=ff.UBO_SKINNING_TEXTURE,Kf.DESCRIPTOR=new Ss(Kf.BINDING,wr.UNIFORM_BUFFER,1,vr.VERTEX),Kf.LAYOUT=new os(mf.LOCAL,Kf.BINDING,Kf.NAME,[new is("cc_jointTextureInfo",tr.FLOAT4,1)],1),lf.layouts[Kf.NAME]=Kf.LAYOUT,lf.bindings[Kf.BINDING]=Kf.DESCRIPTOR;var Jf=e("gF",(function(){}));Jf.JOINTS_ANIM_INFO_OFFSET=0,Jf.COUNT=Jf.JOINTS_ANIM_INFO_OFFSET+4,Jf.SIZE=4*Jf.COUNT,Jf.NAME="CCSkinningAnimation",Jf.BINDING=ff.UBO_SKINNING_ANIMATION,Jf.DESCRIPTOR=new Ss(Jf.BINDING,wr.UNIFORM_BUFFER,1,vr.VERTEX),Jf.LAYOUT=new os(mf.LOCAL,Jf.BINDING,Jf.NAME,[new is("cc_jointAnimInfo",tr.FLOAT4,1)],1),lf.layouts[Jf.NAME]=Jf.LAYOUT,lf.bindings[Jf.BINDING]=Jf.DESCRIPTOR;var Qf=e("gJ","a_jointAnimInfo"),Zf=e("gG",(function(){}));Zf.JOINTS_OFFSET=0,Zf.COUNT=Zf.JOINTS_OFFSET+360,Zf.SIZE=4*Zf.COUNT,Zf.NAME="CCSkinning",Zf.BINDING=ff.UBO_SKINNING_TEXTURE,Zf.DESCRIPTOR=new Ss(Zf.BINDING,wr.UNIFORM_BUFFER,1,vr.VERTEX),Zf.LAYOUT=new os(mf.LOCAL,Zf.BINDING,Zf.NAME,[new is("cc_joints",tr.FLOAT4,90)],1),lf.layouts[Zf.NAME]=Zf.LAYOUT,lf.bindings[Zf.BINDING]=Zf.DESCRIPTOR;var $f=e("gL",(function(){}));$f.MAX_MORPH_TARGET_COUNT=60,$f.OFFSET_OF_WEIGHTS=0,$f.OFFSET_OF_DISPLACEMENT_TEXTURE_WIDTH=4*$f.MAX_MORPH_TARGET_COUNT,$f.OFFSET_OF_DISPLACEMENT_TEXTURE_HEIGHT=$f.OFFSET_OF_DISPLACEMENT_TEXTURE_WIDTH+4,$f.OFFSET_OF_VERTICES_COUNT=$f.OFFSET_OF_DISPLACEMENT_TEXTURE_HEIGHT+4,$f.COUNT_BASE_4_BYTES=4*Math.ceil($f.MAX_MORPH_TARGET_COUNT/4)+4,$f.SIZE=4*$f.COUNT_BASE_4_BYTES,$f.NAME="CCMorph",$f.BINDING=ff.UBO_MORPH,$f.DESCRIPTOR=new Ss($f.BINDING,wr.UNIFORM_BUFFER,1,vr.VERTEX),$f.LAYOUT=new os(mf.LOCAL,$f.BINDING,$f.NAME,[new is("cc_displacementWeights",tr.FLOAT4,$f.MAX_MORPH_TARGET_COUNT/4),new is("cc_displacementTextureInfo",tr.FLOAT4,1)],1),lf.layouts[$f.NAME]=$f.LAYOUT,lf.bindings[$f.BINDING]=$f.DESCRIPTOR;var eu=e("gI",ff.SAMPLER_JOINTS),tu=new Ss(eu,wr.SAMPLER_TEXTURE,1,vr.VERTEX),nu=new as(mf.LOCAL,eu,"cc_jointTexture",tr.SAMPLER2D,1);lf.layouts.cc_jointTexture=nu,lf.bindings[eu]=tu;var iu=e("gQ",ff.SAMPLER_MORPH_POSITION),ou=new Ss(iu,wr.SAMPLER_TEXTURE,1,vr.VERTEX),au=new as(mf.LOCAL,iu,"cc_PositionDisplacements",tr.SAMPLER2D,1);lf.layouts.cc_PositionDisplacements=au,lf.bindings[iu]=ou;var ru=e("gP",ff.SAMPLER_MORPH_NORMAL),su=new Ss(ru,wr.SAMPLER_TEXTURE,1,vr.VERTEX),cu=new as(mf.LOCAL,ru,"cc_NormalDisplacements",tr.SAMPLER2D,1);lf.layouts.cc_NormalDisplacements=cu,lf.bindings[ru]=su;var lu=e("gO",ff.SAMPLER_MORPH_TANGENT),fu=new Ss(lu,wr.SAMPLER_TEXTURE,1,vr.VERTEX),uu=new as(mf.LOCAL,lu,"cc_TangentDisplacements",tr.SAMPLER2D,1);lf.layouts.cc_TangentDisplacements=uu,lf.bindings[lu]=fu;var _u=e("fb",ff.SAMPLER_LIGHTMAP),mu=new Ss(_u,wr.SAMPLER_TEXTURE,1,vr.FRAGMENT),hu=new as(mf.LOCAL,_u,"cc_lightingMap",tr.SAMPLER2D,1);lf.layouts.cc_lightingMap=hu,lf.bindings[_u]=mu;var du=ff.SAMPLER_SPRITE,pu=new Ss(du,wr.SAMPLER_TEXTURE,1,vr.FRAGMENT),vu=new as(mf.LOCAL,du,"cc_spriteTexture",tr.SAMPLER2D,1);lf.layouts.cc_spriteTexture=vu,lf.bindings[du]=pu;var gu,xu,yu=e("eR",$l.makeMaskExclude([$l.BitMask.UI_2D,$l.BitMask.GIZMOS,$l.BitMask.EDITOR,$l.BitMask.SCENE_GIZMO,$l.BitMask.PROFILER])),Eu=$l.makeMaskExclude([$l.BitMask.UI_2D,$l.BitMask.PROFILER]),Su=$l.Enum.ALL;function Au(e){return e.hasFeature(Za.COLOR_HALF_FLOAT)&&e.hasFeature(Za.TEXTURE_HALF_FLOAT)}e("ek",Object.freeze({__proto__:null,PIPELINE_FLOW_GBUFFER:nf,PIPELINE_FLOW_LIGHTING:of,PIPELINE_FLOW_FORWARD:af,PIPELINE_FLOW_SHADOW:rf,PIPELINE_FLOW_SMAA:"SMAAFlow",PIPELINE_FLOW_TONEMAP:"ToneMapFlow",get RenderPassStage(){return ef},get RenderPriority(){return tf},globalDescriptorSetLayout:cf,localDescriptorSetLayout:lf,get PipelineGlobalBindings(){return sf},get ModelLocalBindings(){return ff},get SetIndex(){return mf},bindingMappingInfo:pf,UBOGlobal:vf,UBOCamera:gf,UBOShadow:xf,UNIFORM_SHADOWMAP_BINDING:yf,UNIFORM_GBUFFER_ALBEDOMAP_BINDING:Af,UNIFORM_GBUFFER_POSITIONMAP_BINDING:If,UNIFORM_GBUFFER_NORMALMAP_BINDING:Rf,UNIFORM_LIGHTING_RESULTMAP_BINDING:Of,UNIFORM_GBUFFER_EMISSIVEMAP_BINDING:Lf,UNIFORM_ENVIRONMENT_BINDING:Uf,UNIFORM_SPOT_LIGHTING_MAP_TEXTURE_BINDING:Hf,UBOLocal:jf,INST_MAT_WORLD:Wf,UBOLocalBatched:qf,UBOForwardLight:Yf,UBODeferredLight:Xf,JOINT_UNIFORM_CAPACITY:30,UBOSkinningTexture:Kf,UBOSkinningAnimation:Jf,INST_JOINT_ANIM_INFO:Qf,UBOSkinning:Zf,UBOMorph:$f,UNIFORM_JOINT_TEXTURE_BINDING:eu,UNIFORM_POSITION_MORPH_TEXTURE_BINDING:iu,UNIFORM_NORMAL_MORPH_TEXTURE_BINDING:ru,UNIFORM_TANGENT_MORPH_TEXTURE_BINDING:lu,UNIFORM_LIGHTMAP_TEXTURE_BINDING:_u,UNIFORM_SPRITE_TEXTURE_BINDING:du,CAMERA_DEFAULT_MASK:yu,CAMERA_EDITOR_MASK:Eu,MODEL_ALWAYS_MASK:Su,supportsHalfFloatTexture:Au})),function(e){e[e.LOCAL=0]="LOCAL",e[e.WORLD=1]="WORLD"}(gu||(gu={})),function(e){e[e.NONE=0]="NONE",e[e.POSITION=1]="POSITION",e[e.ROTATION=2]="ROTATION",e[e.SCALE=4]="SCALE",e[e.RS=e.ROTATION|e.SCALE]="RS",e[e.TRS=e.POSITION|e.ROTATION|e.SCALE]="TRS",e[e.TRS_MASK=~e.TRS]="TRS_MASK"}(xu||(xu=e("eW",{}))),s.internal.TransformBit=xu;var Cu=function(){},Tu=function(){return Cu},Iu=Pu((function(){}));function Pu(e){return function(t){return"function"==typeof t?e(t):function(n){return e(n,t)}}}function wu(e){return function(t){return function(n){!function(e,t,n){var i=bu(e);if(i){var o=Nu(i,"proto");Nu(o,"editor")[t]=n}}(n,e,t)}}}var Ru="__ccclassCache__";function bu(e){return Nu(e,Ru)}function Nu(e,t){return e[t]||(e[t]={})}var Ou=e("eu",Pu((function(e,t){var n=ht.getSuper(e);n===Object&&(n=null);var i={name:t,extends:n,ctor:e},o=e[Ru];if(o){var a=o.proto;a&&ht.mixin(i,a),e[Ru]=void 0}return fn(i)}))),Du=e("gX",wu("requireComponent")),Mu=e("gD",wu("executionOrder")),Lu=e("gW",Iu);function zu(e,t,n){var i=null;function o(e,t,n){var o=bu(e.constructor);if(o){var a=Nu(o,"proto"),r=Nu(a,"properties");!function(e,t,n,i,o,a){var r,s=o&&(o.get||o.set);i&&(r=$t(i,s));var c=t[n],l=ht.mixin(c||{},r||i||{});if(s)o.get&&(l.get=o.get),o.set&&(l.set=o.set);else if(o)o.initializer&&(l.default=function(e){var t;try{t=e()}catch(t){return e}return"object"!=typeof t||null===t?t:e}(o.initializer));else{var f=a.default||(a.default=function(e){var t;try{t=new e}catch(e){return{}}return t}(e));f.hasOwnProperty(n)&&(l.default=f[n])}t[n]=l}(e.constructor,r,t,i,n,o)}}return void 0===e?zu({type:void 0}):void 0===t?(i=e,o):void o(e,t,n)}var Fu=e("eF",(function(e,t,n){return zu(Bu({}))(e,t,n)})),Uu=e("h0",(function(e,t,n){return zu({editorOnly:!0})(e,t,n)}));function Bu(e){return e.__noImplicit=!0,"serializable"in e||(e.serializable=!0),e}var Gu=e("gn",Iu),Hu=e("gp",Tu),ku=e("h7",Iu),Vu=Tu,ju=Tu,Wu=e("go",Tu),qu=e("eB",Cu),Yu=e("eG",Tu),Xu=(e("h8",Cu),e("gt",Tu)),Ku=e("gl",Tu),Ju=(e("eH",Tu),e("eK",Tu)),Qu=e("g_",Tu),Zu=(e("eI",Tu),e("eD",Cu),e("eJ",Tu),e("gE",Tu),e("h3",Cu),e("gV",Cu),e("gS",Cu)),$u=i_(Vt),e_=e("gm",i_(jt)),t_=i_(Wt),n_=e("gU",i_(qt));function i_(e){return zu({type:e})}var o_=e("ey",(function(e,t,n){return zu({__noImplicit:!0,override:!0})(e,t,n)})),a_=e("fS",function(){function e(e){this._map=null,this._count=0,e?(this._map=e,this._count=Object.keys(e).length):(this._map=ht.createMap(!0),this._count=0)}var t=e.prototype;return t.add=function(e,t){return e in this._map||this._count++,this._map[e]=t},t.get=function(e){return this._map[e]},t.has=function(e){return e in this._map},t.remove=function(e){var t=this._map[e];return e in this._map&&(delete this._map[e],this._count--),t},t.clear=function(){0!==this._count&&(this._map=ht.createMap(!0),this._count=0)},t.forEach=function(e){for(var t in this._map)e(this._map[t],t)},t.find=function(e){for(var t in this._map)if(e(this._map[t],t))return this._map[t];return null},t.destroy=function(){this._map=null},le(e,[{key:"count",get:function(){return this._count}}]),e}()),r_=e("gc",function(){function e(t,n){this.id=e._pipelineId++,this.name="",this.pipes=[],this.name=t;for(var i=0,o=n.length;i<o;i++)this.pipes.push(n[i])}var t=e.prototype;return t.insert=function(e,t){return t>this.pipes.length?(w(4921),this):(this.pipes.splice(t,0,e),this)},t.append=function(e){return this.pipes.push(e),this},t.remove=function(e){return this.pipes.splice(e,1),this},t.sync=function(e){var t=this.pipes;if(0===t.length)return null;e.isFinish=!1;for(var n=0,i=t.length;n<i;){var o=(0,t[n])(e);if(o)return e.isFinish=!0,o;++n!==i&&(e.input=e.output,e.output=null)}return e.isFinish=!0,e.output},t.async=function(e){0!==this.pipes.length&&(e.isFinish=!1,this._flow(0,e))},t._flow=function(e,t){var n=this;(0,this.pipes[e])(t,(function(i){i?(t.isFinish=!0,t.dispatch("complete",i)):++e<n.pipes.length?(t.input=t.output,t.output=null,n._flow(e,t)):(t.isFinish=!0,t.dispatch("complete",i,t.output))}))},e}());r_._pipelineId=0,e("fW",new a_);var s_,c_,l_=e("g2",new a_),f_=e("ga",new a_),u_=e("f$",new a_),__=(e("gd",new r_("normal load",[])),e("g8",new r_("fetch",[])),e("ge",new r_("transform url",[])));e("gj",null),function(e){e.UUID="uuid",e.PATH="path",e.DIR="dir",e.URL="url",e.SCENE="scene"}(s_||(s_=e("g0",{}))),e("gg",{default:{priority:0},preload:{maxConcurrency:6,maxRequestsPerFrame:2,priority:-1},scene:{maxConcurrency:20,maxRequestsPerFrame:20,priority:1},bundle:{maxConcurrency:20,maxRequestsPerFrame:20,priority:2},remote:{maxRetryCount:4}}),function(e){e.RESOURCES="resources",e.MAIN="main",e.START_SCENE="start-scene"}(c_||(c_=e("g3",{})));var m_=e("g7",function(){function e(t){this.id=e._taskId++,this.onComplete=null,this.onProgress=null,this.onError=null,this.source=null,this.output=null,this.input=null,this.progress=null,this.options=null,this.isFinish=!0,this.set(t)}e.create=function(t){var n;return 0!==e._deadPool.length?(n=e._deadPool.pop()).set(t):n=new e(t),n};var t=e.prototype;return t.set=function(e){void 0===e&&(e=Object.create(null)),this.onComplete=e.onComplete||null,this.onProgress=e.onProgress||null,this.onError=e.onError||null,this.source=this.input=e.input,this.output=null,this.progress=e.progress,this.options=e.options||Object.create(null)},t.dispatch=function(e,t,n,i,o){switch(e){case"complete":this.onComplete&&this.onComplete(t,n);break;case"progress":this.onProgress&&this.onProgress(t,n,i,o);break;case"error":this.onError&&this.onError(t,n,i,o);break;default:var a="on"+e[0].toUpperCase()+e.substr(1);"function"==typeof this[a]&&this[a](t,n,i,o)}},t.recycle=function(){e._deadPool.length!==e.MAX_DEAD_NUM&&(this.onComplete=null,this.onProgress=null,this.onError=null,this.source=this.output=this.input=null,this.progress=null,this.options=null,e._deadPool.push(this))},e}());m_.MAX_DEAD_NUM=500,m_._taskId=0,m_._deadPool=[];var h_="0123456789abcdef".split(""),d_=["","","",""],p_=d_.concat(d_,"-",d_,"-",d_,"-",d_,"-",d_,d_,d_),v_=p_.map((function(e,t){return"-"===e?NaN:t})).filter(isFinite);function g_(e){var t=e.split("@")[0];if(22!==t.length)return e;p_[0]=e[0],p_[1]=e[1];for(var n=2,i=2;n<22;n+=2){var o=It[e.charCodeAt(n)],a=It[e.charCodeAt(n+1)];p_[v_[i++]]=h_[o>>2],p_[v_[i++]]=h_[(3&o)<<2|a>>4],p_[v_[i++]]=h_[15&a]}return e.replace(t,p_.join(""))}var x_=/.*[/\\][0-9a-fA-F]{2}[/\\]([0-9a-fA-F-@]{8,}).*/;function y_(e){var t=x_.exec(e);return t?t[1]:""}function E_(e,t){(t=t||Object.create(null)).__isNative__=t.isNative,t.ext=t.nativeExt;var n=u_.find((function(t){return!!t.getAssetInfo(e)}));return n&&(t.bundle=n.name),C_(e,t)}function S_(e){return e&&(e instanceof s.SceneAsset||e instanceof s.Scene)}function A_(e){return e&&(46===e.charCodeAt(0)&&47===e.charCodeAt(1)?e=e.slice(2):47===e.charCodeAt(0)&&(e=e.slice(1))),e}function C_(e,t){var n=m_.create({input:e,options:t}),i=[];try{for(var o,a=ve(__.sync(n));!(o=a()).done;){var r=o.value,s=r.url;r.recycle(),i.push(s)}}catch(e){for(var c,l=ve(n.output);!(c=l()).done;)c.value.recycle();x(e.message,e.stack)}return n.recycle(),i.length>1?i:i[0]}e("gi",Object.freeze({__proto__:null,getUuidFromURL:y_,getUrlWithUuid:E_,isScene:S_,normalize:A_,transform:C_,decodeUuid:g_}));var T_,I_,P_,w_,R_=e("d_",function(){function e(e,t){this.type=void 0,this.bubbles=void 0,this.target=null,this.currentTarget=null,this.eventPhase=0,this.propagationStopped=!1,this.propagationImmediateStopped=!1,this.type=e,this.bubbles=!!t}var t=e.prototype;return t.unuse=function(){this.type=e.NO_TYPE,this.target=null,this.currentTarget=null,this.eventPhase=e.NONE,this.propagationStopped=!1,this.propagationImmediateStopped=!1},t.reuse=function(e,t){this.type=e,this.bubbles=t||!1},t.isStopped=function(){return this.propagationStopped||this.propagationImmediateStopped},t.getCurrentTarget=function(){return this.currentTarget},t.getType=function(){return this.type},e}());R_.NO_TYPE="no_type",R_.TOUCH="touch",R_.MOUSE="mouse",R_.KEYBOARD="keyboard",R_.ACCELERATION="acceleration",R_.NONE=0,R_.CAPTURING_PHASE=1,R_.AT_TARGET=2,R_.BUBBLING_PHASE=3,s.Event=R_;var b_=e("e1",Ou("cc.Asset")((w_=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this).loaded=!0,ge(t,"_native",P_,de(t)),t._nativeUrl="",t.__onLoadedInvoked__=!1,t.__nativeDepend__=null,t.__depends__=null,t._file=null,t._ref=0,Object.defineProperty(de(t),"_uuid",{value:"",writable:!0}),t}ue(t,e),t.deserialize=function(e){return s.deserialize(e)};var n=t.prototype;return n.toString=function(){return this.nativeUrl},n.serialize=function(){},n._setRawAsset=function(e,t){void 0===t&&(t=!0),this._native=!1!==t?e||"":"/"+e},n.addRef=function(){return this._ref++,this},n.decRef=function(e){return void 0===e&&(e=!0),this._ref>0&&this._ref--,e&&s.assetManager._releaseManager.tryRelease(this),this},n.onLoaded=function(){},n.initDefault=function(e){e&&(this._uuid=e),this.isDefault=!0},n.validate=function(){return!0},le(t,[{key:"nativeUrl",get:function(){if(!this._nativeUrl){if(!this._native)return"";var e=this._native;if(47===e.charCodeAt(0))return e.slice(1);46===e.charCodeAt(0)?this._nativeUrl=E_(this._uuid,{nativeExt:e,isNative:!0}):this._nativeUrl=E_(this._uuid,{__nativeName__:e,nativeExt:Mi(e),isNative:!0})}return this._nativeUrl}},{key:"_nativeAsset",get:function(){return this._file},set:function(e){this._file=e}},{key:"_nativeDep",get:function(){if(this._native)return{__isNative__:!0,uuid:this._uuid,ext:this._native}}},{key:"refCount",get:function(){return this._ref}}]),t}(xi(li)),P_=xe((I_=w_).prototype,"_native",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),xe(I_.prototype,"_nativeAsset",[zu],Object.getOwnPropertyDescriptor(I_.prototype,"_nativeAsset"),I_.prototype),T_=I_))||T_);b_.prototype.createNode=null,s.Asset=b_;var N_,O_,D_,M_,L_,z_,F_,U_=1024;function B_(e){return s.sys.capabilities.imageBitmap&&e instanceof ImageBitmap}!function(e){e[e.RGB565=$a.R5G6B5]="RGB565",e[e.RGB5A1=$a.RGB5A1]="RGB5A1",e[e.RGBA4444=$a.RGBA4]="RGBA4444",e[e.RGB888=$a.RGB8]="RGB888",e[e.RGB32F=$a.RGB32F]="RGB32F",e[e.RGBA8888=$a.RGBA8]="RGBA8888",e[e.RGBA32F=$a.RGBA32F]="RGBA32F",e[e.A8=$a.A8]="A8",e[e.I8=$a.L8]="I8",e[e.AI8=$a.LA8]="AI8",e[e.RGB_PVRTC_2BPPV1=$a.PVRTC_RGB2]="RGB_PVRTC_2BPPV1",e[e.RGBA_PVRTC_2BPPV1=$a.PVRTC_RGBA2]="RGBA_PVRTC_2BPPV1",e[e.RGB_A_PVRTC_2BPPV1=U_++]="RGB_A_PVRTC_2BPPV1",e[e.RGB_PVRTC_4BPPV1=$a.PVRTC_RGB4]="RGB_PVRTC_4BPPV1",e[e.RGBA_PVRTC_4BPPV1=$a.PVRTC_RGBA4]="RGBA_PVRTC_4BPPV1",e[e.RGB_A_PVRTC_4BPPV1=U_++]="RGB_A_PVRTC_4BPPV1",e[e.RGB_ETC1=$a.ETC_RGB8]="RGB_ETC1",e[e.RGBA_ETC1=U_++]="RGBA_ETC1",e[e.RGB_ETC2=$a.ETC2_RGB8]="RGB_ETC2",e[e.RGBA_ETC2=$a.ETC2_RGBA8]="RGBA_ETC2",e[e.RGBA_ASTC_4x4=$a.ASTC_RGBA_4x4]="RGBA_ASTC_4x4",e[e.RGBA_ASTC_5x4=$a.ASTC_RGBA_5x4]="RGBA_ASTC_5x4",e[e.RGBA_ASTC_5x5=$a.ASTC_RGBA_5x5]="RGBA_ASTC_5x5",e[e.RGBA_ASTC_6x5=$a.ASTC_RGBA_6x5]="RGBA_ASTC_6x5",e[e.RGBA_ASTC_6x6=$a.ASTC_RGBA_6x6]="RGBA_ASTC_6x6",e[e.RGBA_ASTC_8x5=$a.ASTC_RGBA_8x5]="RGBA_ASTC_8x5",e[e.RGBA_ASTC_8x6=$a.ASTC_RGBA_8x6]="RGBA_ASTC_8x6",e[e.RGBA_ASTC_8x8=$a.ASTC_RGBA_8x8]="RGBA_ASTC_8x8",e[e.RGBA_ASTC_10x5=$a.ASTC_RGBA_10x5]="RGBA_ASTC_10x5",e[e.RGBA_ASTC_10x6=$a.ASTC_RGBA_10x6]="RGBA_ASTC_10x6",e[e.RGBA_ASTC_10x8=$a.ASTC_RGBA_10x8]="RGBA_ASTC_10x8",e[e.RGBA_ASTC_10x10=$a.ASTC_RGBA_10x10]="RGBA_ASTC_10x10",e[e.RGBA_ASTC_12x10=$a.ASTC_RGBA_12x10]="RGBA_ASTC_12x10",e[e.RGBA_ASTC_12x12=$a.ASTC_RGBA_12x12]="RGBA_ASTC_12x12"}(N_||(N_=e("gb",{}))),function(e){e[e.REPEAT=ur.WRAP]="REPEAT",e[e.CLAMP_TO_EDGE=ur.CLAMP]="CLAMP_TO_EDGE",e[e.MIRRORED_REPEAT=ur.MIRROR]="MIRRORED_REPEAT",e[e.CLAMP_TO_BORDER=ur.BORDER]="CLAMP_TO_BORDER"}(O_||(O_=e("h1",{}))),function(e){e[e.NONE=fr.NONE]="NONE",e[e.LINEAR=fr.LINEAR]="LINEAR",e[e.NEAREST=fr.POINT]="NEAREST"}(D_||(D_=e("gK",{})));var G_,H_=e("e3",Ou("cc.ImageAsset")((F_=z_=function(e){function t(t){var n;return(n=e.call(this)||this)._nativeData=void 0,n._tex=void 0,n._exportedExts=void 0,n._format=N_.RGBA8888,n._width=0,n._height=0,n.loaded=!1,n._nativeData={_data:null,width:0,height:0,format:0,_compressed:!1},void 0!==t&&n.reset(t),n}ue(t,e);var n=t.prototype;return n.reset=function(e){B_(e)||e instanceof HTMLElement?(this._nativeData=e,this._onDataComplete()):(this._nativeData=e,this._format=e.format,this._onDataComplete())},n.destroy=function(){return this.data&&this.data instanceof HTMLImageElement?(this.data.src="",this._setRawAsset("")):B_(this.data)&&this.data.close&&this.data.close(),e.prototype.destroy.call(this)},n._serialize=function(){},n._deserialize=function(e){var n="";"string"==typeof e?n=e:(this._width=e.w,this._height=e.h,n=e.fmt);for(var i,o=s.director.root?s.director.root.device:null,a=n.split("_"),r="",c=Number.MAX_VALUE,l=this._format,f="",u=s.macro.SUPPORT_TEXTURE_FORMATS,_=ve(a);!(i=_()).done;){var m=i.value.split("@"),h=parseInt(m[0],void 0),d=t.extnames[h]||m[0],p=u.indexOf(d);if(-1!==p&&p<c){var v=m[1]?parseInt(m[1]):this._format;if(!(".astc"!==d||o&&o.hasFeature(Za.FORMAT_ASTC)))continue;if(!(".pvr"!==d||o&&o.hasFeature(Za.FORMAT_PVRTC)))continue;if(!(v!==N_.RGB_ETC1&&v!==N_.RGBA_ETC1||o&&o.hasFeature(Za.FORMAT_ETC1)))continue;if(!(v!==N_.RGB_ETC2&&v!==N_.RGBA_ETC2||o&&o.hasFeature(Za.FORMAT_ETC2)))continue;if(".webp"===d&&!s.sys.capabilities.webp)continue;c=p,f=d,l=v}else r||(r=d)}f?(this._setRawAsset(f),this._format=l):r?(this._setRawAsset(r),w(3120,r,r)):w(3121)},n._onDataComplete=function(){this.loaded=!0,this.emit("load")},n.initDefault=function(n){if(e.prototype.initDefault.call(this,n),t._sharedPlaceHolderCanvas)this.reset(t._sharedPlaceHolderCanvas);else{var i=document.createElement("canvas"),o=i.getContext("2d"),a=i.width=i.height=2;o.fillStyle="#ff00ff",o.fillRect(0,0,a,a),this.reset(i),t._sharedPlaceHolderCanvas=i}},n.validate=function(){return!!this.data},le(t,[{key:"_nativeAsset",get:function(){return this._nativeData},set:function(e){e instanceof HTMLElement||B_(e)||(e.format=e.format||this._format),this.reset(e)}},{key:"data",get:function(){return this._nativeData&&((e=this._nativeData)instanceof HTMLImageElement||e instanceof HTMLCanvasElement||B_(e))?this._nativeData:this._nativeData&&this._nativeData._data;var e}},{key:"width",get:function(){return this._nativeData.width||this._width}},{key:"height",get:function(){return this._nativeData.height||this._height}},{key:"format",get:function(){return this._format}},{key:"isCompressed",get:function(){return this._format>=N_.RGB_ETC1&&this._format<=N_.RGBA_ASTC_12x12||this._format>=N_.RGB_A_PVRTC_2BPPV1&&this._format<=N_.RGBA_ETC1}},{key:"url",get:function(){return this.nativeUrl}},{key:"_texture",get:function(){if(!this._tex){var e=new s.Texture2D;e.name=this.nativeUrl,e.image=this,this._tex=e}return this._tex},set:function(e){this._tex=e}}]),t}(b_),z_.extnames=[".png",".jpg",".jpeg",".bmp",".webp",".pvr",".pkm",".astc"],z_._sharedPlaceHolderCanvas=null,xe((L_=F_).prototype,"_nativeAsset",[o_],Object.getOwnPropertyDescriptor(L_.prototype,"_nativeAsset"),L_.prototype),M_=L_))||M_);s.ImageAsset=H_,function(e){e[e.minFilter=0]="minFilter",e[e.magFilter=1]="magFilter",e[e.mipFilter=2]="mipFilter",e[e.addressU=3]="addressU",e[e.addressV=4]="addressV",e[e.addressW=5]="addressW",e[e.maxAnisotropy=6]="maxAnisotropy",e[e.cmpFunc=7]="cmpFunc",e[e.mipLODBias=8]="mipLODBias",e[e.total=9]="total"}(G_||(G_=e("bO",{})));var k_=[fr.LINEAR,fr.LINEAR,fr.NONE,ur.WRAP,ur.WRAP,ur.WRAP,0,_r.NEVER,0],V_=e("bP",q_(k_)),j_=new Yr,W_=new ns;function q_(e){for(var t=0,n=0,i=0;i<k_.length;i++)switch(t=e[i]||k_[i],i){case G_.minFilter:n|=t;break;case G_.magFilter:n|=t<<2;break;case G_.mipFilter:n|=t<<4;break;case G_.addressU:n|=t<<6;break;case G_.addressV:n|=t<<8;break;case G_.addressW:n|=t<<10;break;case G_.maxAnisotropy:n|=t<<12;break;case G_.cmpFunc:n|=t<<16;break;case G_.mipLODBias:n|=t<<28}return n}var Y_,X_,K_,J_,Q_,Z_,$_,em,tm,nm,im,om,am=function(){function e(){this._cache={}}return e.prototype.getSampler=function(e,t){return t||(t=V_),this._cache[t]||(W_.minFilter=3&t,W_.magFilter=t>>2&3,W_.mipFilter=t>>4&3,W_.addressU=t>>6&3,W_.addressV=t>>8&3,W_.addressW=t>>10&3,W_.maxAnisotropy=t>>12&15,W_.cmpFunc=t>>16&15,W_.mipLODBias=t>>28&15,W_.borderColor=j_,this._cache[t]=e.createSampler(W_))},e}(),rm=e("bR",new am);s.samplerLib=rm;var sm,cm,lm,fm=new Ie("Tex"),um=e("et",Ou("cc.TextureBase")((om=im=function(e){function t(){var t;return ge(t=e.call(this)||this,"_format",K_,de(t)),ge(t,"_minFilter",J_,de(t)),ge(t,"_magFilter",Q_,de(t)),ge(t,"_mipFilter",Z_,de(t)),ge(t,"_wrapS",$_,de(t)),ge(t,"_wrapT",em,de(t)),ge(t,"_wrapR",tm,de(t)),ge(t,"_anisotropy",nm,de(t)),t._width=1,t._height=1,t._id=void 0,t._samplerInfo=[],t._samplerHash=0,t._gfxSampler=null,t._gfxDevice=null,t._textureHash=0,t._id=fm.getNewId(),t.loaded=!1,t._gfxDevice=t._getGFXDevice(),t._textureHash=$s(t._id,666),t}ue(t,e);var n=t.prototype;return n.getId=function(){return this._id},n.getPixelFormat=function(){return this._format},n.getAnisotropy=function(){return this._anisotropy},n.setWrapMode=function(e,t,n){this._wrapS=e,this._samplerInfo[G_.addressU]=e,this._wrapT=t,this._samplerInfo[G_.addressV]=t,void 0!==n&&(this._wrapR=n,this._samplerInfo[G_.addressW]=n),this._samplerHash=q_(this._samplerInfo),this._gfxDevice&&(this._gfxSampler=rm.getSampler(this._gfxDevice,this._samplerHash))},n.setFilters=function(e,t){this._minFilter=e,this._samplerInfo[G_.minFilter]=e,this._magFilter=t,this._samplerInfo[G_.magFilter]=t,this._samplerHash=q_(this._samplerInfo),this._gfxDevice&&(this._gfxSampler=rm.getSampler(this._gfxDevice,this._samplerHash))},n.setMipFilter=function(e){this._mipFilter=e,this._samplerInfo[G_.mipFilter]=e,this._samplerHash=q_(this._samplerInfo),this._gfxDevice&&(this._gfxSampler=rm.getSampler(this._gfxDevice,this._samplerHash))},n.setAnisotropy=function(e){this._anisotropy=e,this._samplerInfo[G_.maxAnisotropy]=e,this._samplerHash=q_(this._samplerInfo),this._gfxDevice&&(this._gfxSampler=rm.getSampler(this._gfxDevice,this._samplerHash))},n.destroy=function(){var t=e.prototype.destroy.call(this);return t&&s.director.root&&s.director.root.batcher2D&&s.director.root.batcher2D._releaseDescriptorSetCache(this._textureHash),t},n.getHash=function(){return this._textureHash},n.getGFXTexture=function(){return null},n.getSamplerHash=function(){return this._samplerHash},n.getGFXSampler=function(){return this._gfxSampler||(this._gfxDevice?this._gfxSampler=rm.getSampler(this._gfxDevice,this._samplerHash):b(9302)),this._gfxSampler},n._serialize=function(){return""},n._deserialize=function(e){var t=e.split(",");t.unshift(""),t.length>=5&&(this.setFilters(parseInt(t[1]),parseInt(t[2])),this.setWrapMode(parseInt(t[3]),parseInt(t[4]))),t.length>=7&&(this.setMipFilter(parseInt(t[5])),this.setAnisotropy(parseInt(t[6])))},n._getGFXDevice=function(){return s.director.root?s.director.root.device:null},n._getGFXFormat=function(){return this._getGFXPixelFormat(this._format)},n._setGFXFormat=function(e){this._format=void 0===e?N_.RGBA8888:e},n._getGFXPixelFormat=function(e){return e===N_.RGBA_ETC1?e=N_.RGB_ETC1:e===N_.RGB_A_PVRTC_4BPPV1?e=N_.RGB_PVRTC_4BPPV1:e===N_.RGB_A_PVRTC_2BPPV1&&(e=N_.RGB_PVRTC_2BPPV1),e},le(t,[{key:"isCompressed",get:function(){return this._format>=N_.RGB_ETC1&&this._format<=N_.RGBA_ASTC_12x12||this._format>=N_.RGB_A_PVRTC_2BPPV1&&this._format<=N_.RGBA_ETC1}},{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}}]),t}(b_),im.PixelFormat=N_,im.WrapMode=O_,im.Filter=D_,K_=xe((X_=om).prototype,"_format",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return N_.RGBA8888}}),J_=xe(X_.prototype,"_minFilter",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return D_.LINEAR}}),Q_=xe(X_.prototype,"_magFilter",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return D_.LINEAR}}),Z_=xe(X_.prototype,"_mipFilter",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return D_.NONE}}),$_=xe(X_.prototype,"_wrapS",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return O_.REPEAT}}),em=xe(X_.prototype,"_wrapT",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return O_.REPEAT}}),tm=xe(X_.prototype,"_wrapR",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return O_.REPEAT}}),nm=xe(X_.prototype,"_anisotropy",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Y_=X_))||Y_);s.TextureBase=um;var _m=e("e9",Ou("cc.Script")(sm=function(e){function t(){return e.apply(this,arguments)||this}return ue(t,e),t}(b_))||sm);s._Script=_m;var mm=e("ea",Ou("cc.JavaScript")(cm=function(e){function t(){return e.apply(this,arguments)||this}return ue(t,e),t}(_m))||cm);s._JavaScript=mm;var hm,dm,pm,vm,gm,xm,ym,Em,Sm,Am,Cm,Tm=e("eb",Ou("cc.TypeScript")(lm=function(e){function t(){return e.apply(this,arguments)||this}return ue(t,e),t}(_m))||lm);s._TypeScript=Tm;var Im,Pm,wm,Rm,bm=new Ie("Comp"),Nm=li.Flags.IsOnLoadCalled,Om=e("eq",(hm=Ou("cc.Component"),dm=Xu(),pm=i_(_m),vm=Ku(),hm((Cm=Am=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ge(t=e.call.apply(e,[this].concat(i))||this,"node",ym,de(t)),ge(t,"_enabled",Em,de(t)),ge(t,"__prefab",Sm,de(t)),t._sceneGetter=null,t._id=bm.getNewId(),t}ue(t,e);var n=t.prototype;return n._getRenderScene=function(){return this._sceneGetter?this._sceneGetter():this.node.scene._renderScene},n.addComponent=function(e){return this.node.addComponent(e)},n.getComponent=function(e){return this.node.getComponent(e)},n.getComponents=function(e){return this.node.getComponents(e)},n.getComponentInChildren=function(e){return this.node.getComponentInChildren(e)},n.getComponentsInChildren=function(e){return this.node.getComponentsInChildren(e)},n.destroy=function(){return!!e.prototype.destroy.call(this)&&(this._enabled&&this.node.activeInHierarchy&&s.director._compScheduler.disableComp(this),!0)},n._onPreDestroy=function(){this.unscheduleAllCallbacks(),s.director._nodeActivator.destroyComp(this),this.node._removeComponent(this)},n._instantiate=function(e){return e||(e=s.instantiate._clone(this,this)),e&&(e.node=null),e},n.schedule=function(e,t,n,i){void 0===t&&(t=0),void 0===n&&(n=s.macro.REPEAT_FOREVER),void 0===i&&(i=0),M(e,1619),M((t=t||0)>=0,1620),n=Number.isNaN(n)?s.macro.REPEAT_FOREVER:n,i=i||0;var o=s.director.getScheduler(),a=o.isTargetPaused(this);o.schedule(e,this,t,n,i,a)},n.scheduleOnce=function(e,t){void 0===t&&(t=0),this.schedule(e,0,0,t)},n.unschedule=function(e){e&&s.director.getScheduler().unschedule(e,this)},n.unscheduleAllCallbacks=function(){s.director.getScheduler().unscheduleAllForTarget(this)},le(t,[{key:"name",get:function(){if(this._name)return this._name;var e=Be(this),t=e.lastIndexOf(".");return t>=0&&(e=e.slice(t+1)),this.node.name+"<"+e+">"},set:function(e){this._name=e}},{key:"uuid",get:function(){return this._id}},{key:"__scriptAsset",get:function(){return null}},{key:"enabled",get:function(){return this._enabled},set:function(e){if(this._enabled!==e&&(this._enabled=e,this.node.activeInHierarchy)){var t=s.director._compScheduler;e?t.enableComp(this):t.disableComp(this)}}},{key:"enabledInHierarchy",get:function(){return this._enabled&&this.node&&this.node.activeInHierarchy}},{key:"_isOnLoadCalled",get:function(){return this._objFlags&Nm}}]),t}(li),Am.system=null,xe((xm=Cm).prototype,"__scriptAsset",[dm,pm,vm,Zu],Object.getOwnPropertyDescriptor(xm.prototype,"__scriptAsset"),xm.prototype),ym=xe(xm.prototype,"node",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Em=xe(xm.prototype,"_enabled",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Sm=xe(xm.prototype,"__prefab",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),gm=xm))||gm)),Dm=Om.prototype;Dm.update=null,Dm.lateUpdate=null,Dm.__preload=null,Dm.onLoad=null,Dm.start=null,Dm.onEnable=null,Dm.onDisable=null,Dm.onDestroy=null,Dm.onFocusInEditor=null,Dm.onLostFocusInEditor=null,Dm.resetInEditor=null,Dm._getLocalBounds=null,Dm.onRestore=null,Om._requireComponent=null,Om._executionOrder=0,Me(Om,"_registerEditorProps",(function(e,t){var n=t.requireComponent;n&&(e._requireComponent=n);var i=t.executionOrder;i&&"number"==typeof i&&(e._executionOrder=i)})),s.Component=Om;var Mm=e("ep",Ou("cc.MissingScript")(Im=Vu()((Rm=function(e){function t(){var t;return ge(t=e.call(this)||this,"_$erialized",wm,de(t)),t}return ue(t,e),t.safeFindClass=function(e){var t=lt(e);if(t)return t;s.deserialize.reportMissingClass(e)},t.prototype.onLoad=function(){w(4600,this.node.name)},t}(Om),wm=xe((Pm=Rm).prototype,"_$erialized",[Fu,Uu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Im=Pm))||Im)||Im);function Lm(e){var t,n,i,o=e.deserializedList,a=e._idPropList,r=e._idList,s=e._idObjList;for(e._classFinder&&e._classFinder.onDereferenced,t=0;t<r.length;t++)n=a[t],i=r[t],s[t][n]=o[i]}s._MissingScript=Mm;var zm=function(){function e(e,t,n){this.result=void 0,this.customEnv=void 0,this.deserializedList=void 0,this.deserializedData=void 0,this._classFinder=void 0,this._ignoreEditorOnly=void 0,this._idList=void 0,this._idObjList=void 0,this._idPropList=void 0,this.result=e,this.customEnv=n,this.deserializedList=[],this.deserializedData=null,this._classFinder=t,this._idList=[],this._idObjList=[],this._idPropList=[]}var t=e.prototype;return t.deserialize=function(e){if(Array.isArray(e)){var t=e,n=t.length;this.deserializedList.length=n;for(var i=0;i<n;i++)t[i]&&(this.deserializedList[i]=this._deserializeObject(t[i]));this.deserializedData=n>0?this.deserializedList[0]:[],Lm(this)}else{var o;this.deserializedList.length=1,o=e?this._deserializeObject(e):null,Lm(this),this.deserializedList[0]=o,this.deserializedData=o}return this.deserializedData},t._deserializeObject=function(e,t,n){var i,o=null,a=null,r=e.__type__;if("TypedArray"===r){var c=e.array;o=new window[e.ctor](c.length);for(var l=0;l<c.length;++l)o[l]=c[l];return o}if(r){if(!(a=this._classFinder(r,e,t,n)))return this._classFinder===lt&&s.deserialize.reportMissingClass(r),null;var f=this;(o=new a)._deserialize?o._deserialize(e.content,f):s.Class._isCCClass(a)?function(e,t,n,i){var o;i.hasOwnProperty("__deserialize__")?o=i.__deserialize__:(o=function(e,t){var n,i=St.test(ut(t)),o=s.js.isChildClassOf(t,s._BaseNode)||s.js.isChildClassOf(t,s.Component),a=[],r=a,c=[],l=c,f=[];return function(){var e=t.__values__;n="_$erialized"===e[e.length-1];for(var o=Gt(t),u="$_$formerlySerializedAs",_=0;_<e.length;_++){var m=e[_],h=m;o[m+u]&&(h=o[m+u]);var d=fn.getDefault(o[m+"$_$default"]),p=!1;if(i){var v=o[m+"$_$type"];if(void 0===d&&v)p=v instanceof kt;else{var g=typeof d;p="string"===g||"number"===g||"boolean"===g}}i&&p?(h!==m&&r===a&&(r=a.slice()),a.push(m),r!==a&&r.push(h)):(h!==m&&l===c&&(l=c.slice()),c.push(m),l!==c&&l.push(h),f.push(d instanceof s.ValueType&&d.constructor))}}(),function(e,t,s){for(var u=0;u<a.length;++u){var _=s[r[u]];void 0!==_&&(t[a[u]]=_)}for(var m=0;m<c.length;++m){var h=c[m],d=s[l[m]];if(void 0!==d)if(i||"object"==typeof d){var p=f[m];p?i||d?e._deserializeTypedObject(t[h],d,p):t[h]=null:d?e._deserializeObjField(t,d,h):t[h]=null}else t[h]=d}o&&s._id&&(t._id=s._id),n&&(t._$erialized=JSON.parse(JSON.stringify(s)),e._deserializePrimitiveObject(t._$erialized,s))}}(0,i),Me(i,"__deserialize__",o,!0)),o(e,t,n,i)}(f,o,e,a):f._deserializeTypedObject(o,e,a)}else if(Array.isArray(e)){o=new Array(e.length);for(var u=0;u<e.length;u++)"object"==typeof(i=e[u])&&i?this._deserializeObjField(o,i,""+u)&&(o[u]=null):o[u]=i}else o={},this._deserializePrimitiveObject(o,e);return o},t._deserializeObjField=function(e,t,n){var i=t.__id__;if(void 0===i){var o=t.__uuid__;if(o)return this.result.push(e,n,o,t.__expectedType__),!0;e[n]=this._deserializeObject(t)}else{var a=this.deserializedList[i];a?e[n]=a:(this._idList.push(i),this._idObjList.push(e),this._idPropList.push(n))}return!1},t._deserializePrimitiveObject=function(e,t){for(var n in t)if(t.hasOwnProperty(n)){var i=t[n];"object"!=typeof i?"__type__"!==n&&(e[n]=i):i?this._deserializeObjField(e,i,n)&&(e[n]=null):e[n]=null}},t._deserializeTypedObject=function(e,t,n){if(n===s.Vec2)return e.x=t.x||0,void(e.y=t.y||0);if(n===s.Vec3)return e.x=t.x||0,e.y=t.y||0,void(e.z=t.z||0);if(n!==s.Color){if(n===s.Size)return e.width=t.width||0,void(e.height=t.height||0);for(var i=Gt(n),o=n.__props__||Object.keys(e),a=0;a<o.length;a++){var r=o[a],c=t[r];void 0!==c&&t.hasOwnProperty(r)||(c=fn.getDefault(i[r+"$_$default"])),"object"!=typeof c?e[r]=c:c?this._deserializeObjField(e,c,r):e[r]=null}}else{e.r=t.r||0,e.g=t.g||0,e.b=t.b||0;var l=t.a;e.a=void 0===l?255:l}},e}();zm.pool=void 0,zm.pool=new _t((function(e){e.result=null,e.customEnv=null,e.deserializedList.length=0,e.deserializedData=null,e._classFinder=null,e._idList.length=0,e._idObjList.length=0,e._idPropList.length=0}),1),zm.pool.get=function(e,t,n,i){var o=this._get();return o?(o.result=e,o.customEnv=n,o._classFinder=t,o):new zm(e,t,n,i)};var Fm=[Xn,Rn,Zn,zn,Pn,ti,ii,jn];function Um(e,t){e.x=t[1],e.y=t[2],e.z=t[3],e.w=t[4]}var Bm=[function(e,t){e.x=t[1],e.y=t[2]},function(e,t){e.x=t[1],e.y=t[2],e.z=t[3]},Um,Um,function(e,t){e._val=t[1]},function(e,t){e.width=t[1],e.height=t[2]},function(e,t){e.x=t[1],e.y=t[2],e.width=t[3],e.height=t[4]},function(e,t){jn.fromArray(e,t,1)}],Gm=0,Hm=1,km=2,Vm=3,jm=4,Wm=5,qm=e("dS",function(){function e(){this.uuidObjList=null,this.uuidPropList=null,this.uuidList=null,this.uuidTypeList=[]}var t=e.prototype;return t.init=function(e){this.uuidObjList=e[8],this.uuidPropList=e[9],this.uuidList=e[10]},t.reset=function(){this.uuidList=null,this.uuidObjList=null,this.uuidPropList=null},t.push=function(e,t,n,i){this.uuidObjList.push(e),this.uuidPropList.push(t),this.uuidList.push(n),this.uuidTypeList.push(i||"")},e}());function Ym(e,t){for(var n=e[jm][t[0]],i=n[0],o=new(0,i[0]),a=i[1],r=i[2],s=n[n.length-1],c=1;c<s;++c)o[a[n[c]]]=t[c];for(;c<t.length;++c){var l=a[n[c]],f=i[n[c]+r];(0,$m[f])(e,o,l,t[c])}return o}function Xm(e,t,n){var i=new t;return i._deserialize?i._deserialize(n,e[0]):b(5303,Be(t)),i}function Km(e,t,n,i){i>=0?t[n]=e[5][i]:e[7][3*~i]=t}function Jm(e){return function(t,n,i,o){n[i]=o;for(var a=0;a<o.length;++a)e(t,o,a,o[a])}}function Qm(e,t,n,i){t[n]=null,e[8][i]=t}function Zm(e,t,n,i){t[n]=Ym(e,i)}qm.pool=new _t((function(e){e.reset()}),5),qm.pool.get=function(){return this._get()||new qm};var $m=new Array(13);function eh(e,t){return e||oh.reportMissingClass(t),Object}function th(e,t,n,i,o,a){var r=e(t);if(!r){if(o)return void(n[i]=function(t,n,i){return function(){var o=e(i)||eh(a,i);return t[n]=o,new o}}(n,i,t));r=eh(a,t)}n[i]=r}function nh(e,t,n){for(var i=n||lt,o=e[Vm],a=0;a<o.length;++a){var r=o[a];"string"!=typeof r?th(i,r[0],r,0,t,n):th(i,r,o,a,t,n)}}function ih(e){var t=e[jm];if(t)for(var n=e[Vm],i=0;i<t.length;++i){var o=t[i];o[0]=n[o[0]]}}function oh(e,t,n){"string"==typeof e&&(e=JSON.parse(e));var i,o=!t;(t=t||qm.pool.get()).init(e),n=n||{};var a=e[Gm],r=!1;if("object"==typeof a&&(r=a.preprocessed,a=a.version),a<1)throw new Error(L(5304,a));n._version=a,n.result=t,e[0]=n,r||(nh(e,!1,n.classFinder),ih(e)),s.game._isCloning=!0;var c=e[5],l=function(e){var t=e[5],n=e[6],i=0===n?0:n.length,o=t[t.length-1],a=t.length-i;"number"!=typeof o?o=0:(o<0&&(o=~o),--a);for(var r=0;r<a;++r)t[r]=Ym(e,t[r]);for(var s=e[Vm],c=0;c<i;++c,++r){var l=n[c],f=t[r];if(l>=0){var u=s[l];t[r]=Xm(e,u,f)}else(0,$m[l=~l])(e,t,r,f)}return o}(e);return s.game._isCloning=!1,e[7]&&function(e,t,n){for(var i=e.length-1,o=0,a=3*e[i];o<a;o+=3){var r=e[o],s=t[e[o+2]],c=e[o+1];c>=0?r[n[c]]=s:r[~c]=s}for(;o<i;o+=3){var l=t[e[o]],f=t[e[o+2]],u=e[o+1];u>=0?l[n[u]]=f:l[~u]=f}}(e[7],c,e[km]),function(e){for(var t=e[5],n=e[km],i=e[Hm],o=e[8],a=e[9],r=e[10],s=0;s<o.length;++s){var c=o[s];"number"==typeof c&&(o[s]=t[c]);var l=a[s];"number"==typeof l&&(l=l>=0?n[l]:~l,a[s]=l);var f=r[s];"number"==typeof f&&(r[s]=i[f])}}(e),i=c[l],o&&qm.pool.put(t),i}$m[0]=function(e,t,n,i){t[n]=i},$m[1]=Km,$m[2]=Jm(Km),$m[3]=Jm(Qm),$m[4]=Zm,$m[5]=function(e,t,n,i){Bm[i[0]](t[n],i)},$m[6]=Qm,$m[7]=function(e,t,n,i){t[n].set(i)},$m[8]=function(e,t,n,i){var o=new Fm[i[0]];Bm[i[0]](o,i),t[n]=o},$m[9]=Jm(Zm),$m[10]=function(e,t,n,i){var o=e[Vm][i[0]];t[n]=Xm(e,o,i[1])},$m[11]=function(e,t,n,i){var o=i[0];t[n]=o;for(var a=1;a<i.length;a+=3){var r=i[a],s=i[a+1],c=i[a+2];(0,$m[s])(e,o,r,c)}},$m[12]=function(e,t,n,i){var o=i[0];t[n]=o;for(var a=0;a<o.length;++a){var r=o[a],s=i[a+1];0!==s&&(0,$m[s])(e,o,a,r)}},oh.Details=qm,oh.reportMissingClass=function(e){w(5302,e)};var ah=function(e){this.preprocessed=!0,this.version=e};function rh(e,t){var n;n=Mm.safeFindClass;var i,o=qm.pool.get();try{i=oh(e,o,{classFinder:n,customEnv:t})}catch(e){throw x(e),qm.pool.put(o),e}i._uuid=t.__uuid__||"";for(var a=o.uuidList,r=o.uuidObjList,s=o.uuidPropList,c=o.uuidTypeList||[],l=[],f=0;f<a.length;f++){var u=a[f];l[f]={uuid:g_(u),owner:r[f],prop:s[f],type:ht._getClassById(c[f])}}return i.__depends__=l,i._native&&(i.__nativeDepend__=!0),qm.pool.put(o),i}s.deserialize=oh;var sh,ch=function(){function e(){this._depends=new a_}var t=e.prototype;return t.init=function(){this._depends.clear()},t.getNativeDep=function(e){var t=this._depends.get(e);return t&&t.nativeDep?fe({},t.nativeDep):null},t.getDeps=function(e){return this._depends.has(e)?this._depends.get(e).deps:[]},t.getDepsRecursively=function(e){var t=Object.create(null),n=[];return this._descend(e,t,n),n},t.remove=function(e){this._depends.remove(e)},t.parse=function(e,t){var n,i,o=null;if(Array.isArray(t)||t.__type__){if(this._depends.has(e))return this._depends.get(e);if(!Array.isArray(t)||"number"==typeof(i=(n=t[5])[n.length-1])&&i<0)try{var a=rh(t,{__uuid__:e});(o=this._parseDepsFromAsset(a)).nativeDep&&(o.nativeDep.uuid=e),f_.add(e+"@import",a)}catch(t){l_.remove(e+"@import"),o={deps:[]}}else o={deps:this._parseDepsFromJson(t)}}else{if(this._depends.has(e)&&(o=this._depends.get(e)).parsedFromExistAsset)return o;o=this._parseDepsFromAsset(t)}return this._depends.add(e,o),o},t._parseDepsFromAsset=function(e){for(var t={deps:[],parsedFromExistAsset:!0},n=e.__depends__,i=0,o=n.length;i<o;i++)t.deps.push(n[i].uuid);return e.__nativeDepend__&&(t.nativeDep=e._nativeDep),t},t._parseDepsFromJson=function(e){var t=null;return(t=function(e){var t=e[Hm];return e[10].map((function(e){return t[e]}))}(e)).forEach((function(e,n){return t[n]=g_(e)})),t},t._descend=function(e,t,n){for(var i=this.getDeps(e),o=0;o<i.length;o++){var a=i[o];t[a]||(t[a]=!0,n.push(a),this._descend(a,t,n))}},e}(),lh=e("fX",new ch),fh=[new Wr];function uh(e){return e&&0==(e&e-1)}var _h,mh,hh,dh,ph,vh,gh=Ou("cc.SimpleTexture")(sh=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this)._gfxTexture=null,t._mipmapLevel=1,t._textureWidth=0,t._textureHeight=0,t}ue(t,e);var n=t.prototype;return n.getGFXTexture=function(){return this._gfxTexture},n.destroy=function(){return this._tryDestroyTexture(),e.prototype.destroy.call(this)},n.updateImage=function(){this.updateMipmaps(0)},n.updateMipmaps=function(){},n.uploadData=function(e,t,n){if(void 0===t&&(t=0),void 0===n&&(n=0),this._gfxTexture&&!(this._mipmapLevel<=t)){var i=this._getGFXDevice();if(i){var o=fh[0];o.texExtent.width=this._textureWidth>>t,o.texExtent.height=this._textureHeight>>t,o.texSubres.mipLevel=t,o.texSubres.baseArrayLayer=n,ArrayBuffer.isView(e)?i.copyBuffersToTexture([e],this._gfxTexture,fh):i.copyTexImagesToTexture([e],this._gfxTexture,fh)}}},n._assignImage=function(e,t,n){var i=this,o=function(){var o=e.data;if(o&&(i.uploadData(o,t,n),i._checkTextureLoaded(),Et.CLEANUP_IMAGE_CACHE)){var a=lh.getDeps(i._uuid),r=a.indexOf(e._uuid);-1!==r&&(Se(a,r),e.decRef())}};if(e.loaded)o();else{if(e.once("load",(function(){o()})),!this.isCompressed){var a=s.builtinResMgr.get("black-texture").image;this.uploadData(a.data,t,n)}s.assetManager.postLoadNative(e)}},n._checkTextureLoaded=function(){this._textureReady()},n._textureReady=function(){this.loaded=!0,this.emit("load")},n._setMipmapLevel=function(e){this._mipmapLevel=e<1?1:e},n._getGfxTextureCreateInfo=function(){return null},n._tryReset=function(){if(this._tryDestroyTexture(),0!==this._mipmapLevel){var e=this._getGFXDevice();e&&this._createTexture(e)}},n._createTexture=function(e){if(0!==this._width&&0!==this._height){var t=cr.NONE;this._mipFilter!==D_.NONE&&function(e,t,n){return!(e.gfxAPI===Ja.WEBGL)||uh(t)&&uh(n)}(e,this._width,this._height)&&(this._mipmapLevel=function(e,t){for(var n=Math.max(e,t),i=0;n;)n>>=1,i++;return i}(this._width,this._height),t=cr.GEN_MIPMAP);var n=this._getGfxTextureCreateInfo({usage:sr.SAMPLED|sr.TRANSFER_DST,format:this._getGFXFormat(),levelCount:this._mipmapLevel,flags:t|cr.IMMUTABLE});if(n){var i=e.createTexture(n);this._textureWidth=n.width,this._textureHeight=n.height,this._gfxTexture=i}}},n._tryDestroyTexture=function(){this._gfxTexture&&(this._gfxTexture.destroy(),this._gfxTexture=null)},le(t,[{key:"mipmapLevel",get:function(){return this._mipmapLevel}}]),t}(um))||sh;s.SimpleTexture=gh;var xh,yh,Eh,Sh,Ah,Ch,Th=e("e4",(_h=Ou("cc.Texture2D"),mh=i_([H_]),_h((vh=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ge(t=e.call.apply(e,[this].concat(i))||this,"_mipmaps",ph,de(t)),t}ue(t,e);var n=t.prototype;return n.initialize=function(){this.mipmaps=this._mipmaps},n.onLoaded=function(){this.initialize()},n.reset=function(e){this._width=e.width,this._height=e.height,this._setGFXFormat(e.format),this._setMipmapLevel(e.mipmapLevel||1),this._tryReset()},n.create=function(e,t,n,i){void 0===n&&(n=N_.RGBA8888),void 0===i&&(i=1),this.reset({width:e,height:t,format:n,mipmapLevel:i})},n.toString=function(){return 0!==this._mipmaps.length?this._mipmaps[0].url:""},n.updateMipmaps=function(e,t){if(void 0===e&&(e=0),!(e>=this._mipmaps.length))for(var n=Math.min(void 0===t?this._mipmaps.length:t,this._mipmaps.length-e),i=0;i<n;++i){var o=e+i;this._assignImage(this._mipmaps[o],o)}},n.getHtmlElementObj=function(){return this._mipmaps[0]&&this._mipmaps[0].data instanceof HTMLElement?this._mipmaps[0].data:null},n.destroy=function(){return this._mipmaps=[],e.prototype.destroy.call(this)},n.description=function(){return"<cc.Texture2D | Name = "+(this._mipmaps[0]?this._mipmaps[0].url:"")+" | Dimension = "+this.width+" x "+this.height+">"},n.releaseTexture=function(){this.destroy()},n._serialize=function(){return null},n._deserialize=function(t,n){var i=t;e.prototype._deserialize.call(this,i.base,n),this._mipmaps=new Array(i.mipmaps.length);for(var o=0;o<i.mipmaps.length;++o)if(this._mipmaps[o]=new H_,i.mipmaps[o]){var a=i.mipmaps[o];n.result.push(this._mipmaps,""+o,a,ht._getClassId(H_)),this._mipmaps[o]._texture=this}},n._getGfxTextureCreateInfo=function(e){var t=new es(rr.TEX2D);return t.width=this._width,t.height=this._height,Object.assign(t,e)},n._checkTextureLoaded=function(){for(var t=!0,n=0;n<this._mipmaps.length;++n)if(!this._mipmaps[n].loaded){t=!1;break}t&&e.prototype._textureReady.call(this)},n.initDefault=function(t){e.prototype.initDefault.call(this,t);var n=new H_;n.initDefault(),this.image=n},n.validate=function(){return this.mipmaps&&0!==this.mipmaps.length},le(t,[{key:"mipmaps",get:function(){return this._mipmaps},set:function(e){var t=this;if(this._mipmaps=e,this._setMipmapLevel(this._mipmaps.length),this._mipmaps.length>0){var n=this._mipmaps[0];this.reset({width:n.width,height:n.height,format:n.format,mipmapLevel:this._mipmaps.length}),this._mipmaps.forEach((function(e,n){t._assignImage(e,n)}))}else this.reset({width:0,height:0,mipmapLevel:this._mipmaps.length})}},{key:"image",get:function(){return 0===this._mipmaps.length?null:this._mipmaps[0]},set:function(e){this.mipmaps=e?[e]:[]}}]),t}(gh),ph=xe((dh=vh).prototype,"_mipmaps",[mh],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),hh=dh))||hh));s.Texture2D=Th,function(e){e[e.right=0]="right",e[e.left=1]="left",e[e.top=2]="top",e[e.bottom=3]="bottom",e[e.front=4]="front",e[e.back=5]="back"}(Ch||(Ch={}));var Ih=e("e5",Ou("cc.TextureCube")((Ah=Sh=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ge(t=e.call.apply(e,[this].concat(i))||this,"_mipmaps",Eh,de(t)),t}ue(t,e),t.fromTexture2DArray=function(e,n){for(var i=[],o=e.length/6,a=0;a<o;a++){var r=6*a;i.push({front:e[r+Ch.front].image,back:e[r+Ch.back].image,left:e[r+Ch.left].image,right:e[r+Ch.right].image,top:e[r+Ch.top].image,bottom:e[r+Ch.bottom].image})}return(n=n||new t).mipmaps=i,n};var n=t.prototype;return n.onLoaded=function(){this.mipmaps=this._mipmaps,this.loaded=!0,this.emit("load")},n.reset=function(e){this._width=e.width,this._height=e.height,this._setGFXFormat(e.format),this._setMipmapLevel(e.mipmapLevel||1),this._tryReset()},n.updateMipmaps=function(e,t){var n=this;if(void 0===e&&(e=0),!(e>=this._mipmaps.length))for(var i=Math.min(void 0===t?this._mipmaps.length:t,this._mipmaps.length-e),o=function(t){var i=e+t;Ph(n._mipmaps[i],(function(e,t){n._assignImage(e,i,t)}))},a=0;a<i;++a)o(a)},n.destroy=function(){return this._mipmaps=[],e.prototype.destroy.call(this)},n.releaseTexture=function(){this.mipmaps=[]},n._serialize=function(){return null},n._deserialize=function(t,n){var i=t;e.prototype._deserialize.call(this,i.base,n),this._mipmaps=new Array(i.mipmaps.length);for(var o=0;o<i.mipmaps.length;++o){this._mipmaps[o]={front:new H_,back:new H_,left:new H_,right:new H_,top:new H_,bottom:new H_};var a=i.mipmaps[o],r=ht._getClassId(H_);n.result.push(this._mipmaps[o],"front",a.front,r),n.result.push(this._mipmaps[o],"back",a.back,r),n.result.push(this._mipmaps[o],"left",a.left,r),n.result.push(this._mipmaps[o],"right",a.right,r),n.result.push(this._mipmaps[o],"top",a.top,r),n.result.push(this._mipmaps[o],"bottom",a.bottom,r)}},n._getGfxTextureCreateInfo=function(e){var t=new es(rr.CUBE);return t.width=this._width,t.height=this._height,t.layerCount=6,Object.assign(t,e),t},n.initDefault=function(t){e.prototype.initDefault.call(this,t);var n=new H_;n.initDefault(),this.mipmaps=[{front:n,back:n,top:n,bottom:n,left:n,right:n}]},n.validate=function(){return 0!==this._mipmaps.length&&!this._mipmaps.find((function(e){return!(e.top&&e.bottom&&e.front&&e.back&&e.left&&e.right)}))},le(t,[{key:"mipmaps",get:function(){return this._mipmaps},set:function(e){var t=this;if(this._mipmaps=e,this._setMipmapLevel(this._mipmaps.length),this._mipmaps.length>0){var n=this._mipmaps[0].front;this.reset({width:n.width,height:n.height,format:n.format,mipmapLevel:this._mipmaps.length}),this._mipmaps.forEach((function(e,n){Ph(e,(function(e,i){t._assignImage(e,n,i)}))}))}else this.reset({width:0,height:0,mipmapLevel:this._mipmaps.length})}},{key:"image",get:function(){return 0===this._mipmaps.length?null:this._mipmaps[0]},set:function(e){this.mipmaps=e?[e]:[]}}]),t}(gh),Sh.FaceIndex=Ch,Eh=xe((yh=Ah).prototype,"_mipmaps",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),xh=yh))||xh);function Ph(e,t){t(e.front,Ch.front),t(e.back,Ch.back),t(e.left,Ch.left),t(e.right,Ch.right),t(e.top,Ch.top),t(e.bottom,Ch.bottom)}s.TextureCube=Ih;var wh,Rh,bh,Nh=e("er",[{name:"billboard",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"billboard|vert:vs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"billboard|vert:vs_main|tinted-fs:add",hash:121727045,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:50,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:38},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[]}},defines:[{name:"CC_USE_HDR",type:"boolean"}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1}]},{name:"builtin",defines:[],binding:1,stageFlags:1,members:[{name:"cc_size_rotation",type:16,count:1}]},{name:"FragConstants",defines:[],binding:2,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:3}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:1},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:2}]}]},{name:"clear-stencil",techniques:[{passes:[{blendState:{targets:[{blend:!0}]},rasterizerState:{cullMode:0},program:"clear-stencil|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"clear-stencil|sprite-vs:vert|sprite-fs:frag",hash:3507038093,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:0,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[],samplerTextures:[]},locals:{blocks:[],samplerTextures:[]}},defines:[],blocks:[],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0}]}]},{name:"graphics",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:1,blendDst:4,blendSrcAlpha:1,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"graphics|vs:vert|fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"graphics|vs:vert|fs:frag",hash:3113634185,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:46,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[]}},defines:[],blocks:[],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:1},{name:"a_dist",type:13,count:1,defines:[],stageFlags:1,format:11,location:2}]}]},{name:"particle-gpu",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle-gpu|particle-vs-gpu:gpvs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle-gpu|particle-vs-gpu:gpvs_main|tinted-fs:add",hash:3356319967,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:60,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:38},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"COLOR_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"ROTATION_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"SIZE_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"FORCE_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"VELOCITY_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"TEXTURE_ANIMATION_MODULE_ENABLE",type:"boolean"},{name:"CC_USE_WORLD_SPACE",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1}]},{name:"SampleConstants",defines:[],binding:1,stageFlags:1,members:[{name:"u_sampleInfo",type:16,count:1}]},{name:"TickConstants",defines:[],binding:2,stageFlags:1,members:[{name:"u_worldRot",type:16,count:1},{name:"u_timeDelta",type:16,count:1}]},{name:"ColorConstant",defines:["COLOR_OVER_TIME_MODULE_ENABLE"],binding:3,stageFlags:1,members:[{name:"u_color_mode",type:5,count:1}]},{name:"RotationConstant",defines:["ROTATION_OVER_TIME_MODULE_ENABLE"],binding:4,stageFlags:1,members:[{name:"u_rotation_mode",type:5,count:1}]},{name:"SizeConstant",defines:["SIZE_OVER_TIME_MODULE_ENABLE"],binding:5,stageFlags:1,members:[{name:"u_size_mode",type:5,count:1}]},{name:"ForceConstant",defines:["FORCE_OVER_TIME_MODULE_ENABLE"],binding:6,stageFlags:1,members:[{name:"u_force_mode",type:5,count:1},{name:"u_force_space",type:5,count:1}]},{name:"VelocityConstant",defines:["VELOCITY_OVER_TIME_MODULE_ENABLE"],binding:7,stageFlags:1,members:[{name:"u_velocity_mode",type:5,count:1},{name:"u_velocity_space",type:5,count:1}]},{name:"AnimationConstant",defines:["TEXTURE_ANIMATION_MODULE_ENABLE"],binding:8,stageFlags:1,members:[{name:"u_anim_info",type:16,count:1}]},{name:"FragConstants",defines:[],binding:9,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"color_over_time_tex0",type:28,count:1,defines:["COLOR_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:10},{name:"rotation_over_time_tex0",type:28,count:1,defines:["ROTATION_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:11},{name:"size_over_time_tex0",type:28,count:1,defines:["SIZE_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:12},{name:"force_over_time_tex0",type:28,count:1,defines:["FORCE_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:13},{name:"velocity_over_time_tex0",type:28,count:1,defines:["VELOCITY_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:14},{name:"texture_animation_tex0",type:28,count:1,defines:["TEXTURE_ANIMATION_MODULE_ENABLE"],stageFlags:1,binding:15},{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:16}],attributes:[{name:"a_position_starttime",type:16,count:1,defines:[],stageFlags:1,format:44,location:0},{name:"a_size_uv",type:16,count:1,defines:[],stageFlags:1,format:44,location:1},{name:"a_rotation_uv",type:16,count:1,defines:[],stageFlags:1,format:44,location:2},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:3},{name:"a_dir_life",type:16,count:1,defines:[],stageFlags:1,format:44,location:4},{name:"a_rndSeed",type:13,count:1,defines:[],stageFlags:1,format:11,location:5},{name:"a_texCoord",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:6},{name:"a_texCoord3",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:7},{name:"a_normal",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:8},{name:"a_color1",type:16,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:44,location:9}]}]},{name:"particle-trail",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle-trail|particle-trail:vs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},frameTile_velLenScale:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle-trail|particle-trail:vs_main|tinted-fs:add",hash:2637621064,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:49,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:38},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"CC_DRAW_WIRE_FRAME",type:"boolean"},{name:"CC_USE_WORLD_SPACE",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1}]},{name:"FragConstants",defines:[],binding:1,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_texCoord",type:16,count:1,defines:[],stageFlags:1,format:44,location:1},{name:"a_texCoord1",type:15,count:1,defines:[],stageFlags:1,format:32,location:2},{name:"a_texCoord2",type:15,count:1,defines:[],stageFlags:1,format:32,location:3},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:4}]}]},{name:"particle",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle|particle-vs-legacy:lpvs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle|particle-vs-legacy:lpvs_main|tinted-fs:add",hash:1755172438,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:49,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:38},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"CC_USE_WORLD_SPACE",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1}]},{name:"FragConstants",defines:[],binding:1,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_texCoord",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord1",type:15,count:1,defines:[],stageFlags:1,format:32,location:2},{name:"a_texCoord2",type:15,count:1,defines:[],stageFlags:1,format:32,location:3},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:4},{name:"a_color1",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:8},{name:"a_texCoord3",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:6},{name:"a_normal",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:7}]}]},{name:"spine",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"spine|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1},properties:{alphaThreshold:{value:[.5],type:13}}}]}],shaders:[{name:"spine|sprite-vs:vert|sprite-fs:frag",hash:1867464226,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:46,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:1},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCLocal",defines:["USE_LOCAL"]}],samplerTextures:[{name:"cc_spriteTexture",defines:[]}]}},defines:[{name:"USE_LOCAL",type:"boolean"},{name:"TWO_COLORED",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"}],blocks:[{name:"ALPHA_TEST_DATA",defines:["USE_ALPHA_TEST"],binding:0,stageFlags:16,members:[{name:"alphaThreshold",type:13,count:1}]}],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:1},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:2},{name:"a_color2",type:16,count:1,defines:["TWO_COLORED"],stageFlags:1,format:44,location:3}]}]},{name:"sprite",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"sprite|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1},properties:{alphaThreshold:{value:[.5],type:13}}}]}],shaders:[{name:"sprite|sprite-vs:vert|sprite-fs:frag",hash:1559944983,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:46,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:1},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCLocal",defines:["USE_LOCAL"]}],samplerTextures:[{name:"cc_spriteTexture",defines:["USE_TEXTURE"]}]}},defines:[{name:"USE_LOCAL",type:"boolean"},{name:"SAMPLE_FROM_RT",type:"boolean"},{name:"USE_PIXEL_ALIGNMENT",type:"boolean"},{name:"CC_USE_EMBEDDED_ALPHA",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"USE_TEXTURE",type:"boolean"},{name:"IS_GRAY",type:"boolean"}],blocks:[{name:"ALPHA_TEST_DATA",defines:["USE_ALPHA_TEST"],binding:0,stageFlags:16,members:[{name:"alphaThreshold",type:13,count:1}]}],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:1},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:2}]}]},{name:"standard",techniques:[{name:"opaque",passes:[{program:"standard|standard-vs|standard-fs",properties:{tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],type:16,handleInfo:["albedo",0,16]},albedoScale:{value:[1,1,1],type:15,handleInfo:["albedoScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["albedoScaleAndCutoff",3,13]},occlusion:{value:[1],type:13,handleInfo:["pbrParams",0,13]},roughness:{value:[.8],type:13,handleInfo:["pbrParams",1,13]},metallic:{value:[.6],type:13,handleInfo:["pbrParams",2,13]},normalStrenth:{value:[1],type:13,handleInfo:["pbrParams",3,13]},emissive:{value:[0,0,0,1],type:16},emissiveScale:{value:[1,1,1],type:15,handleInfo:["emissiveScaleParam",0,15]},mainTexture:{value:"grey",type:28,handleInfo:["albedoMap",0,28]},normalMap:{value:"normal",type:28},pbrMap:{value:"grey",type:28},metallicRoughnessMap:{value:"grey",type:28},occlusionMap:{value:"white",type:28},emissiveMap:{value:"grey",type:28},albedo:{type:16,value:[1,1,1,1]},albedoScaleAndCutoff:{type:16,value:[1,1,1,.5]},pbrParams:{type:16,value:[1,.8,.6,1]},emissiveScaleParam:{type:16,value:[1,1,1,0]},albedoMap:{type:28,value:"grey"}}},{phase:"deferred",propertyIndex:0,blendState:{targets:[{blend:!1},{blend:!1},{blend:!1},{blend:!1}]},program:"standard|standard-vs|standard-fs",properties:{tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],type:16,handleInfo:["albedo",0,16]},albedoScale:{value:[1,1,1],type:15,handleInfo:["albedoScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["albedoScaleAndCutoff",3,13]},occlusion:{value:[1],type:13,handleInfo:["pbrParams",0,13]},roughness:{value:[.8],type:13,handleInfo:["pbrParams",1,13]},metallic:{value:[.6],type:13,handleInfo:["pbrParams",2,13]},normalStrenth:{value:[1],type:13,handleInfo:["pbrParams",3,13]},emissive:{value:[0,0,0,1],type:16},emissiveScale:{value:[1,1,1],type:15,handleInfo:["emissiveScaleParam",0,15]},mainTexture:{value:"grey",type:28,handleInfo:["albedoMap",0,28]},normalMap:{value:"normal",type:28},pbrMap:{value:"grey",type:28},metallicRoughnessMap:{value:"grey",type:28},occlusionMap:{value:"white",type:28},emissiveMap:{value:"grey",type:28},albedo:{type:16,value:[1,1,1,1]},albedoScaleAndCutoff:{type:16,value:[1,1,1,.5]},pbrParams:{type:16,value:[1,.8,.6,1]},emissiveScaleParam:{type:16,value:[1,1,1,0]},albedoMap:{type:28,value:"grey"}}},{phase:"forward-add",propertyIndex:0,embeddedMacros:{CC_FORWARD_ADD:!0},blendState:{targets:[{blend:!0,blendSrc:1,blendDst:1,blendSrcAlpha:0,blendDstAlpha:1}]},program:"standard|standard-vs|standard-fs",depthStencilState:{depthFunc:2,depthTest:!0,depthWrite:!1},properties:{tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],type:16,handleInfo:["albedo",0,16]},albedoScale:{value:[1,1,1],type:15,handleInfo:["albedoScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["albedoScaleAndCutoff",3,13]},occlusion:{value:[1],type:13,handleInfo:["pbrParams",0,13]},roughness:{value:[.8],type:13,handleInfo:["pbrParams",1,13]},metallic:{value:[.6],type:13,handleInfo:["pbrParams",2,13]},normalStrenth:{value:[1],type:13,handleInfo:["pbrParams",3,13]},emissive:{value:[0,0,0,1],type:16},emissiveScale:{value:[1,1,1],type:15,handleInfo:["emissiveScaleParam",0,15]},mainTexture:{value:"grey",type:28,handleInfo:["albedoMap",0,28]},normalMap:{value:"normal",type:28},pbrMap:{value:"grey",type:28},metallicRoughnessMap:{value:"grey",type:28},occlusionMap:{value:"white",type:28},emissiveMap:{value:"grey",type:28},albedo:{type:16,value:[1,1,1,1]},albedoScaleAndCutoff:{type:16,value:[1,1,1,.5]},pbrParams:{type:16,value:[1,.8,.6,1]},emissiveScaleParam:{type:16,value:[1,1,1,0]},albedoMap:{type:28,value:"grey"}}},{phase:"shadow-caster",propertyIndex:0,rasterizerState:{cullMode:1},program:"standard|shadow-caster-vs:vert|shadow-caster-fs:frag",properties:{tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],type:16,handleInfo:["albedo",0,16]},albedoScale:{value:[1,1,1],type:15,handleInfo:["albedoScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["albedoScaleAndCutoff",3,13]},occlusion:{value:[1],type:13,handleInfo:["pbrParams",0,13]},roughness:{value:[.8],type:13,handleInfo:["pbrParams",1,13]},metallic:{value:[.6],type:13,handleInfo:["pbrParams",2,13]},normalStrenth:{value:[1],type:13,handleInfo:["pbrParams",3,13]},emissive:{value:[0,0,0,1],type:16},emissiveScale:{value:[1,1,1],type:15,handleInfo:["emissiveScaleParam",0,15]},mainTexture:{value:"grey",type:28,handleInfo:["albedoMap",0,28]},albedo:{type:16,value:[1,1,1,1]},albedoScaleAndCutoff:{type:16,value:[1,1,1,.5]},pbrParams:{type:16,value:[1,.8,.6,1]},emissiveScaleParam:{type:16,value:[1,1,1,0]},albedoMap:{type:28,value:"grey"}}}]}],shaders:[{name:"standard|standard-vs|standard-fs",hash:442396670,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:216,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:59},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_environment",defines:["CC_USE_IBL"]}]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]},{name:"CCForwardLight",defines:["CC_FORWARD_ADD"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"cc_lightingMap",defines:["USE_LIGHTMAP","!USE_BATCHING","!CC_FORWARD_ADD"]}]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"USE_VERTEX_COLOR",type:"boolean"},{name:"USE_NORMAL_MAP",type:"boolean"},{name:"HAS_SECOND_UV",type:"boolean"},{name:"SAMPLE_FROM_RT",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_ALBEDO_MAP",type:"boolean"},{name:"ALBEDO_UV",type:"string",options:["v_uv","v_uv1"]},{name:"NORMAL_UV",type:"string",options:["v_uv","v_uv1"]},{name:"PBR_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_PBR_MAP",type:"boolean"},{name:"USE_METALLIC_ROUGHNESS_MAP",type:"boolean"},{name:"USE_OCCLUSION_MAP",type:"boolean"},{name:"USE_EMISSIVE_MAP",type:"boolean"},{name:"EMISSIVE_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r"]},{name:"CC_PIPELINE_TYPE",type:"number",range:[0,1]}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:17,members:[{name:"tilingOffset",type:16,count:1},{name:"albedo",type:16,count:1},{name:"albedoScaleAndCutoff",type:16,count:1},{name:"pbrParams",type:16,count:1},{name:"emissive",type:16,count:1},{name:"emissiveScaleParam",type:16,count:1}]}],samplerTextures:[{name:"albedoMap",type:28,count:1,defines:["USE_ALBEDO_MAP"],stageFlags:16,binding:1},{name:"normalMap",type:28,count:1,defines:["USE_NORMAL_MAP"],stageFlags:16,binding:2},{name:"pbrMap",type:28,count:1,defines:["USE_PBR_MAP"],stageFlags:16,binding:3},{name:"metallicRoughnessMap",type:28,count:1,defines:["USE_METALLIC_ROUGHNESS_MAP"],stageFlags:16,binding:4},{name:"occlusionMap",type:28,count:1,defines:["USE_OCCLUSION_MAP"],stageFlags:16,binding:5},{name:"emissiveMap",type:28,count:1,defines:["USE_EMISSIVE_MAP"],stageFlags:16,binding:6}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3},{name:"a_vertexId",type:13,count:1,defines:["CC_USE_MORPH"],stageFlags:1,format:11,location:6},{name:"a_joints",type:"u32vec4",count:1,defines:["CC_USE_SKINNING"],stageFlags:1,location:4},{name:"a_weights",type:16,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:44,location:5},{name:"a_jointAnimInfo",type:16,count:1,defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:7},{name:"a_matWorld0",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:8},{name:"a_matWorld1",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:9},{name:"a_matWorld2",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",type:16,count:1,defines:["USE_INSTANCING","USE_LIGHTMAP"],stageFlags:1,format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",type:13,count:1,defines:["!USE_INSTANCING","USE_BATCHING"],stageFlags:1,format:11,location:12},{name:"a_color",type:16,count:1,defines:["USE_VERTEX_COLOR"],stageFlags:1,format:44,location:13},{name:"a_texCoord1",type:14,count:1,defines:[],stageFlags:1,format:21,location:14}]},{name:"standard|shadow-caster-vs:vert|shadow-caster-fs:frag",hash:826679743,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:179,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:22},globals:{blocks:[{name:"CCShadow",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"HAS_SECOND_UV",type:"boolean"},{name:"USE_ALBEDO_MAP",type:"boolean"},{name:"ALBEDO_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r"]}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:17,members:[{name:"tilingOffset",type:16,count:1},{name:"albedo",type:16,count:1},{name:"albedoScaleAndCutoff",type:16,count:1},{name:"pbrParams",type:16,count:1},{name:"emissive",type:16,count:1},{name:"emissiveScaleParam",type:16,count:1}]}],samplerTextures:[{name:"albedoMap",type:28,count:1,defines:["USE_ALBEDO_MAP"],stageFlags:16,binding:1}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3},{name:"a_vertexId",type:13,count:1,defines:["CC_USE_MORPH"],stageFlags:1,format:11,location:6},{name:"a_joints",type:"u32vec4",count:1,defines:["CC_USE_SKINNING"],stageFlags:1,location:4},{name:"a_weights",type:16,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:44,location:5},{name:"a_jointAnimInfo",type:16,count:1,defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:7},{name:"a_matWorld0",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:8},{name:"a_matWorld1",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:9},{name:"a_matWorld2",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",type:16,count:1,defines:["USE_INSTANCING","USE_LIGHTMAP"],stageFlags:1,format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",type:13,count:1,defines:["!USE_INSTANCING","USE_BATCHING"],stageFlags:1,format:11,location:12},{name:"a_texCoord1",type:14,count:1,defines:[],stageFlags:1,format:21,location:13}]}]},{name:"terrain",techniques:[{name:"opaque",passes:[{program:"terrain|terrain-vs|terrain-fs",properties:{UVScale:{value:[1,1,1,1],type:16},lightMapUVParam:{value:[0,0,0,0],type:16},metallic:{value:[0,0,0,0],type:16},roughness:{value:[1,1,1,1],type:16},weightMap:{value:"black",type:28},detailMap0:{value:"grey",type:28},detailMap1:{value:"grey",type:28},detailMap2:{value:"grey",type:28},detailMap3:{value:"grey",type:28},normalMap0:{value:"normal",type:28},normalMap1:{value:"normal",type:28},normalMap2:{value:"normal",type:28},normalMap3:{value:"normal",type:28},lightMap:{value:"grey",type:28}}},{phase:"deferred",propertyIndex:0,blendState:{targets:[{blend:!1},{blend:!1},{blend:!1},{blend:!1}]},program:"terrain|terrain-vs|terrain-fs",properties:{UVScale:{value:[1,1,1,1],type:16},lightMapUVParam:{value:[0,0,0,0],type:16},metallic:{value:[0,0,0,0],type:16},roughness:{value:[1,1,1,1],type:16},weightMap:{value:"black",type:28},detailMap0:{value:"grey",type:28},detailMap1:{value:"grey",type:28},detailMap2:{value:"grey",type:28},detailMap3:{value:"grey",type:28},normalMap0:{value:"normal",type:28},normalMap1:{value:"normal",type:28},normalMap2:{value:"normal",type:28},normalMap3:{value:"normal",type:28},lightMap:{value:"grey",type:28}}},{phase:"forward-add",propertyIndex:0,embeddedMacros:{CC_FORWARD_ADD:!0},blendState:{targets:[{blend:!0,blendSrc:1,blendDst:1,blendSrcAlpha:0,blendDstAlpha:1}]},program:"terrain|terrain-vs|terrain-fs",depthStencilState:{depthFunc:2,depthTest:!0,depthWrite:!1},properties:{UVScale:{value:[1,1,1,1],type:16},lightMapUVParam:{value:[0,0,0,0],type:16},metallic:{value:[0,0,0,0],type:16},roughness:{value:[1,1,1,1],type:16},weightMap:{value:"black",type:28},detailMap0:{value:"grey",type:28},detailMap1:{value:"grey",type:28},detailMap2:{value:"grey",type:28},detailMap3:{value:"grey",type:28},normalMap0:{value:"normal",type:28},normalMap1:{value:"normal",type:28},normalMap2:{value:"normal",type:28},normalMap3:{value:"normal",type:28},lightMap:{value:"grey",type:28}}},{phase:"shadow-add",propertyIndex:0,rasterizerState:{cullMode:2},program:"terrain|shadow-caster-vs:vert|shadow-caster-fs:frag"}]}],shaders:[{name:"terrain|terrain-vs|terrain-fs",hash:3030724902,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:64,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:55},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_environment",defines:["CC_USE_IBL"]}]},locals:{blocks:[{name:"CCLocal",defines:[]},{name:"CCForwardLight",defines:["CC_FORWARD_ADD"]}],samplerTextures:[{name:"cc_lightingMap",defines:["USE_LIGHTMAP","!USE_BATCHING","!CC_FORWARD_ADD"]}]}},defines:[{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"USE_NORMALMAP",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"USE_BATCHING",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"LAYERS",type:"number",range:[0,4]},{name:"USE_PBR",type:"boolean"},{name:"CC_PIPELINE_TYPE",type:"number",range:[0,1]}],blocks:[{name:"TexCoords",defines:[],binding:0,stageFlags:1,members:[{name:"UVScale",type:16,count:1},{name:"lightMapUVParam",type:16,count:1}]},{name:"PbrParams",defines:[],binding:1,stageFlags:16,members:[{name:"metallic",type:16,count:1},{name:"roughness",type:16,count:1}]}],samplerTextures:[{name:"weightMap",type:28,count:1,defines:[],stageFlags:16,binding:2},{name:"detailMap0",type:28,count:1,defines:[],stageFlags:16,binding:3},{name:"detailMap1",type:28,count:1,defines:[],stageFlags:16,binding:4},{name:"detailMap2",type:28,count:1,defines:[],stageFlags:16,binding:5},{name:"detailMap3",type:28,count:1,defines:[],stageFlags:16,binding:6},{name:"normalMap0",type:28,count:1,defines:[],stageFlags:16,binding:7},{name:"normalMap1",type:28,count:1,defines:[],stageFlags:16,binding:8},{name:"normalMap2",type:28,count:1,defines:[],stageFlags:16,binding:9},{name:"normalMap3",type:28,count:1,defines:[],stageFlags:16,binding:10},{name:"lightMap",type:28,count:1,defines:[],stageFlags:16,binding:11}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2}]},{name:"terrain|shadow-caster-vs:vert|shadow-caster-fs:frag",hash:1471860764,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:62,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[]}},defines:[],blocks:[],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2}]}]},{name:"unlit",techniques:[{name:"opaque",passes:[{program:"unlit|unlit-vs:vert|unlit-fs:frag",properties:{mainTexture:{value:"grey",type:28},tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],type:16},colorScale:{value:[1,1,1],type:15,handleInfo:["colorScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["colorScaleAndCutoff",3,13]},color:{type:16,handleInfo:["mainColor",0,16]},colorScaleAndCutoff:{type:16,value:[1,1,1,.5]}}}]}],shaders:[{name:"unlit|unlit-vs:vert|unlit-fs:frag",hash:1017648509,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:195,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:39},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"USE_VERTEX_COLOR",type:"boolean"},{name:"USE_TEXTURE",type:"boolean"},{name:"SAMPLE_FROM_RT",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r","g","b"]}],blocks:[{name:"TexCoords",defines:["USE_TEXTURE"],binding:0,stageFlags:1,members:[{name:"tilingOffset",type:16,count:1}]},{name:"Constant",defines:[],binding:1,stageFlags:16,members:[{name:"mainColor",type:16,count:1},{name:"colorScaleAndCutoff",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:["USE_TEXTURE"],stageFlags:16,binding:2}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3},{name:"a_vertexId",type:13,count:1,defines:["CC_USE_MORPH"],stageFlags:1,format:11,location:6},{name:"a_joints",type:"u32vec4",count:1,defines:["CC_USE_SKINNING"],stageFlags:1,location:4},{name:"a_weights",type:16,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:44,location:5},{name:"a_jointAnimInfo",type:16,count:1,defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:7},{name:"a_matWorld0",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:8},{name:"a_matWorld1",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:9},{name:"a_matWorld2",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",type:16,count:1,defines:["USE_INSTANCING","USE_LIGHTMAP"],stageFlags:1,format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",type:13,count:1,defines:["!USE_INSTANCING","USE_BATCHING"],stageFlags:1,format:11,location:12},{name:"a_color",type:16,count:1,defines:["USE_VERTEX_COLOR"],stageFlags:1,format:44,location:13}]}]},{name:"deferred-lighting",techniques:[{passes:[{phase:"deferred-lighting",program:"deferred-lighting|lighting-vs|lighting-fs",depthStencilState:{depthFunc:4,depthTest:!0,depthWrite:!1}}]}],shaders:[{name:"deferred-lighting|lighting-vs|lighting-fs",hash:1507574087,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:37,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:53},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_environment",defines:["CC_USE_IBL"]},{name:"cc_gbuffer_albedoMap",defines:[]},{name:"cc_gbuffer_positionMap",defines:[]},{name:"cc_gbuffer_normalMap",defines:[]},{name:"cc_gbuffer_emissiveMap",defines:[]}]},locals:{blocks:[{name:"CCForwardLight",defines:[]}],samplerTextures:[]}},defines:[{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"USE_LIGHTMAP",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"CC_PIPELINE_TYPE",type:"number",range:[0,1]},{name:"CC_USE_FOG",type:"number",range:[0,4]}],blocks:[],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3}]}]},{name:"planar-shadow",techniques:[{passes:[{phase:"planarShadow",blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},program:"planar-shadow|planar-shadow-vs:vert|planar-shadow-fs:frag",depthStencilState:{depthTest:!0,depthWrite:!1,stencilTestFront:!0,stencilFuncFront:5,stencilPassOpFront:2,stencilRefBack:128,stencilRefFront:128,stencilReadMaskBack:128,stencilReadMaskFront:128,stencilWriteMaskBack:128,stencilWriteMaskFront:128}}]}],shaders:[{name:"planar-shadow|planar-shadow-vs:vert|planar-shadow-fs:frag",hash:649108546,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:210,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:53},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"}],blocks:[],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3},{name:"a_vertexId",type:13,count:1,defines:["CC_USE_MORPH"],stageFlags:1,format:11,location:6},{name:"a_joints",type:"u32vec4",count:1,defines:["CC_USE_SKINNING"],stageFlags:1,location:4},{name:"a_weights",type:16,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:44,location:5},{name:"a_jointAnimInfo",type:16,count:1,defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:7},{name:"a_matWorld0",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:8},{name:"a_matWorld1",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:9},{name:"a_matWorld2",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",type:16,count:1,defines:["USE_INSTANCING","USE_LIGHTMAP"],stageFlags:1,format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",type:13,count:1,defines:["!USE_INSTANCING","USE_BATCHING"],stageFlags:1,format:11,location:12}]}]},{name:"post-process",techniques:[{passes:[{phase:"post-process",blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendSrcAlpha:2,blendDstAlpha:4}]},program:"post-process|post-process-vs|post-process-fs",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"post-process|post-process-vs|post-process-fs",hash:1780456825,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:145,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:37},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[{name:"cc_lighting_resultMap",defines:[]}]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"}],blocks:[],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3},{name:"a_vertexId",type:13,count:1,defines:["CC_USE_MORPH"],stageFlags:1,format:11,location:6},{name:"a_joints",type:"u32vec4",count:1,defines:["CC_USE_SKINNING"],stageFlags:1,location:4},{name:"a_weights",type:16,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:44,location:5},{name:"a_jointAnimInfo",type:16,count:1,defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:7}]}]},{name:"skybox",techniques:[{passes:[{rasterizerState:{cullMode:0},program:"skybox|sky-vs:vert|sky-fs:frag",priority:245,depthStencilState:{depthTest:!0,depthWrite:!1}}]}],shaders:[{name:"skybox|sky-vs:vert|sky-fs:frag",hash:311136147,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:37,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:37},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[{name:"cc_environment",defines:[]}]},locals:{blocks:[],samplerTextures:[]}},defines:[{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_RGBE_CUBEMAP",type:"boolean"}],blocks:[],samplerTextures:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3}]}]},{name:"profiler",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"profiler|profiler-vs:vert|profiler-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"profiler|profiler-vs:vert|profiler-fs:frag",hash:3552712539,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:58,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:37},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[]},locals:{blocks:[],samplerTextures:[]}},defines:[{name:"CC_USE_HDR",type:"boolean"}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"offset",type:16,count:1}]},{name:"PerFrameInfo",defines:[],binding:1,stageFlags:1,members:[{name:"digits",type:16,count:20}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:1}]}]},{name:"splash-screen",techniques:[{name:"default",passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"splash-screen|splash-screen-vs:vert|splash-screen-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},resolution:{value:[640,960],type:14,handleInfo:["u_buffer0",0,14]},precent:{value:[.5],type:13,handleInfo:["u_buffer0",2,13]},scale:{value:[200,500],type:14,handleInfo:["u_buffer1",0,14]},translate:{value:[320,480],type:14,handleInfo:["u_buffer1",2,14]},u_buffer0:{type:16,value:[640,960,.5,0]},u_buffer1:{type:16,value:[200,500,320,480]}}}]}],shaders:[{name:"splash-screen|splash-screen-vs:vert|splash-screen-fs:frag",hash:1349506124,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:6,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[],samplerTextures:[]},locals:{blocks:[],samplerTextures:[]}},defines:[],blocks:[{name:"Constant",defines:[],binding:0,stageFlags:1,members:[{name:"u_buffer0",type:16,count:1},{name:"u_buffer1",type:16,count:1},{name:"u_projection",type:25,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:1}],attributes:[{name:"a_position",type:14,count:1,defines:[],stageFlags:1,format:21,location:0},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:1}]}]}]),Oh=4026531840,Dh=264241152,Mh=3145728,Lh=1032192;!function(e){e[e.BUFFER=0]="BUFFER",e[e.TEXTURE=1]="TEXTURE"}(bh||(bh=e("by",{})));var zh=e("bz",(function(e,t,n,i,o){return void 0===o&&(o=0),e<<28&Oh|i<<22&Dh|t<<20&Mh|n<<14&Lh|16383&o})),Fh=e("bA",(function(e){return(e&Oh)>>>28})),Uh=e("bB",(function(e){return(e&Dh)>>>22})),Bh=(e("bC",(function(e){return(e&Mh)>>>20})),e("bD",(function(e){return(e&Lh)>>>14}))),Gh=e("bE",(function(e){return 16383&e})),Hh=e("bF",(function(e,t){return e&~Dh|t<<22&Dh})),kh=e("bG",((wh={})[tr.UNKNOWN]=function(){return console.warn("illegal uniform handle")},wh[tr.INT]=function(e,t,n){return void 0===n&&(n=0),e[n]},wh[tr.INT2]=function(e,t,n){return void 0===n&&(n=0),Xn.fromArray(t,e,n)},wh[tr.INT3]=function(e,t,n){return void 0===n&&(n=0),Rn.fromArray(t,e,n)},wh[tr.INT4]=function(e,t,n){return void 0===n&&(n=0),Zn.fromArray(t,e,n)},wh[tr.FLOAT]=function(e,t,n){return void 0===n&&(n=0),e[n]},wh[tr.FLOAT2]=function(e,t,n){return void 0===n&&(n=0),Xn.fromArray(t,e,n)},wh[tr.FLOAT3]=function(e,t,n){return void 0===n&&(n=0),Rn.fromArray(t,e,n)},wh[tr.FLOAT4]=function(e,t,n){return void 0===n&&(n=0),Zn.fromArray(t,e,n)},wh[tr.MAT3]=function(e,t,n){return void 0===n&&(n=0),Dn.fromArray(t,e,n)},wh[tr.MAT4]=function(e,t,n){return void 0===n&&(n=0),jn.fromArray(t,e,n)},wh)),Vh=e("bH",((Rh={})[tr.UNKNOWN]=function(){return console.warn("illegal uniform handle")},Rh[tr.INT]=function(e,t,n){return void 0===n&&(n=0),e[n]=t},Rh[tr.INT2]=function(e,t,n){return void 0===n&&(n=0),Xn.toArray(e,t,n)},Rh[tr.INT3]=function(e,t,n){return void 0===n&&(n=0),Rn.toArray(e,t,n)},Rh[tr.INT4]=function(e,t,n){return void 0===n&&(n=0),Zn.toArray(e,t,n)},Rh[tr.FLOAT]=function(e,t,n){return void 0===n&&(n=0),e[n]=t},Rh[tr.FLOAT2]=function(e,t,n){return void 0===n&&(n=0),Xn.toArray(e,t,n)},Rh[tr.FLOAT3]=function(e,t,n){return void 0===n&&(n=0),Rn.toArray(e,t,n)},Rh[tr.FLOAT4]=function(e,t,n){return void 0===n&&(n=0),Zn.toArray(e,t,n)},Rh[tr.MAT3]=function(e,t,n){return void 0===n&&(n=0),Dn.toArray(e,t,n)},Rh[tr.MAT4]=function(e,t,n){return void 0===n&&(n=0),jn.toArray(e,t,n)},Rh)),jh=[Object.freeze([0]),Object.freeze([0,0]),Object.freeze([0,0,0,0]),Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])];function Wh(e){switch(e){case tr.BOOL:case tr.INT:case tr.UINT:case tr.FLOAT:return jh[0];case tr.BOOL2:case tr.INT2:case tr.UINT2:case tr.FLOAT2:return jh[1];case tr.BOOL4:case tr.INT4:case tr.UINT4:case tr.FLOAT4:return jh[2];case tr.MAT4:return jh[3];case tr.SAMPLER2D:return"default-texture";case tr.SAMPLER_CUBE:return"default-cube-texture"}return jh[0]}var qh=new As;function Yh(e){return Math.ceil(Math.log2(Math.max(e,2)))}function Xh(e,t){switch(e.type){case"boolean":return"number"==typeof t?t.toString():t?"1":"0";case"string":return void 0!==t?t:e.options[0];case"number":return void 0!==t?t.toString():e.range[0].toString();default:return console.warn("unknown define type '"+e.type+"'"),"-1"}}function Kh(e,t,n,i,o){for(var a=e.builtins[i],r=[],s=function(e){var t=a.blocks[e],i=n.layouts[t.name],s=i&&n.bindings.find((function(e){return e.binding===i.binding}));if(!(i&&s&&s.descriptorType&zs))return console.warn("builtin UBO '"+t.name+"' not available!"),"continue";r.push(i),o&&!o.includes(s)&&o.push(s)},c=0;c<a.blocks.length;c++)s(c);Array.prototype.unshift.apply(t.gfxBlocks,r);for(var l=[],f=function(e){var t=a.samplerTextures[e],i=n.layouts[t.name],r=i&&n.bindings.find((function(e){return e.binding===i.binding}));if(!(i&&r&&r.descriptorType&Fs))return console.warn("builtin samplerTexture '"+t.name+"' not available!"),"continue";l.push(i),o&&!o.includes(r)&&o.push(r)},u=0;u<a.samplerTextures.length;u++)f(u);Array.prototype.unshift.apply(t.gfxSamplerTextures,l),o&&o.sort((function(e,t){return e.binding-t.binding}))}function Jh(e){return e.members.reduce((function(e,t){return e+js(t.type)*t.count}),0)}function Qh(e,t){for(var n=0;n<e.length;n++){var i=e[n];if("!"===i[0]){if(t[i.slice(1)])return!1}else if(!t[i])return!1}return!0}var Zh=function(){function e(){this._templates={},this._cache={},this._templateInfos={}}var t=e.prototype;return t.register=function(e){for(var t=0;t<e.shaders.length;t++)this.define(e.shaders[t]).effectName=e.name},t.define=function(e){var t=this._templates[e.name];if(t&&t.hash===e.hash)return t;for(var n=fe({},e),i=0,o=function(e){var t=n.defines[e],o=1;if("number"===t.type){var a=t.range;o=Yh(a[1]-a[0]+1),t._map=function(e){return e-a[0]}}else"string"===t.type?(o=Yh(t.options.length),t._map=function(e){return Math.max(0,t.options.findIndex((function(t){return t===e})))}):"boolean"===t.type&&(t._map=function(e){return e?1:0});t._offset=i,i+=o},a=0;a<n.defines.length;a++)o(a);for(var r in i>31&&(n.uber=!0),n.constantMacros="",n.builtins.statistics)n.constantMacros+="#define "+r+" "+n.builtins.statistics[r]+"\n";if(this._templates[e.name]=n,!this._templateInfos[n.hash]){var s={};s.samplerStartBinding=n.blocks.length,s.gfxBlocks=[],s.gfxSamplerTextures=[],s.bindings=[],s.blockSizes=[];for(var c=0;c<n.blocks.length;c++){var l=n.blocks[c];s.blockSizes.push(Jh(l)),s.bindings.push(new Ss(l.binding,l.descriptorType||wr.UNIFORM_BUFFER,1,l.stageFlags)),s.gfxBlocks.push(new os(mf.MATERIAL,l.binding,l.name,l.members.map((function(e){return new is(e.name,e.type,e.count)})),1))}for(var f=0;f<n.samplerTextures.length;f++){var u=n.samplerTextures[f];s.bindings.push(new Ss(u.binding,u.descriptorType||wr.SAMPLER_TEXTURE,u.count,u.stageFlags)),s.gfxSamplerTextures.push(new as(mf.MATERIAL,u.binding,u.name,u.type,u.count))}s.gfxAttributes=[];for(var _=0;_<n.attributes.length;_++){var m=n.attributes[_];s.gfxAttributes.push(new _s(m.name,m.format,m.isNormalized,0,m.isInstanced,m.location))}Kh(n,s,lf,"locals"),s.gfxStages=[],s.gfxStages.push(new us(vr.VERTEX,"")),s.gfxStages.push(new us(vr.FRAGMENT,"")),s.handleMap=function(e){for(var t={},n=0;n<e.blocks.length;n++)for(var i=e.blocks[n],o=i.members,a=0,r=0;r<o.length;r++){var s=o[r];t[s.name]=zh(bh.BUFFER,mf.MATERIAL,i.binding,s.type,a),a+=(js(s.type)>>2)*s.count}for(var c=0;c<e.samplerTextures.length;c++){var l=e.samplerTextures[c];t[l.name]=zh(bh.TEXTURE,mf.MATERIAL,l.binding,l.type)}return t}(n),s.hPipelineLayout=Co,s.setLayouts=[],this._templateInfos[n.hash]=s}return n},t.getTemplate=function(e){return this._templates[e]},t.getTemplateInfo=function(e){var t=this._templates[e].hash;return this._templateInfos[t]},t.getDescriptorSetLayout=function(e,t,n){void 0===n&&(n=!1);var i=this._templates[t],o=this._templateInfos[i.hash];return o.setLayouts.length||(qh.bindings=o.bindings,o.setLayouts[mf.MATERIAL]=e.createDescriptorSetLayout(qh),qh.bindings=lf.bindings,o.setLayouts[mf.LOCAL]=e.createDescriptorSetLayout(qh)),o.setLayouts[n?mf.LOCAL:mf.MATERIAL]},t.hasProgram=function(e){return void 0!==this._templates[e]},t.getKey=function(e,t){var n=this._templates[e],i=n.defines;if(n.uber){for(var o="",a=0;a<i.length;a++){var r=i[a],s=t[r.name];if(s&&r._map){var c=r._map(s);o+=""+r._offset+c+"|"}}return""+o+n.hash}for(var l=0,f=0;f<i.length;f++){var u=i[f],_=t[u.name];_&&u._map&&(l|=u._map(_)<<u._offset)}return l.toString(16)+"|"+n.hash},t.destroyShaderByDefines=function(e){var t=this,n=Object.keys(e);if(n.length)for(var i=n.map((function(t){var n=e[t];return"boolean"==typeof n&&(n=n?"1":"0"),new RegExp(""+t+n)})),o=Object.keys(this._cache).filter((function(e){return i.every((function(n){return n.test(To.get(t._cache[e]).name)}))})),a=0;a<o.length;a++){var r=o[a],s=To.get(this._cache[r]);console.log("destroyed shader "+s.name),s.destroy(),delete this._cache[r]}},t.getGFXShader=function(e,t,n,i,o){Object.assign(n,i.macros),o||(o=this.getKey(t,n));var a=this._cache[o];if(a)return a;var r=this._templates[t],s=this._templateInfos[r.hash];s.hPipelineLayout||(this.getDescriptorSetLayout(e,t),Kh(r,s,cf,"globals"),s.setLayouts[mf.GLOBAL]=i.descriptorSetLayout,s.hPipelineLayout=Po.alloc(e,new Ts(s.setLayouts)));var c=function(e,t){for(var n=[],i=0;i<t.length;i++){var o=t[i],a=o.name,r=e[a],s=Xh(o,r),c=!r||"0"===r;n.push({name:a,value:s,isDefault:c})}return n}(n,r.defines),l=i.constantMacros+r.constantMacros+c.reduce((function(e,t){return e+"#define "+t.name+" "+t.value+"\n"}),""),f=r.glsl3,u=$h(e);u?f=r[u]:console.error("Invalid GFX API!"),s.gfxStages[0].source=l+f.vert,s.gfxStages[1].source=l+f.frag;var _=function(e,t,n){for(var i=[],o=e.attributes,a=t.gfxAttributes,r=0;r<o.length;r++)Qh(o[r].defines,n)&&i.push(a[r]);return i}(r,s,n),m=function(e,t){return e+t.reduce((function(e,t){return t.isDefault?e:e+"|"+t.name+t.value}),"")}(t,c),h=new ms(m,s.gfxStages,_,s.gfxBlocks);return h.samplerTextures=s.gfxSamplerTextures,this._cache[o]=To.alloc(e,h)},e}();function $h(e){switch(e.gfxAPI){case Ja.GLES2:case Ja.WEBGL:return"glsl1";case Ja.GLES3:case Ja.WEBGL2:return"glsl3";default:return"glsl4"}}var ed=e("bN",new Zh);s.programLib=ed;var td,nd,id,od={glsl1:[[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp mat4 cc_matWorld;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nvoid rotateCorner (inout vec2 corner, float angle){\nfloat xOS = cos(angle) * corner.x - sin(angle) * corner.y;\nfloat yOS = sin(angle) * corner.x + cos(angle) * corner.y;\ncorner.x = xOS;\ncorner.y = yOS;\n}\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n, mat4 viewInv\n) {\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n}\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nuniform vec4 cc_size_rotation;\nvec4 vs_main() {\nvec4 pos = vec4(a_position, 1);\npos = cc_matWorld * pos;\nvec2 vertOffset = a_texCoord.xy - 0.5;\ncomputeVertPos(pos, vertOffset, quaternionFromEuler(vec3(0., 0., cc_size_rotation.z)), vec3(cc_size_rotation.xy, 0.), cc_matViewInv);\npos = cc_matViewProj * pos;\nuv = a_texCoord.xy;\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nattribute vec3 a_position;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 frag () {\nvec4 o = vec4(1.0);\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\nuniform highp mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute float a_dist;\nvarying float v_dist;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\npos = cc_matViewProj * cc_matWorld * pos;\nv_color = a_color;\nv_dist = a_dist;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives: enable\n#endif\nprecision highp float;\nvarying vec4 v_color;\nvarying float v_dist;\nvec4 frag () {\nvec4 o = v_color;\n#ifdef GL_OES_standard_derivatives\nfloat aa = fwidth(v_dist);\n#else\nfloat aa = 0.05;\n#endif\nfloat alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\no.rgb *= o.a;\no *= alpha;\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nvoid rotateCorner (inout vec2 corner, float angle){\nfloat xOS = cos(angle) * corner.x - sin(angle) * corner.y;\nfloat yOS = sin(angle) * corner.x + cos(angle) * corner.y;\ncorner.x = xOS;\ncorner.y = yOS;\n}\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\nrotateCorner(viewSpaceVert, q.z);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nuniform vec4 u_sampleInfo;\nuniform vec4 u_worldRot;\nuniform vec4 u_timeDelta;\nattribute vec4 a_position_starttime;\nattribute vec4 a_size_uv;\nattribute vec4 a_rotation_uv;\nattribute vec4 a_color;\nattribute vec4 a_dir_life;\nattribute float a_rndSeed;\n#if CC_RENDER_MODE == 4\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord3;\nattribute vec3 a_normal;\nattribute vec4 a_color1;\n#endif\nvec3 unpackCurveData (sampler2D tex, vec2 coord) {\nvec4 a = texture2D(tex, coord);\nvec4 b = texture2D(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nreturn mix(a.xyz, b.xyz, c);\n}\nvec3 unpackCurveData (sampler2D tex, vec2 coord, out float w) {\nvec4 a = texture2D(tex, coord);\nvec4 b = texture2D(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nw = mix(a.w, b.w, c);\nreturn mix(a.xyz, b.xyz, c);\n}\nfloat pseudoRandom (float seed) {\nseed = mod(seed, 233280.);\nfloat q = (seed * 9301. + 49297.) / 233280.;\nreturn fract(q);\n}\n#if COLOR_OVER_TIME_MODULE_ENABLE\nuniform sampler2D color_over_time_tex0;\nuniform int u_color_mode;\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nuniform sampler2D rotation_over_time_tex0;\nuniform int u_rotation_mode;\n#endif\n#if SIZE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D size_over_time_tex0;\nuniform int u_size_mode;\n#endif\n#if FORCE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D force_over_time_tex0;\nuniform int u_force_mode;\nuniform int u_force_space;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nuniform sampler2D velocity_over_time_tex0;\nuniform int u_velocity_mode;\nuniform int u_velocity_space;\n#endif\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nuniform sampler2D texture_animation_tex0;\nuniform vec4 u_anim_info;\n#endif\nfloat repeat (float t, float length) {\nreturn t - floor(t / length) * length;\n}\nvec4 rotateQuat (vec4 p, vec4 q) {\nvec3 iv = cross(q.xyz, p.xyz) + q.w * p.xyz;\nvec3 res = p.xyz + 2.0 * cross(q.xyz, iv);\nreturn vec4(res.xyz, p.w);\n}\nvec4 gpvs_main () {\nfloat activeTime = u_timeDelta.x - a_position_starttime.w;\nfloat normalizedTime = clamp(activeTime / a_dir_life.w, 0.0, 1.0);\nvec2 timeCoord0 = vec2(normalizedTime, 0.);\nvec2 timeCoord1 = vec2(normalizedTime, 1.);\n#if CC_RENDER_MODE == 4\nvec2 vertIdx = vec2(a_texCoord.x, a_texCoord.y);\n#else\nvec2 vertIdx = vec2(a_size_uv.w, a_rotation_uv.w);\n#endif\nvec4 velocity = vec4(a_dir_life.xyz, 0.);\nvec4 pos = vec4(a_position_starttime.xyz, 1.);\nvec3 size = a_size_uv.xyz;\n#if SIZE_OVER_TIME_MODULE_ENABLE\nif (u_size_mode == 1) {\nsize *= unpackCurveData(size_over_time_tex0, timeCoord0);\n} else {\nvec3 size_0 = unpackCurveData(size_over_time_tex0, timeCoord0);\nvec3 size_1 = unpackCurveData(size_over_time_tex0, timeCoord1);\nfloat factor_s = pseudoRandom(a_rndSeed + 39825.);\nsize *= mix(size_0, size_1, factor_s);\n}\n#endif\nvec3 compScale = scale.xyz * size;\n#if FORCE_OVER_TIME_MODULE_ENABLE\nvec3 forceAnim = vec3(0.);\nif (u_force_mode == 1) {\nforceAnim = unpackCurveData(force_over_time_tex0, timeCoord0);\n} else {\nvec3 force_0 = unpackCurveData(force_over_time_tex0, timeCoord0);\nvec3 force_1 = unpackCurveData(force_over_time_tex0, timeCoord1);\nfloat factor_f =  pseudoRandom(a_rndSeed + 212165.);\nforceAnim = mix(force_0, force_1, factor_f);\n}\nvec4 forceTrack = vec4(forceAnim, 0.);\nif (u_force_space == 0) {\nforceTrack = rotateQuat(forceTrack, u_worldRot);\n}\nvelocity.xyz += forceTrack.xyz;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nfloat speedModifier0 = 1.;\nfloat speedModifier1 = 1.;\nvec3 velocityAnim = vec3(0.);\nif (u_velocity_mode == 1) {\nvelocityAnim = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\n} else {\nvec3 vectory_0 = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\nvec3 vectory_1 = unpackCurveData(velocity_over_time_tex0, timeCoord1, speedModifier1);\nfloat factor_v = pseudoRandom(a_rndSeed + 197866.);\nvelocityAnim = mix(vectory_0, vectory_1, factor_v);\nspeedModifier0 = mix(speedModifier0, speedModifier1, factor_v);\n}\nvec4 velocityTrack = vec4(velocityAnim, 0.);\nif (u_velocity_space == 0) {\nvelocityTrack = rotateQuat(velocityTrack, u_worldRot);\n}\nvelocity.xyz += velocityTrack.xyz;\nvelocity.xyz *= speedModifier0;\n#endif\npos.xyz += velocity.xyz * normalizedTime * a_dir_life.w;\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = rotateQuat(velocity, u_worldRot);\n#endif\n#endif\nvec3 rotation = a_rotation_uv.xyz;\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nif (u_rotation_mode == 1) {\nrotation += unpackCurveData(rotation_over_time_tex0, timeCoord0) * normalizedTime * a_dir_life.w;\n} else {\nvec3 rotation_0 = unpackCurveData(rotation_over_time_tex0, timeCoord0);\nvec3 rotation_1 = unpackCurveData(rotation_over_time_tex0, timeCoord1);\nfloat factor_r = pseudoRandom(a_rndSeed + 125292.);\nrotation += mix(rotation_0, rotation_1, factor_r) * normalizedTime * a_dir_life.w;\n}\n#endif\n#if COLOR_OVER_TIME_MODULE_ENABLE\nif (u_color_mode == 1) {\ncolor = a_color * texture2D(color_over_time_tex0, timeCoord0);\n} else {\nvec4 color_0 = texture2D(color_over_time_tex0, timeCoord0);\nvec4 color_1 = texture2D(color_over_time_tex0, timeCoord1);\nfloat factor_c = pseudoRandom(a_rndSeed + 91041.);\ncolor = a_color * mix(color_0, color_1, factor_c);\n}\n#else\ncolor = a_color;\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((vertIdx - 0.5));\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = rotation.xyz;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., rotation.z);\n#endif\ncomputeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, cc_matViewInv\n#endif\n#if CC_RENDER_MODE == 1\n, cc_cameraPos.xyz\n, velocity\n, frameTile_velLenScale.z\n, frameTile_velLenScale.w\n, a_size_uv.w\n#endif\n);\n#else\nmat4 xformNoScale = matrixFromRT(quaternionFromEuler(rotation), pos.xyz);\nmat4 xform = matFromRTS(quaternionFromEuler(rotation), pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor *= a_color1;\n#endif\npos = cc_matViewProj * pos;\nfloat frameIndex = 0.;\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nfloat startFrame = 0.;\nvec3 frameInfo = vec3(0.);\nif (int(u_anim_info.x) == 1) {\nframeInfo = unpackCurveData(texture_animation_tex0, timeCoord0);\n} else {\nvec3 frameInfo0 = unpackCurveData(texture_animation_tex0, timeCoord0);\nvec3 frameInfo1 = unpackCurveData(texture_animation_tex0, timeCoord1);\nfloat factor_t = pseudoRandom(a_rndSeed + 90794.);\nframeInfo = mix(frameInfo0, frameInfo1, factor_t);\n}\nstartFrame = frameInfo.x / u_anim_info.y;\nframeIndex = repeat(u_anim_info.z * (frameInfo.y + startFrame), 1.);\n#endif\nuv = computeUV(frameIndex, vertIdx, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\nreturn pos;\n}\nvoid main() { gl_Position = gpvs_main(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision mediump float;\nuniform vec4 mainTiling_Offset;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nattribute vec3 a_position;\nattribute vec4 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\nvarying vec3 vBarycentric;\n#endif\nvec4 vs_main() {\nhighp vec4 pos = vec4(a_position, 1);\nvec4 velocity = vec4(a_texCoord1.xyz, 0);\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\nvelocity = cc_matWorld * velocity;\n#endif\nfloat vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\nvec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\npos.xyz += camUp * vertOffset;\npos = cc_matViewProj * pos;\nuv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\ncolor = a_color;\n#if CC_DRAW_WIRE_FRAME\nvBarycentric = a_texCoord2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\n#if CC_DRAW_WIRE_FRAME\nvarying vec3 vBarycentric;\n#endif\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\nif (any(lessThan(vBarycentric, vec3(0.02)))) {\ncol = vec4(0., 1., 1., 1.);\n}\n#endif\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nvoid rotateCorner (inout vec2 corner, float angle){\nfloat xOS = cos(angle) * corner.x - sin(angle) * corner.y;\nfloat yOS = sin(angle) * corner.x + cos(angle) * corner.y;\ncorner.x = xOS;\ncorner.y = yOS;\n}\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\nrotateCorner(viewSpaceVert, q.z);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_RENDER_MODE == 1\nattribute vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\nattribute vec3 a_texCoord3;\nattribute vec3 a_normal;\nattribute vec4 a_color1;\n#endif\nvec4 lpvs_main () {\nvec3 compScale = scale.xyz * a_texCoord1;\nvec4 pos = vec4(a_position, 1);\n#if CC_RENDER_MODE == 1\nvec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = cc_matWorld * velocity;\n#endif\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = a_texCoord2;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n#endif\ncomputeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, cc_matViewInv\n#endif\n#if CC_RENDER_MODE == 1\n, cc_cameraPos.xyz\n, velocity\n, frameTile_velLenScale.z\n, frameTile_velLenScale.w\n, a_texCoord.x\n#endif\n);\ncolor = a_color;\n#else\nmat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\nmat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor = a_color * a_color1;\n#endif\nuv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\npos = cc_matViewProj * pos;\nreturn pos;\n}\nvoid main() { gl_Position = lpvs_main(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\n#if USE_LOCAL\nuniform highp mat4 cc_matWorld;\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 v_light;\nvarying vec2 uv0;\n#if TWO_COLORED\nattribute vec4 a_color2;\nvarying vec4 v_dark;\n#endif\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\npos = cc_matViewProj * pos;\nuv0 = a_texCoord;\nv_light = a_color;\n#if TWO_COLORED\nv_dark = a_color2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\n#if USE_ALPHA_TEST\nuniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nvarying vec4 v_light;\n#if TWO_COLORED\nvarying vec4 v_dark;\n#endif\nvarying vec2 uv0;\nuniform sampler2D cc_spriteTexture;\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if TWO_COLORED\nvec4 texColor = vec4(1, 1, 1, 1);\ntexColor *= texture2D(cc_spriteTexture, uv0);\no.a = texColor.a * v_light.a;\no.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n#else\no *= texture2D(cc_spriteTexture, uv0);\no *= v_light;\n#endif\nALPHA_TEST(o);\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\n#if USE_LOCAL\nuniform highp mat4 cc_matWorld;\n#endif\n#if SAMPLE_FROM_RT\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\n#if USE_PIXEL_ALIGNMENT\npos = cc_matView * pos;\npos.xyz = floor(pos.xyz);\npos = cc_matProj * pos;\n#else\npos = cc_matViewProj * pos;\n#endif\nuv0 = a_texCoord;\n#if SAMPLE_FROM_RT\nuv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n#endif\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\nreturn vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\nreturn texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\nuniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nvarying vec4 color;\n#if USE_TEXTURE\nvarying vec2 uv0;\nuniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if USE_TEXTURE\no *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n#if IS_GRAY\nfloat gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\no.r = o.g = o.b = gray;\n#endif\n#endif\no *= color;\nALPHA_TEST(o);\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\n#if USE_INSTANCING\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matWorldIT;\nuniform highp vec4 cc_lightingMapUVParam;\n#endif\nuniform vec4 tilingOffset;\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvarying float v_fog_factor;\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\nattribute vec4 a_color;\nvarying vec4 v_color;\n#endif\nvarying vec3 v_position;\nvarying vec3 v_normal;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\n#if USE_NORMAL_MAP\nvarying vec3 v_tangent;\nvarying vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\nattribute vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvarying vec3 v_luv;\nvoid CCLightingMapCaclUV()\n{\n#if !USE_INSTANCING\nv_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\nv_luv.z = cc_lightingMapUVParam.z;\n#else\nv_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\nv_luv.z = a_lightingMapUVParam.z;\n#endif\n}\n#endif\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nvec4 pos = matWorld * In.position;\nv_position = pos.xyz;\nv_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n#if USE_NORMAL_MAP\nv_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\nv_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n#endif\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\n#if CC_USE_FOG == 0\nv_fog_factor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nv_fog_factor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nv_fog_factor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nv_fog_factor = LayeredFog(pos);\n#else\nv_fog_factor = 1.0;\n#endif\nv_shadowPos = cc_matLightViewProj * pos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nCCLightingMapCaclUV();\n#endif\ngl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}",frag:"\n#ifdef GL_EXT_draw_buffers\n#extension GL_EXT_draw_buffers: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_exposure;\nuniform mediump vec4 cc_mainLitDir;\nuniform mediump vec4 cc_mainLitColor;\nuniform mediump vec4 cc_ambientSky;\nuniform mediump vec4 cc_ambientGround;\nuniform mediump vec4 cc_fogColor;\nuniform vec4 albedo;\nuniform vec4 albedoScaleAndCutoff;\nuniform vec4 pbrParams;\nuniform vec4 emissive;\nuniform vec4 emissiveScaleParam;\nvarying float v_fog_factor;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\nuniform lowp vec4 cc_shadowNFLSInfo;\nuniform lowp vec4 cc_shadowWHPBInfo;\nuniform lowp vec4 cc_shadowLPNNInfo;\nuniform lowp vec4 cc_shadowColor;\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\nfloat CCGetLinearDepth (vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nfloat dist = length(viewStartPos.xyz);\nreturn cc_shadowNFLSInfo.x + (-dist / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x));\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n} else {\nclosestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(closestDepth, clipPos.z- cc_shadowWHPBInfo.w);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z - cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock1 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock2 = step(dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock3 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\n} else {\nblock0 = step(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x, offsetDepth);\nblock1 = step(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x, offsetDepth);\nblock2 = step(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x, offsetDepth);\nblock3 = step(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x, offsetDepth);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat bias = cc_shadowWHPBInfo.w;\nfloat offsetDepth = clipPos.z - bias;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock1 = step(dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock2 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock3 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock4 = step(dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock5 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock6 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock7 = step(dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock8 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\n} else {\nblock0 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x, offsetDepth);\nblock1 = step(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x, offsetDepth);\nblock2 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x, offsetDepth);\nblock3 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x, offsetDepth);\nblock4 = step(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x, offsetDepth);\nblock5 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x, offsetDepth);\nblock6 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x, offsetDepth);\nblock7 = step(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x, offsetDepth);\nblock8 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x, offsetDepth);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = 0.0;\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n} else {\nclosestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(closestDepth, depth - cc_shadowWHPBInfo.w);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat offsetx = 1.0 / cc_shadowWHPBInfo.x;\nfloat offsety = 1.0 / cc_shadowWHPBInfo.y;\nfloat shadow = 0.0;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nfloat closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n} else {\nfloat closestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\nreturn shadow / 5.0;\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat offsetx = 1.0 / cc_shadowWHPBInfo.x;\nfloat offsety = 1.0 / cc_shadowWHPBInfo.y;\nfloat shadow = 0.0;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nfor (int i = -1; i <= 1; i++) {\nfor (int j = -1; j <= 1; j++) {\nfloat closestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\n}\n} else {\nfor (int i = -1; i <= 1; i++) {\nfor (int j = -1; j <= 1; j++) {\nfloat closestDepth = texture2D(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\n}\n}\nreturn shadow / 9.0;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n}\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DLodEXT(tex, coord, lod);\n#else\nreturn texture2D(tex, coord, lod);\n#endif\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn textureCubeLodEXT(tex, coord, lod);\n#else\nreturn textureCube(tex, coord, lod);\n#endif\n}\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.001);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\n#if CC_RECEIVE_SHADOW\n{\nfloat pcf = cc_shadowWHPBInfo.z + 0.001;\nfloat shadowAttenuation = 0.0;\nfloat cosAngle = clamp(1.0 - dot(N, L.xyz), 0.0, 1.0);\nvec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\nvec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\nif (pcf > 2.0) shadowAttenuation = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 1.0) shadowAttenuation = CCGetShadowFactorSoft(pos);\nelse shadowAttenuation = CCGetShadowFactorHard(pos);\nvec3 shadowColor = cc_shadowColor.rgb * cc_shadowColor.a + dirlightContrib.rgb * (1.0 - cc_shadowColor.a);\nif (cc_shadowNFLSInfo.w > 0.000001) {\ndirlightContrib.rgb = shadowColor.rgb * shadowAttenuation + dirlightContrib.rgb * (1.0 - shadowAttenuation);\n} else {\ndirlightContrib.rgb = shadowColor.rgb * shadowAttenuation * NL + dirlightContrib.rgb * (1.0 - shadowAttenuation * NL);\n}\n}\n#endif\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\nfinalColor += (ambDiff.rgb * diffuse);\n#if CC_USE_IBL\nvec3 R = normalize(reflect(-V, N));\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\nfinalColor += env * cc_ambientSky.w * specular;\n#endif\nfinalColor = finalColor * s.occlusion;\n#if CC_USE_HDR\ns.emissive *= cc_exposure.w;\n#endif\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if !CC_USE_HDR\ncolor.rgb = sqrt(ACESToneMap(color.rgb));\n#endif\nreturn color;\n}\nvarying highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvarying vec3 v_luv;\nuniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nvarying vec3 v_position;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec3 v_normal;\n#if USE_VERTEX_COLOR\nvarying vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\nvarying vec3 v_tangent;\nvarying vec3 v_bitangent;\nuniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\nuniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nuniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\nuniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\nuniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\nvec4 baseColor = albedo;\n#if USE_VERTEX_COLOR\nbaseColor *= v_color;\n#endif\n#if USE_ALBEDO_MAP\nvec4 texColor = texture2D(albedoMap, ALBEDO_UV);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\nbaseColor *= texColor;\n#endif\ns.albedo = baseColor;\ns.albedo.rgb *= albedoScaleAndCutoff.xyz;\n#if USE_ALPHA_TEST\nif (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture2D(cc_lightingMap, v_luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = v_luv.z;\n#endif\ns.normal = v_normal;\n#if USE_NORMAL_MAP\nvec3 nmmp = texture2D(normalMap, NORMAL_UV).xyz - vec3(0.5);\ns.normal =\n(nmmp.x * pbrParams.w) * normalize(v_tangent) +\n(nmmp.y * pbrParams.w) * normalize(v_bitangent) +\nnmmp.z * normalize(s.normal);\n#endif\ns.position = v_position;\nvec4 pbr = pbrParams;\n#if USE_PBR_MAP\nvec4 res = texture2D(pbrMap, PBR_UV);\npbr.x *= res.r;\npbr.y *= res.g;\npbr.z *= res.b;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nvec4 metallicRoughness = texture2D(metallicRoughnessMap, PBR_UV);\npbr.z *= metallicRoughness.b;\npbr.y *= metallicRoughness.g;\n#endif\n#if USE_OCCLUSION_MAP\npbr.x *= texture2D(occlusionMap, PBR_UV).r;\n#endif\ns.occlusion = clamp(pbr.x, 0.0, 0.96);\ns.roughness = clamp(pbr.y, 0.04, 1.0);\ns.metallic = pbr.z;\ns.emissive = emissive.rgb * emissiveScaleParam.xyz;\n#if USE_EMISSIVE_MAP\ns.emissive *= SRGBToLinear(texture2D(emissiveMap, EMISSIVE_UV).rgb);\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\nuniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\nuniform vec4 cc_lightColor[LIGHTS_PER_PASS];\nuniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nuniform vec4 cc_lightDir[LIGHTS_PER_PASS];\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z + 0.001;\nfloat shadowAttenuation = 0.0;\nfloat cosAngle = clamp(1.0 - dot(N, normalize(cc_lightPos[i].xyz - s.position.xyz)), 0.0, 1.0);\nvec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\nvec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\nif (pcf > 2.0) shadowAttenuation = CCGetSpotLightShadowFactorSoft2X(pos, s.position);\nelse if (pcf > 1.0) shadowAttenuation = CCGetSpotLightShadowFactorSoft(pos, s.position);\nelse shadowAttenuation = CCGetSpotLightShadowFactorHard(pos, s.position);\nlightColor *= 1.0 - shadowAttenuation;\n}\n}\n#endif\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nfinalColor = finalColor * s.occlusion;\nreturn vec4(finalColor, 0.0);\n}\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 0\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvoid main () {\nStandardSurface s; surf(s);\ngl_FragData[0] = s.albedo;\ngl_FragData[1] = vec4(s.position, s.roughness);\ngl_FragData[2] = vec4(s.normal, s.metallic);\ngl_FragData[3] = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\n#if USE_INSTANCING\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matWorldIT;\n#endif\nuniform vec4 tilingOffset;\nuniform highp mat4 cc_matLightViewProj;\n#if HAS_SECOND_UV || USE_LIGHTMAP\nattribute vec2 a_texCoord1;\n#endif\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\nvec4 vert () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nv_worldPos = matWorld * In.position;\nvec4 clipPos = cc_matLightViewProj * v_worldPos;\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#endif\nv_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nuniform vec4 albedo;\nuniform vec4 albedoScaleAndCutoff;\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 160581375.0) * depth;\nret = fract(ret);\nret -= ret.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\nreturn ret;\n}\nuniform highp mat4 cc_matLightView;\nuniform lowp vec4 cc_shadowNFLSInfo;\nuniform lowp vec4 cc_shadowLPNNInfo;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\nvec4 baseColor = albedo;\n#if USE_ALBEDO_MAP\nbaseColor *= texture2D(albedoMap, ALBEDO_UV);\n#endif\n#if USE_ALPHA_TEST\nif (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\nif(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\nif (cc_shadowNFLSInfo.z > 0.000001) {\nvec4 viewStartPos = cc_matLightView * v_worldPos;\nfloat dist = length(viewStartPos.xyz);\nfloat linearDepth = cc_shadowNFLSInfo.x + (-dist / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x));\nreturn vec4(linearDepth, 1.0, 1.0, 1.0);\n}\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nreturn packDepthToRGBA(v_clip_depth);\n}\nreturn vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nuniform highp mat4 cc_matWorld;\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvarying float v_fog_factor;\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\n#endif\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nvarying highp vec3 v_position;\nvarying mediump vec3 v_normal;\n#if USE_NORMALMAP\nvarying mediump vec3 v_tangent;\nvarying mediump vec3 v_binormal;\n#endif\nvarying mediump vec2 uvw;\nvarying mediump vec2 uv0;\nvarying mediump vec2 uv1;\nvarying mediump vec2 uv2;\nvarying mediump vec2 uv3;\nvarying mediump vec3 luv;\nvarying mediump vec3 diffuse;\nuniform vec4 UVScale;\nuniform vec4 lightMapUVParam;\nvoid main () {\nvec3 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nvec4 pos = vec4(worldPos, 1.0);\npos = cc_matViewProj * pos;\nuvw = a_texCoord;\nuv0 = a_position.xz * UVScale.x;\nuv1 = a_position.xz * UVScale.y;\nuv2 = a_position.xz * UVScale.z;\nuv3 = a_position.xz * UVScale.w;\n#if USE_LIGHTMAP\nluv.xy = lightMapUVParam.xy + a_texCoord * lightMapUVParam.zw;\nluv.z = lightMapUVParam.z;\n#endif\nv_position = worldPos;\nv_normal = a_normal;\n#if CC_USE_FOG == 0\nv_fog_factor = LinearFog(vec4(worldPos, 1.0));\n#elif CC_USE_FOG == 1\nv_fog_factor = ExpFog(vec4(worldPos, 1.0));\n#elif CC_USE_FOG == 2\nv_fog_factor = ExpSquaredFog(vec4(worldPos, 1.0));\n#elif CC_USE_FOG == 3\nv_fog_factor = LayeredFog(vec4(worldPos, 1.0));\n#else\nv_fog_factor = 1.0;\n#endif\n#if USE_NORMALMAP\nv_tangent = vec3(1.0, 0.0, 0.0);\nv_binormal = vec3(0.0, 0.0, 1.0);\nv_binormal = cross(v_tangent, a_normal);\nv_tangent = cross(a_normal, v_binormal);\n#endif\nv_shadowPos = cc_matLightViewProj * vec4(worldPos, 1.0);\ngl_Position = pos;\n}",frag:"\n#ifdef GL_EXT_draw_buffers\n#extension GL_EXT_draw_buffers: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_exposure;\nuniform mediump vec4 cc_mainLitDir;\nuniform mediump vec4 cc_mainLitColor;\nuniform mediump vec4 cc_ambientSky;\nuniform mediump vec4 cc_ambientGround;\nuniform mediump vec4 cc_fogColor;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\nuniform lowp vec4 cc_shadowNFLSInfo;\nuniform lowp vec4 cc_shadowWHPBInfo;\nuniform lowp vec4 cc_shadowLPNNInfo;\nuniform lowp vec4 cc_shadowColor;\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\nfloat CCGetLinearDepth (vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nfloat dist = length(viewStartPos.xyz);\nreturn cc_shadowNFLSInfo.x + (-dist / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x));\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n} else {\nclosestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(closestDepth, clipPos.z- cc_shadowWHPBInfo.w);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z - cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock1 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock2 = step(dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock3 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\n} else {\nblock0 = step(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x, offsetDepth);\nblock1 = step(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x, offsetDepth);\nblock2 = step(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x, offsetDepth);\nblock3 = step(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x, offsetDepth);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat bias = cc_shadowWHPBInfo.w;\nfloat offsetDepth = clipPos.z - bias;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock1 = step(dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock2 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock3 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock4 = step(dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock5 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock6 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock7 = step(dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock8 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\n} else {\nblock0 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x, offsetDepth);\nblock1 = step(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x, offsetDepth);\nblock2 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x, offsetDepth);\nblock3 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x, offsetDepth);\nblock4 = step(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x, offsetDepth);\nblock5 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x, offsetDepth);\nblock6 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x, offsetDepth);\nblock7 = step(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x, offsetDepth);\nblock8 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x, offsetDepth);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = 0.0;\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n} else {\nclosestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(closestDepth, depth - cc_shadowWHPBInfo.w);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat offsetx = 1.0 / cc_shadowWHPBInfo.x;\nfloat offsety = 1.0 / cc_shadowWHPBInfo.y;\nfloat shadow = 0.0;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nfloat closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n} else {\nfloat closestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\nreturn shadow / 5.0;\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat offsetx = 1.0 / cc_shadowWHPBInfo.x;\nfloat offsety = 1.0 / cc_shadowWHPBInfo.y;\nfloat shadow = 0.0;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nfor (int i = -1; i <= 1; i++) {\nfor (int j = -1; j <= 1; j++) {\nfloat closestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\n}\n} else {\nfor (int i = -1; i <= 1; i++) {\nfor (int j = -1; j <= 1; j++) {\nfloat closestDepth = texture2D(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\n}\n}\nreturn shadow / 9.0;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n}\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DLodEXT(tex, coord, lod);\n#else\nreturn texture2D(tex, coord, lod);\n#endif\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn textureCubeLodEXT(tex, coord, lod);\n#else\nreturn textureCube(tex, coord, lod);\n#endif\n}\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.001);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\n#if CC_RECEIVE_SHADOW\n{\nfloat pcf = cc_shadowWHPBInfo.z + 0.001;\nfloat shadowAttenuation = 0.0;\nfloat cosAngle = clamp(1.0 - dot(N, L.xyz), 0.0, 1.0);\nvec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\nvec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\nif (pcf > 2.0) shadowAttenuation = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 1.0) shadowAttenuation = CCGetShadowFactorSoft(pos);\nelse shadowAttenuation = CCGetShadowFactorHard(pos);\nvec3 shadowColor = cc_shadowColor.rgb * cc_shadowColor.a + dirlightContrib.rgb * (1.0 - cc_shadowColor.a);\nif (cc_shadowNFLSInfo.w > 0.000001) {\ndirlightContrib.rgb = shadowColor.rgb * shadowAttenuation + dirlightContrib.rgb * (1.0 - shadowAttenuation);\n} else {\ndirlightContrib.rgb = shadowColor.rgb * shadowAttenuation * NL + dirlightContrib.rgb * (1.0 - shadowAttenuation * NL);\n}\n}\n#endif\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\nfinalColor += (ambDiff.rgb * diffuse);\n#if CC_USE_IBL\nvec3 R = normalize(reflect(-V, N));\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\nfinalColor += env * cc_ambientSky.w * specular;\n#endif\nfinalColor = finalColor * s.occlusion;\n#if CC_USE_HDR\ns.emissive *= cc_exposure.w;\n#endif\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if !CC_USE_HDR\ncolor.rgb = sqrt(ACESToneMap(color.rgb));\n#endif\nreturn color;\n}\nvarying float v_fog_factor;\nvarying highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvarying vec3 v_luv;\nuniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nvarying highp vec3 v_position;\nvarying mediump vec3 v_normal;\n#if USE_NORMALMAP\nvarying mediump vec3 v_tangent;\nvarying mediump vec3 v_binormal;\n#endif\nvarying mediump vec2 uvw;\nvarying mediump vec2 uv0;\nvarying mediump vec2 uv1;\nvarying mediump vec2 uv2;\nvarying mediump vec2 uv3;\nvarying mediump vec3 diffuse;\nvarying mediump vec3 luv;\nuniform vec4 metallic;\nuniform vec4 roughness;\nuniform sampler2D weightMap;\nuniform sampler2D detailMap0;\nuniform sampler2D detailMap1;\nuniform sampler2D detailMap2;\nuniform sampler2D detailMap3;\nuniform sampler2D normalMap0;\nuniform sampler2D normalMap1;\nuniform sampler2D normalMap2;\nuniform sampler2D normalMap3;\nuniform sampler2D lightMap;\nvoid surf (out StandardSurface s) {\n#if LAYERS > 1\nvec4 w = texture2D(weightMap, uvw);\n#endif\nvec4 baseColor = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseColor = texture2D(detailMap0, uv0);\n#elif LAYERS == 2\nbaseColor += texture2D(detailMap0, uv0) * w.r;\nbaseColor += texture2D(detailMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseColor += texture2D(detailMap0, uv0) * w.r;\nbaseColor += texture2D(detailMap1, uv1) * w.g;\nbaseColor += texture2D(detailMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseColor += texture2D(detailMap0, uv0) * w.r;\nbaseColor += texture2D(detailMap1, uv1) * w.g;\nbaseColor += texture2D(detailMap2, uv2) * w.b;\nbaseColor += texture2D(detailMap3, uv3) * w.a;\n#else\nbaseColor = texture2D(detailMap0, uv0);\n#endif\ns.position = v_position;\n#if USE_NORMALMAP\nvec4 baseNormal = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseNormal = texture2D(normalMap0, uv0);\n#elif LAYERS == 2\nbaseNormal += texture2D(normalMap0, uv0) * w.r;\nbaseNormal += texture2D(normalMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseNormal += texture2D(normalMap0, uv0) * w.r;\nbaseNormal += texture2D(normalMap1, uv1) * w.g;\nbaseNormal += texture2D(normalMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseNormal += texture2D(normalMap0, uv0) * w.r;\nbaseNormal += texture2D(normalMap1, uv1) * w.g;\nbaseNormal += texture2D(normalMap2, uv2) * w.b;\nbaseNormal += texture2D(normalMap3, uv3) * w.a;\n#else\nbaseNormal = texture2D(normalMap0, uv0);\n#endif\nvec3 nmmp = baseNormal.xyz - vec3(0.5);\ns.normal =\nnmmp.x * normalize(v_tangent) +\nnmmp.y * normalize(v_binormal) +\nnmmp.z * normalize(v_normal);\n#else\ns.normal = v_normal;\n#endif\ns.albedo = vec4(SRGBToLinear(baseColor.rgb), 1.0);\ns.occlusion = 1.0;\n#if USE_PBR\ns.roughness = 0.0;\n#if LAYERS == 1\ns.roughness = roughness.x;\n#elif LAYERS == 2\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\n#elif LAYERS == 3\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\n#elif LAYERS == 4\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\ns.roughness += roughness.w * w.a;\n#else\ns.roughness = 1.0;\n#endif\ns.metallic = 0.0;\n#if LAYERS == 1\ns.metallic = metallic.x;\n#elif LAYERS == 2\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\n#elif LAYERS == 3\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\n#elif LAYERS == 4\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\ns.metallic += metallic.w * w.a;\n#else\ns.metallic = 0.0;\n#endif\n#else\ns.roughness = 1.0;\ns.metallic = 0.0;\n#endif\ns.emissive = vec3(0.0, 0.0, 0.0);\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture2D(lightMap, luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = luv.z;\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\nuniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\nuniform vec4 cc_lightColor[LIGHTS_PER_PASS];\nuniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nuniform vec4 cc_lightDir[LIGHTS_PER_PASS];\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z + 0.001;\nfloat shadowAttenuation = 0.0;\nfloat cosAngle = clamp(1.0 - dot(N, normalize(cc_lightPos[i].xyz - s.position.xyz)), 0.0, 1.0);\nvec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\nvec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\nif (pcf > 2.0) shadowAttenuation = CCGetSpotLightShadowFactorSoft2X(pos, s.position);\nelse if (pcf > 1.0) shadowAttenuation = CCGetSpotLightShadowFactorSoft(pos, s.position);\nelse shadowAttenuation = CCGetSpotLightShadowFactorHard(pos, s.position);\nlightColor *= 1.0 - shadowAttenuation;\n}\n}\n#endif\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nfinalColor = finalColor * s.occlusion;\nreturn vec4(finalColor, 0.0);\n}\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 0\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvoid main () {\nStandardSurface s; surf(s);\ngl_FragData[0] = s.albedo;\ngl_FragData[1] = vec4(s.position, s.roughness);\ngl_FragData[2] = vec4(s.normal, s.metallic);\ngl_FragData[3] = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matLightViewProj;\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nvarying vec2 v_clip_depth;\nvec4 vert () {\nvec4 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nworldPos.w = 1.0;\nvec4 clipPos = cc_matLightViewProj * worldPos;\nv_clip_depth = clipPos.zw;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 160581375.0) * depth;\nret = fract(ret);\nret -= ret.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\nreturn ret;\n}\nvarying vec2 v_clip_depth;\nvec4 frag () {\nreturn packDepthToRGBA(v_clip_depth.x / v_clip_depth.y * 0.5 + 0.5);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\n#if USE_INSTANCING\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\n#endif\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvarying float v_fog_factor;\n#if USE_VERTEX_COLOR\nattribute lowp vec4 a_color;\nvarying lowp vec4 v_color;\n#endif\n#if USE_TEXTURE\nvarying vec2 v_uv;\nuniform vec4 tilingOffset;\n#endif\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\n#if USE_TEXTURE\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\n#if CC_USE_FOG == 0\nv_fog_factor = LinearFog(matWorld * position);\n#elif CC_USE_FOG == 1\nv_fog_factor = ExpFog(matWorld * position);\n#elif CC_USE_FOG == 2\nv_fog_factor = ExpSquaredFog(matWorld * position);\n#elif CC_USE_FOG == 3\nv_fog_factor = LayeredFog(matWorld * position);\n#else\nv_fog_factor = 1.0;\n#endif\nreturn cc_matProj * (cc_matView * matWorld) * position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nuniform mediump vec4 cc_exposure;\nuniform mediump vec4 cc_fogColor;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nvarying float v_fog_factor;\n#if USE_ALPHA_TEST\n#endif\n#if USE_TEXTURE\nvarying vec2 v_uv;\nuniform sampler2D mainTexture;\n#endif\nuniform vec4 mainColor;\nuniform vec4 colorScaleAndCutoff;\n#if USE_VERTEX_COLOR\nvarying lowp vec4 v_color;\n#endif\nvec4 frag () {\nvec4 o = mainColor;\no.rgb *= colorScaleAndCutoff.xyz;\n#if USE_VERTEX_COLOR\no *= v_color;\n#endif\n#if USE_TEXTURE\no *= texture2D(mainTexture, v_uv);\n#endif\n#if USE_ALPHA_TEST\nif (o.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n#endif\no = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, o.rgb, v_fog_factor), o.a);\nreturn CCFragOutput(o);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition.xy = cc_cameraPos.w == 0.0 ? vec2(position.xy.x, -position.xy.y) : position.xy;\ngl_Position = vec4(position.x, position.y, 1.0, 1.0);\nv_uv = a_texCoord;\n}",frag:"\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_exposure;\nuniform mediump vec4 cc_mainLitDir;\nuniform mediump vec4 cc_mainLitColor;\nuniform mediump vec4 cc_ambientSky;\nuniform mediump vec4 cc_ambientGround;\nuniform mediump vec4 cc_fogColor;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\nuniform highp mat4 cc_matLightViewProj;\nuniform lowp vec4 cc_shadowNFLSInfo;\nuniform lowp vec4 cc_shadowWHPBInfo;\nuniform lowp vec4 cc_shadowLPNNInfo;\nuniform lowp vec4 cc_shadowColor;\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\nfloat CCGetLinearDepth (vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nfloat dist = length(viewStartPos.xyz);\nreturn cc_shadowNFLSInfo.x + (-dist / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x));\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n} else {\nclosestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(closestDepth, clipPos.z- cc_shadowWHPBInfo.w);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z - cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock1 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock2 = step(dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock3 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\n} else {\nblock0 = step(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x, offsetDepth);\nblock1 = step(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x, offsetDepth);\nblock2 = step(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x, offsetDepth);\nblock3 = step(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x, offsetDepth);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat bias = cc_shadowWHPBInfo.w;\nfloat offsetDepth = clipPos.z - bias;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock1 = step(dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock2 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock3 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock4 = step(dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock5 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock6 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock7 = step(dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock8 = step(dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\n} else {\nblock0 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x, offsetDepth);\nblock1 = step(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x, offsetDepth);\nblock2 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x, offsetDepth);\nblock3 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x, offsetDepth);\nblock4 = step(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x, offsetDepth);\nblock5 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x, offsetDepth);\nblock6 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x, offsetDepth);\nblock7 = step(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x, offsetDepth);\nblock8 = step(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x, offsetDepth);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = 0.0;\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n} else {\nclosestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(closestDepth, depth - cc_shadowWHPBInfo.w);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat offsetx = 1.0 / cc_shadowWHPBInfo.x;\nfloat offsety = 1.0 / cc_shadowWHPBInfo.y;\nfloat shadow = 0.0;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nfloat closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n} else {\nfloat closestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\nreturn shadow / 5.0;\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat offsetx = 1.0 / cc_shadowWHPBInfo.x;\nfloat offsety = 1.0 / cc_shadowWHPBInfo.y;\nfloat shadow = 0.0;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nfor (int i = -1; i <= 1; i++) {\nfor (int j = -1; j <= 1; j++) {\nfloat closestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\n}\n} else {\nfor (int i = -1; i <= 1; i++) {\nfor (int j = -1; j <= 1; j++) {\nfloat closestDepth = texture2D(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\n}\n}\nreturn shadow / 9.0;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n}\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DLodEXT(tex, coord, lod);\n#else\nreturn texture2D(tex, coord, lod);\n#endif\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn textureCubeLodEXT(tex, coord, lod);\n#else\nreturn textureCube(tex, coord, lod);\n#endif\n}\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.001);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\n#if CC_RECEIVE_SHADOW\n{\nfloat pcf = cc_shadowWHPBInfo.z + 0.001;\nfloat shadowAttenuation = 0.0;\nfloat cosAngle = clamp(1.0 - dot(N, L.xyz), 0.0, 1.0);\nvec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\nvec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\nif (pcf > 2.0) shadowAttenuation = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 1.0) shadowAttenuation = CCGetShadowFactorSoft(pos);\nelse shadowAttenuation = CCGetShadowFactorHard(pos);\nvec3 shadowColor = cc_shadowColor.rgb * cc_shadowColor.a + dirlightContrib.rgb * (1.0 - cc_shadowColor.a);\nif (cc_shadowNFLSInfo.w > 0.000001) {\ndirlightContrib.rgb = shadowColor.rgb * shadowAttenuation + dirlightContrib.rgb * (1.0 - shadowAttenuation);\n} else {\ndirlightContrib.rgb = shadowColor.rgb * shadowAttenuation * NL + dirlightContrib.rgb * (1.0 - shadowAttenuation * NL);\n}\n}\n#endif\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\nfinalColor += (ambDiff.rgb * diffuse);\n#if CC_USE_IBL\nvec3 R = normalize(reflect(-V, N));\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\nfinalColor += env * cc_ambientSky.w * specular;\n#endif\nfinalColor = finalColor * s.occlusion;\n#if CC_USE_HDR\ns.emissive *= cc_exposure.w;\n#endif\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\nuniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\nuniform vec4 cc_lightColor[LIGHTS_PER_PASS];\nuniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nuniform vec4 cc_lightDir[LIGHTS_PER_PASS];\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z + 0.001;\nfloat shadowAttenuation = 0.0;\nfloat cosAngle = clamp(1.0 - dot(N, normalize(cc_lightPos[i].xyz - s.position.xyz)), 0.0, 1.0);\nvec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\nvec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\nif (pcf > 2.0) shadowAttenuation = CCGetSpotLightShadowFactorSoft2X(pos, s.position);\nelse if (pcf > 1.0) shadowAttenuation = CCGetSpotLightShadowFactorSoft(pos, s.position);\nelse shadowAttenuation = CCGetSpotLightShadowFactorHard(pos, s.position);\nlightColor *= 1.0 - shadowAttenuation;\n}\n}\n#endif\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nfinalColor = finalColor * s.occlusion;\nreturn vec4(finalColor, 0.0);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if !CC_USE_HDR\ncolor.rgb = sqrt(ACESToneMap(color.rgb));\n#endif\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvarying vec2 v_uv;\nuniform sampler2D cc_gbuffer_albedoMap;\nuniform sampler2D cc_gbuffer_positionMap;\nuniform sampler2D cc_gbuffer_normalMap;\nuniform sampler2D cc_gbuffer_emissiveMap;\nvoid main () {\nStandardSurface s;\nvec4 albedoMap = texture2D(cc_gbuffer_albedoMap,v_uv);\nvec4 positionMap = texture2D(cc_gbuffer_positionMap,v_uv);\nvec4 normalMap = texture2D(cc_gbuffer_normalMap,v_uv);\nvec4 emissiveMap = texture2D(cc_gbuffer_emissiveMap,v_uv);\ns.albedo = albedoMap;\ns.position = positionMap.xyz;\ns.roughness = positionMap.w;\ns.normal = normalMap.xyz;\ns.metallic = normalMap.w;\ns.emissive = emissiveMap.xyz;\ns.occlusion = emissiveMap.w;\nfloat fogFactor;\n#if CC_USE_FOG == 0\nfogFactor = LinearFog(vec4(s.position, 1));\n#elif CC_USE_FOG == 1\nfogFactor = ExpFog(vec4(s.position, 1));\n#elif CC_USE_FOG == 2\nfogFactor = ExpSquaredFog(vec4(s.position, 1));\n#elif CC_USE_FOG == 3\nfogFactor = LayeredFog(vec4(s.position, 1));\n#else\nfogFactor = 1.0;\n#endif\nvec4 shadowPos;\nshadowPos = cc_matLightViewProj * vec4(s.position, 1);\nvec4 color = CCStandardShadingBase(s, shadowPos) +\nCCStandardShadingAdditive(s, shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, fogFactor), color.a);\ngl_FragColor = CCFragOutput(color);\n}"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\n#if USE_INSTANCING\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\n#endif\nuniform highp mat4 cc_matLightPlaneProj;\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\nposition = cc_matProj * (cc_matView * cc_matLightPlaneProj * matWorld) * position;\nposition.z -= 0.0001;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nuniform lowp vec4 cc_shadowColor;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nvec4 frag () {\nreturn CCFragOutput(cc_shadowColor);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nuniform mediump vec4 cc_screenSize;\nvarying vec2 v_uv;\nuniform sampler2D cc_lighting_resultMap;\nvoid texcoords(vec2 fragCoord, vec2 resolution,\nout vec2 v_rgbNW, out vec2 v_rgbNE,\nout vec2 v_rgbSW, out vec2 v_rgbSE,\nout vec2 v_rgbM) {\nvec2 inverseVP = 1.0 / resolution.xy;\nv_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\nv_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\nv_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\nv_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\nv_rgbM = vec2(fragCoord * inverseVP);\n}\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\nvec2 v_rgbNW, vec2 v_rgbNE,\nvec2 v_rgbSW, vec2 v_rgbSE,\nvec2 v_rgbM) {\nvec4 color;\nmediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\nvec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\nvec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\nvec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\nvec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\nvec4 texColor = texture2D(tex, v_rgbM);\nvec3 rgbM  = texColor.xyz;\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat lumaNW = dot(rgbNW, luma);\nfloat lumaNE = dot(rgbNE, luma);\nfloat lumaSW = dot(rgbSW, luma);\nfloat lumaSE = dot(rgbSE, luma);\nfloat lumaM  = dot(rgbM,  luma);\nfloat lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\nfloat lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\nmediump vec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n(0.25 * (1.0 / 8.0)), (1.0/ 128.0));\nfloat rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\ndir = min(vec2(8.0, 8.0),\nmax(vec2(-8.0, -8.0),\ndir * rcpDirMin)) * inverseVP;\nvec3 rgbA = 0.5 * (\ntexture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\ntexture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\ntexture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\nfloat lumaB = dot(rgbB, luma);\nif ((lumaB < lumaMin) || (lumaB > lumaMax))\ncolor = vec4(rgbA, texColor.a);\nelse\ncolor = vec4(rgbB, texColor.a);\nreturn color;\n}\nvoid main () {\nmediump vec2 v_rgbNW;\nmediump vec2 v_rgbNE;\nmediump vec2 v_rgbSW;\nmediump vec2 v_rgbSE;\nmediump vec2 v_rgbM;\nvec2 resolution = cc_screenSize.xy;\nvec2 fragCoord = v_uv * resolution;\ntexcoords(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\ngl_FragColor = fxaa(cc_lighting_resultMap, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n}"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\nvarying mediump vec4 viewDir;\nvec4 vert () {\nviewDir = vec4(a_position, 1.0);\nmat4 matViewRotOnly = mat4(mat3(cc_matView));\nmat4 matProj = cc_matProj;\nif (matProj[3].w > 0.0) {\nvec2 scale = vec2(48.0, 24.0);\nmatProj[0].xy *= scale;\nmatProj[1].xy *= scale;\nmatProj[2].zw = vec2(-1.0);\nmatProj[3].zw = vec2(0.0);\n}\nvec4 pos = matProj * matViewRotOnly * viewDir;\npos.z = 0.99999 * pos.w;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_ambientSky;\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if !CC_USE_HDR\ncolor.rgb = sqrt(ACESToneMap(color.rgb));\n#endif\nreturn color;\n}\nvarying mediump vec4 viewDir;\nvec4 frag () {\n#if USE_RGBE_CUBEMAP\nvec3 c = unpackRGBE(textureCube(cc_environment, viewDir.xyz));\n#else\nvec3 c = SRGBToLinear(textureCube(cc_environment, viewDir.xyz).rgb);\n#endif\nreturn CCFragOutput(vec4(c * cc_ambientSky.w, 1.0));\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec2 v_uv;\nuniform vec4 offset;\nuniform vec4 digits[20];\nfloat getComponent(vec4 v, float i) {\nif (i < 1.0) { return v.x; }\nelse if (i < 2.0) { return v.y; }\nelse if (i < 3.0) { return v.z; }\nelse { return v.w; }\n}\nvec4 vert () {\nvec4 position = cc_matViewProj * vec4(a_position, 1.0);\nposition.xy += offset.xy;\nv_uv = a_color.xy;\nif (a_color.z >= 0.0) {\nfloat n = getComponent(digits[int(a_color.z)], a_color.w);\nv_uv += vec2(offset.z * n, 0.0);\n}\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nvarying vec2 v_uv;\nuniform sampler2D mainTexture;\nvec4 frag () {\nreturn CCFragOutput(texture2D(mainTexture, v_uv));\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nattribute vec2 a_position;\nattribute vec2 a_texCoord;\nvarying vec2 v_uv;\nvarying float v_percent;\nuniform vec4 u_buffer0;\nuniform vec4 u_buffer1;\nuniform mat4 u_projection;\nvec4 vert () {\nvec2 worldPos = a_position * u_buffer1.xy + u_buffer1.zw;\nvec2 clipSpace = worldPos / u_buffer0.xy * 2.0 - 1.0;\nvec4 screenPos = u_projection * vec4(clipSpace, 0.0, 1.0);\nv_uv = a_texCoord;\nv_percent = u_buffer0.z;\nreturn screenPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvarying vec2 v_uv;\nvarying float v_percent;\nuniform sampler2D mainTexture;\nvec4 frag () {\nvec4 color = texture2D(mainTexture, v_uv);\nfloat precent = clamp(v_percent, 0.0, 1.0);\ncolor.xyz *= precent;\nreturn color;\n}\nvoid main() { gl_FragColor = frag(); }"}]],glsl3:[[{vert:"\nprecision mediump float;\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nvoid rotateCorner (inout vec2 corner, float angle){\nfloat xOS = cos(angle) * corner.x - sin(angle) * corner.y;\nfloat yOS = sin(angle) * corner.x + cos(angle) * corner.y;\ncorner.x = xOS;\ncorner.y = yOS;\n}\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n, mat4 viewInv\n) {\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n}\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nlayout(std140) uniform builtin {\nvec4 cc_size_rotation;\n};\nvec4 vs_main() {\nvec4 pos = vec4(a_position, 1);\npos = cc_matWorld * pos;\nvec2 vertOffset = a_texCoord.xy - 0.5;\ncomputeVertPos(pos, vertOffset, quaternionFromEuler(vec3(0., 0., cc_size_rotation.z)), vec3(cc_size_rotation.xy, 0.), cc_matViewInv);\npos = cc_matViewProj * pos;\nuv = a_texCoord.xy;\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nin vec3 a_position;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 frag () {\nvec4 o = vec4(1.0);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin float a_dist;\nout float v_dist;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\npos = cc_matViewProj * cc_matWorld * pos;\nv_color = a_color;\nv_dist = a_dist;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nin vec4 v_color;\nin float v_dist;\nvec4 frag () {\nvec4 o = v_color;\nfloat aa = fwidth(v_dist);\nfloat alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\no.rgb *= o.a;\no *= alpha;\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nvoid rotateCorner (inout vec2 corner, float angle){\nfloat xOS = cos(angle) * corner.x - sin(angle) * corner.y;\nfloat yOS = sin(angle) * corner.x + cos(angle) * corner.y;\ncorner.x = xOS;\ncorner.y = yOS;\n}\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\nrotateCorner(viewSpaceVert, q.z);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nlayout(std140) uniform SampleConstants {\nvec4 u_sampleInfo;\n};\nlayout(std140) uniform TickConstants {\nvec4 u_worldRot;\nvec4 u_timeDelta;\n};\nin vec4 a_position_starttime;\nin vec4 a_size_uv;\nin vec4 a_rotation_uv;\nin vec4 a_color;\nin vec4 a_dir_life;\nin float a_rndSeed;\n#if CC_RENDER_MODE == 4\nin vec3 a_texCoord;\nin vec3 a_texCoord3;\nin vec3 a_normal;\nin vec4 a_color1;\n#endif\nvec3 unpackCurveData (sampler2D tex, vec2 coord) {\nvec4 a = texture(tex, coord);\nvec4 b = texture(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nreturn mix(a.xyz, b.xyz, c);\n}\nvec3 unpackCurveData (sampler2D tex, vec2 coord, out float w) {\nvec4 a = texture(tex, coord);\nvec4 b = texture(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nw = mix(a.w, b.w, c);\nreturn mix(a.xyz, b.xyz, c);\n}\nfloat pseudoRandom (float seed) {\nseed = mod(seed, 233280.);\nfloat q = (seed * 9301. + 49297.) / 233280.;\nreturn fract(q);\n}\n#if COLOR_OVER_TIME_MODULE_ENABLE\nuniform sampler2D color_over_time_tex0;\nlayout(std140) uniform ColorConstant {\nint u_color_mode;\n};\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nuniform sampler2D rotation_over_time_tex0;\nlayout(std140) uniform RotationConstant {\nint u_rotation_mode;\n};\n#endif\n#if SIZE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D size_over_time_tex0;\nlayout(std140) uniform SizeConstant {\nint u_size_mode;\n};\n#endif\n#if FORCE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D force_over_time_tex0;\nlayout(std140) uniform ForceConstant {\nint u_force_mode;\nint u_force_space;\n};\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nuniform sampler2D velocity_over_time_tex0;\nlayout(std140) uniform VelocityConstant {\nint u_velocity_mode;\nint u_velocity_space;\n};\n#endif\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nuniform sampler2D texture_animation_tex0;\nlayout(std140) uniform AnimationConstant {\nvec4 u_anim_info;\n};\n#endif\nfloat repeat (float t, float length) {\nreturn t - floor(t / length) * length;\n}\nvec4 rotateQuat (vec4 p, vec4 q) {\nvec3 iv = cross(q.xyz, p.xyz) + q.w * p.xyz;\nvec3 res = p.xyz + 2.0 * cross(q.xyz, iv);\nreturn vec4(res.xyz, p.w);\n}\nvec4 gpvs_main () {\nfloat activeTime = u_timeDelta.x - a_position_starttime.w;\nfloat normalizedTime = clamp(activeTime / a_dir_life.w, 0.0, 1.0);\nvec2 timeCoord0 = vec2(normalizedTime, 0.);\nvec2 timeCoord1 = vec2(normalizedTime, 1.);\n#if CC_RENDER_MODE == 4\nvec2 vertIdx = vec2(a_texCoord.x, a_texCoord.y);\n#else\nvec2 vertIdx = vec2(a_size_uv.w, a_rotation_uv.w);\n#endif\nvec4 velocity = vec4(a_dir_life.xyz, 0.);\nvec4 pos = vec4(a_position_starttime.xyz, 1.);\nvec3 size = a_size_uv.xyz;\n#if SIZE_OVER_TIME_MODULE_ENABLE\nif (u_size_mode == 1) {\nsize *= unpackCurveData(size_over_time_tex0, timeCoord0);\n} else {\nvec3 size_0 = unpackCurveData(size_over_time_tex0, timeCoord0);\nvec3 size_1 = unpackCurveData(size_over_time_tex0, timeCoord1);\nfloat factor_s = pseudoRandom(a_rndSeed + 39825.);\nsize *= mix(size_0, size_1, factor_s);\n}\n#endif\nvec3 compScale = scale.xyz * size;\n#if FORCE_OVER_TIME_MODULE_ENABLE\nvec3 forceAnim = vec3(0.);\nif (u_force_mode == 1) {\nforceAnim = unpackCurveData(force_over_time_tex0, timeCoord0);\n} else {\nvec3 force_0 = unpackCurveData(force_over_time_tex0, timeCoord0);\nvec3 force_1 = unpackCurveData(force_over_time_tex0, timeCoord1);\nfloat factor_f =  pseudoRandom(a_rndSeed + 212165.);\nforceAnim = mix(force_0, force_1, factor_f);\n}\nvec4 forceTrack = vec4(forceAnim, 0.);\nif (u_force_space == 0) {\nforceTrack = rotateQuat(forceTrack, u_worldRot);\n}\nvelocity.xyz += forceTrack.xyz;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nfloat speedModifier0 = 1.;\nfloat speedModifier1 = 1.;\nvec3 velocityAnim = vec3(0.);\nif (u_velocity_mode == 1) {\nvelocityAnim = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\n} else {\nvec3 vectory_0 = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\nvec3 vectory_1 = unpackCurveData(velocity_over_time_tex0, timeCoord1, speedModifier1);\nfloat factor_v = pseudoRandom(a_rndSeed + 197866.);\nvelocityAnim = mix(vectory_0, vectory_1, factor_v);\nspeedModifier0 = mix(speedModifier0, speedModifier1, factor_v);\n}\nvec4 velocityTrack = vec4(velocityAnim, 0.);\nif (u_velocity_space == 0) {\nvelocityTrack = rotateQuat(velocityTrack, u_worldRot);\n}\nvelocity.xyz += velocityTrack.xyz;\nvelocity.xyz *= speedModifier0;\n#endif\npos.xyz += velocity.xyz * normalizedTime * a_dir_life.w;\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = rotateQuat(velocity, u_worldRot);\n#endif\n#endif\nvec3 rotation = a_rotation_uv.xyz;\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nif (u_rotation_mode == 1) {\nrotation += unpackCurveData(rotation_over_time_tex0, timeCoord0) * normalizedTime * a_dir_life.w;\n} else {\nvec3 rotation_0 = unpackCurveData(rotation_over_time_tex0, timeCoord0);\nvec3 rotation_1 = unpackCurveData(rotation_over_time_tex0, timeCoord1);\nfloat factor_r = pseudoRandom(a_rndSeed + 125292.);\nrotation += mix(rotation_0, rotation_1, factor_r) * normalizedTime * a_dir_life.w;\n}\n#endif\n#if COLOR_OVER_TIME_MODULE_ENABLE\nif (u_color_mode == 1) {\ncolor = a_color * texture(color_over_time_tex0, timeCoord0);\n} else {\nvec4 color_0 = texture(color_over_time_tex0, timeCoord0);\nvec4 color_1 = texture(color_over_time_tex0, timeCoord1);\nfloat factor_c = pseudoRandom(a_rndSeed + 91041.);\ncolor = a_color * mix(color_0, color_1, factor_c);\n}\n#else\ncolor = a_color;\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((vertIdx - 0.5));\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = rotation.xyz;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., rotation.z);\n#endif\ncomputeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, cc_matViewInv\n#endif\n#if CC_RENDER_MODE == 1\n, cc_cameraPos.xyz\n, velocity\n, frameTile_velLenScale.z\n, frameTile_velLenScale.w\n, a_size_uv.w\n#endif\n);\n#else\nmat4 xformNoScale = matrixFromRT(quaternionFromEuler(rotation), pos.xyz);\nmat4 xform = matFromRTS(quaternionFromEuler(rotation), pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor *= a_color1;\n#endif\npos = cc_matViewProj * pos;\nfloat frameIndex = 0.;\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nfloat startFrame = 0.;\nvec3 frameInfo = vec3(0.);\nif (int(u_anim_info.x) == 1) {\nframeInfo = unpackCurveData(texture_animation_tex0, timeCoord0);\n} else {\nvec3 frameInfo0 = unpackCurveData(texture_animation_tex0, timeCoord0);\nvec3 frameInfo1 = unpackCurveData(texture_animation_tex0, timeCoord1);\nfloat factor_t = pseudoRandom(a_rndSeed + 90794.);\nframeInfo = mix(frameInfo0, frameInfo1, factor_t);\n}\nstartFrame = frameInfo.x / u_anim_info.y;\nframeIndex = repeat(u_anim_info.z * (frameInfo.y + startFrame), 1.);\n#endif\nuv = computeUV(frameIndex, vertIdx, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\nreturn pos;\n}\nvoid main() { gl_Position = gpvs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nin vec3 a_position;\nin vec4 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\nout vec3 vBarycentric;\n#endif\nvec4 vs_main() {\nhighp vec4 pos = vec4(a_position, 1);\nvec4 velocity = vec4(a_texCoord1.xyz, 0);\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\nvelocity = cc_matWorld * velocity;\n#endif\nfloat vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\nvec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\npos.xyz += camUp * vertOffset;\npos = cc_matViewProj * pos;\nuv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\ncolor = a_color;\n#if CC_DRAW_WIRE_FRAME\nvBarycentric = a_texCoord2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\n#if CC_DRAW_WIRE_FRAME\nin vec3 vBarycentric;\n#endif\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\nif (any(lessThan(vBarycentric, vec3(0.02)))) {\ncol = vec4(0., 1., 1., 1.);\n}\n#endif\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nvoid rotateCorner (inout vec2 corner, float angle){\nfloat xOS = cos(angle) * corner.x - sin(angle) * corner.y;\nfloat yOS = sin(angle) * corner.x + cos(angle) * corner.y;\ncorner.x = xOS;\ncorner.y = yOS;\n}\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\nrotateCorner(viewSpaceVert, q.z);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_RENDER_MODE == 1\nin vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\nin vec3 a_texCoord3;\nin vec3 a_normal;\nin vec4 a_color1;\n#endif\nvec4 lpvs_main () {\nvec3 compScale = scale.xyz * a_texCoord1;\nvec4 pos = vec4(a_position, 1);\n#if CC_RENDER_MODE == 1\nvec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = cc_matWorld * velocity;\n#endif\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = a_texCoord2;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n#endif\ncomputeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, cc_matViewInv\n#endif\n#if CC_RENDER_MODE == 1\n, cc_cameraPos.xyz\n, velocity\n, frameTile_velLenScale.z\n, frameTile_velLenScale.w\n, a_texCoord.x\n#endif\n);\ncolor = a_color;\n#else\nmat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\nmat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor = a_color * a_color1;\n#endif\nuv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\npos = cc_matViewProj * pos;\nreturn pos;\n}\nvoid main() { gl_Position = lpvs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\n#if USE_LOCAL\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 v_light;\nout vec2 uv0;\n#if TWO_COLORED\nin vec4 a_color2;\nout vec4 v_dark;\n#endif\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\npos = cc_matViewProj * pos;\nuv0 = a_texCoord;\nv_light = a_color;\n#if TWO_COLORED\nv_dark = a_color2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\n#if USE_ALPHA_TEST\nlayout(std140) uniform ALPHA_TEST_DATA {\nfloat alphaThreshold;\n};\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nin vec4 v_light;\n#if TWO_COLORED\nin vec4 v_dark;\n#endif\nin vec2 uv0;\nuniform sampler2D cc_spriteTexture;\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if TWO_COLORED\nvec4 texColor = vec4(1, 1, 1, 1);\ntexColor *= texture(cc_spriteTexture, uv0);\no.a = texColor.a * v_light.a;\no.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n#else\no *= texture(cc_spriteTexture, uv0);\no *= v_light;\n#endif\nALPHA_TEST(o);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\n#if USE_LOCAL\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\n#if SAMPLE_FROM_RT\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\n#if USE_PIXEL_ALIGNMENT\npos = cc_matView * pos;\npos.xyz = floor(pos.xyz);\npos = cc_matProj * pos;\n#else\npos = cc_matViewProj * pos;\n#endif\nuv0 = a_texCoord;\n#if SAMPLE_FROM_RT\nuv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n#endif\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\nreturn vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\nreturn texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\nlayout(std140) uniform ALPHA_TEST_DATA {\nfloat alphaThreshold;\n};\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nin vec4 color;\n#if USE_TEXTURE\nin vec2 uv0;\nuniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if USE_TEXTURE\no *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n#if IS_GRAY\nfloat gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\no.r = o.g = o.b = gray;\n#endif\n#endif\no *= color;\nALPHA_TEST(o);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\n#if USE_INSTANCING\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nout float v_fog_factor;\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\nin vec4 a_color;\nout vec4 v_color;\n#endif\nout vec3 v_position;\nout vec3 v_normal;\nout vec2 v_uv;\nout vec2 v_uv1;\n#if USE_NORMAL_MAP\nout vec3 v_tangent;\nout vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\nin vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nout vec3 v_luv;\nvoid CCLightingMapCaclUV()\n{\n#if !USE_INSTANCING\nv_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\nv_luv.z = cc_lightingMapUVParam.z;\n#else\nv_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\nv_luv.z = a_lightingMapUVParam.z;\n#endif\n}\n#endif\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nvec4 pos = matWorld * In.position;\nv_position = pos.xyz;\nv_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n#if USE_NORMAL_MAP\nv_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\nv_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n#endif\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\n#if CC_USE_FOG == 0\nv_fog_factor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nv_fog_factor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nv_fog_factor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nv_fog_factor = LayeredFog(pos);\n#else\nv_fog_factor = 1.0;\n#endif\nv_shadowPos = cc_matLightViewProj * pos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nCCLightingMapCaclUV();\n#endif\ngl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nin float v_fog_factor;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\nfloat CCGetLinearDepth (vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nfloat dist = length(viewStartPos.xyz);\nreturn cc_shadowNFLSInfo.x + (-dist / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x));\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(closestDepth, clipPos.z- cc_shadowWHPBInfo.w);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z - cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock1 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock2 = step(dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock3 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\n} else {\nblock0 = step(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x, offsetDepth);\nblock1 = step(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x, offsetDepth);\nblock2 = step(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x, offsetDepth);\nblock3 = step(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x, offsetDepth);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat bias = cc_shadowWHPBInfo.w;\nfloat offsetDepth = clipPos.z - bias;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock1 = step(dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock2 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock3 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock4 = step(dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock5 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock6 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock7 = step(dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock8 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\n} else {\nblock0 = step(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x, offsetDepth);\nblock1 = step(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x, offsetDepth);\nblock2 = step(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x, offsetDepth);\nblock3 = step(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x, offsetDepth);\nblock4 = step(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x, offsetDepth);\nblock5 = step(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x, offsetDepth);\nblock6 = step(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x, offsetDepth);\nblock7 = step(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x, offsetDepth);\nblock8 = step(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x, offsetDepth);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = 0.0;\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(closestDepth, depth - cc_shadowWHPBInfo.w);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat offsetx = 1.0 / cc_shadowWHPBInfo.x;\nfloat offsety = 1.0 / cc_shadowWHPBInfo.y;\nfloat shadow = 0.0;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nfloat closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n} else {\nfloat closestDepth = texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\nreturn shadow / 5.0;\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat offsetx = 1.0 / cc_shadowWHPBInfo.x;\nfloat offsety = 1.0 / cc_shadowWHPBInfo.y;\nfloat shadow = 0.0;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nfor (int i = -1; i <= 1; i++) {\nfor (int j = -1; j <= 1; j++) {\nfloat closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\n}\n} else {\nfor (int i = -1; i <= 1; i++) {\nfor (int j = -1; j <= 1; j++) {\nfloat closestDepth = texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\n}\n}\nreturn shadow / 9.0;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n}\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.001);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\n#if CC_RECEIVE_SHADOW\n{\nfloat pcf = cc_shadowWHPBInfo.z + 0.001;\nfloat shadowAttenuation = 0.0;\nfloat cosAngle = clamp(1.0 - dot(N, L.xyz), 0.0, 1.0);\nvec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\nvec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\nif (pcf > 2.0) shadowAttenuation = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 1.0) shadowAttenuation = CCGetShadowFactorSoft(pos);\nelse shadowAttenuation = CCGetShadowFactorHard(pos);\nvec3 shadowColor = cc_shadowColor.rgb * cc_shadowColor.a + dirlightContrib.rgb * (1.0 - cc_shadowColor.a);\nif (cc_shadowNFLSInfo.w > 0.000001) {\ndirlightContrib.rgb = shadowColor.rgb * shadowAttenuation + dirlightContrib.rgb * (1.0 - shadowAttenuation);\n} else {\ndirlightContrib.rgb = shadowColor.rgb * shadowAttenuation * NL + dirlightContrib.rgb * (1.0 - shadowAttenuation * NL);\n}\n}\n#endif\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\nfinalColor += (ambDiff.rgb * diffuse);\n#if CC_USE_IBL\nvec3 R = normalize(reflect(-V, N));\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\nfinalColor += env * cc_ambientSky.w * specular;\n#endif\nfinalColor = finalColor * s.occlusion;\n#if CC_USE_HDR\ns.emissive *= cc_exposure.w;\n#endif\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if !CC_USE_HDR\ncolor.rgb = sqrt(ACESToneMap(color.rgb));\n#endif\nreturn color;\n}\nin highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nin vec3 v_luv;\nuniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nin vec3 v_position;\nin vec2 v_uv;\nin vec2 v_uv1;\nin vec3 v_normal;\n#if USE_VERTEX_COLOR\nin vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\nin vec3 v_tangent;\nin vec3 v_bitangent;\nuniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\nuniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nuniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\nuniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\nuniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\nvec4 baseColor = albedo;\n#if USE_VERTEX_COLOR\nbaseColor *= v_color;\n#endif\n#if USE_ALBEDO_MAP\nvec4 texColor = texture(albedoMap, ALBEDO_UV);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\nbaseColor *= texColor;\n#endif\ns.albedo = baseColor;\ns.albedo.rgb *= albedoScaleAndCutoff.xyz;\n#if USE_ALPHA_TEST\nif (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture(cc_lightingMap, v_luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = v_luv.z;\n#endif\ns.normal = v_normal;\n#if USE_NORMAL_MAP\nvec3 nmmp = texture(normalMap, NORMAL_UV).xyz - vec3(0.5);\ns.normal =\n(nmmp.x * pbrParams.w) * normalize(v_tangent) +\n(nmmp.y * pbrParams.w) * normalize(v_bitangent) +\nnmmp.z * normalize(s.normal);\n#endif\ns.position = v_position;\nvec4 pbr = pbrParams;\n#if USE_PBR_MAP\nvec4 res = texture(pbrMap, PBR_UV);\npbr.x *= res.r;\npbr.y *= res.g;\npbr.z *= res.b;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nvec4 metallicRoughness = texture(metallicRoughnessMap, PBR_UV);\npbr.z *= metallicRoughness.b;\npbr.y *= metallicRoughness.g;\n#endif\n#if USE_OCCLUSION_MAP\npbr.x *= texture(occlusionMap, PBR_UV).r;\n#endif\ns.occlusion = clamp(pbr.x, 0.0, 0.96);\ns.roughness = clamp(pbr.y, 0.04, 1.0);\ns.metallic = pbr.z;\ns.emissive = emissive.rgb * emissiveScaleParam.xyz;\n#if USE_EMISSIVE_MAP\ns.emissive *= SRGBToLinear(texture(emissiveMap, EMISSIVE_UV).rgb);\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\nlayout(std140) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z + 0.001;\nfloat shadowAttenuation = 0.0;\nfloat cosAngle = clamp(1.0 - dot(N, normalize(cc_lightPos[i].xyz - s.position.xyz)), 0.0, 1.0);\nvec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\nvec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\nif (pcf > 2.0) shadowAttenuation = CCGetSpotLightShadowFactorSoft2X(pos, s.position);\nelse if (pcf > 1.0) shadowAttenuation = CCGetSpotLightShadowFactorSoft(pos, s.position);\nelse shadowAttenuation = CCGetSpotLightShadowFactorHard(pos, s.position);\nlightColor *= 1.0 - shadowAttenuation;\n}\n}\n#endif\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nfinalColor = finalColor * s.occlusion;\nreturn vec4(finalColor, 0.0);\n}\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\nfragColorX = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 0\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\nfragColorX = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nlayout(location = 0) out vec4 fragColor0;\nlayout(location = 1) out vec4 fragColor1;\nlayout(location = 2) out vec4 fragColor2;\nlayout(location = 3) out vec4 fragColor3;\nvoid main () {\nStandardSurface s; surf(s);\nfragColor0 = s.albedo;\nfragColor1 = vec4(s.position, s.roughness);\nfragColor2 = vec4(s.normal, s.metallic);\nfragColor3 = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\n#if USE_INSTANCING\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\n#if HAS_SECOND_UV || USE_LIGHTMAP\nin vec2 a_texCoord1;\n#endif\nout vec2 v_uv;\nout vec2 v_uv1;\nout vec4 v_worldPos;\nout float v_clip_depth;\nvec4 vert () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nv_worldPos = matWorld * In.position;\nvec4 clipPos = cc_matLightViewProj * v_worldPos;\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#endif\nv_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 160581375.0) * depth;\nret = fract(ret);\nret -= ret.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\nreturn ret;\n}\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nin vec2 v_uv;\nin vec2 v_uv1;\nin vec4 v_worldPos;\nin float v_clip_depth;\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\nvec4 baseColor = albedo;\n#if USE_ALBEDO_MAP\nbaseColor *= texture(albedoMap, ALBEDO_UV);\n#endif\n#if USE_ALPHA_TEST\nif (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\nif(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\nif (cc_shadowNFLSInfo.z > 0.000001) {\nvec4 viewStartPos = cc_matLightView * v_worldPos;\nfloat dist = length(viewStartPos.xyz);\nfloat linearDepth = cc_shadowNFLSInfo.x + (-dist / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x));\nreturn vec4(linearDepth, 1.0, 1.0, 1.0);\n}\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nreturn packDepthToRGBA(v_clip_depth);\n}\nreturn vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nout float v_fog_factor;\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\n#endif\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nout highp vec3 v_position;\nout mediump vec3 v_normal;\n#if USE_NORMALMAP\nout mediump vec3 v_tangent;\nout mediump vec3 v_binormal;\n#endif\nout mediump vec2 uvw;\nout mediump vec2 uv0;\nout mediump vec2 uv1;\nout mediump vec2 uv2;\nout mediump vec2 uv3;\nout mediump vec3 luv;\nout mediump vec3 diffuse;\nlayout(std140) uniform TexCoords {\nvec4 UVScale;\nvec4 lightMapUVParam;\n};\nvoid main () {\nvec3 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nvec4 pos = vec4(worldPos, 1.0);\npos = cc_matViewProj * pos;\nuvw = a_texCoord;\nuv0 = a_position.xz * UVScale.x;\nuv1 = a_position.xz * UVScale.y;\nuv2 = a_position.xz * UVScale.z;\nuv3 = a_position.xz * UVScale.w;\n#if USE_LIGHTMAP\nluv.xy = lightMapUVParam.xy + a_texCoord * lightMapUVParam.zw;\nluv.z = lightMapUVParam.z;\n#endif\nv_position = worldPos;\nv_normal = a_normal;\n#if CC_USE_FOG == 0\nv_fog_factor = LinearFog(vec4(worldPos, 1.0));\n#elif CC_USE_FOG == 1\nv_fog_factor = ExpFog(vec4(worldPos, 1.0));\n#elif CC_USE_FOG == 2\nv_fog_factor = ExpSquaredFog(vec4(worldPos, 1.0));\n#elif CC_USE_FOG == 3\nv_fog_factor = LayeredFog(vec4(worldPos, 1.0));\n#else\nv_fog_factor = 1.0;\n#endif\n#if USE_NORMALMAP\nv_tangent = vec3(1.0, 0.0, 0.0);\nv_binormal = vec3(0.0, 0.0, 1.0);\nv_binormal = cross(v_tangent, a_normal);\nv_tangent = cross(a_normal, v_binormal);\n#endif\nv_shadowPos = cc_matLightViewProj * vec4(worldPos, 1.0);\ngl_Position = pos;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\nfloat CCGetLinearDepth (vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nfloat dist = length(viewStartPos.xyz);\nreturn cc_shadowNFLSInfo.x + (-dist / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x));\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(closestDepth, clipPos.z- cc_shadowWHPBInfo.w);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z - cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock1 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock2 = step(dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock3 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\n} else {\nblock0 = step(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x, offsetDepth);\nblock1 = step(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x, offsetDepth);\nblock2 = step(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x, offsetDepth);\nblock3 = step(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x, offsetDepth);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat bias = cc_shadowWHPBInfo.w;\nfloat offsetDepth = clipPos.z - bias;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock1 = step(dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock2 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock3 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock4 = step(dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock5 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock6 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock7 = step(dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock8 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\n} else {\nblock0 = step(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x, offsetDepth);\nblock1 = step(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x, offsetDepth);\nblock2 = step(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x, offsetDepth);\nblock3 = step(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x, offsetDepth);\nblock4 = step(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x, offsetDepth);\nblock5 = step(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x, offsetDepth);\nblock6 = step(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x, offsetDepth);\nblock7 = step(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x, offsetDepth);\nblock8 = step(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x, offsetDepth);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = 0.0;\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(closestDepth, depth - cc_shadowWHPBInfo.w);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat offsetx = 1.0 / cc_shadowWHPBInfo.x;\nfloat offsety = 1.0 / cc_shadowWHPBInfo.y;\nfloat shadow = 0.0;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nfloat closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n} else {\nfloat closestDepth = texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\nreturn shadow / 5.0;\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat offsetx = 1.0 / cc_shadowWHPBInfo.x;\nfloat offsety = 1.0 / cc_shadowWHPBInfo.y;\nfloat shadow = 0.0;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nfor (int i = -1; i <= 1; i++) {\nfor (int j = -1; j <= 1; j++) {\nfloat closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\n}\n} else {\nfor (int i = -1; i <= 1; i++) {\nfor (int j = -1; j <= 1; j++) {\nfloat closestDepth = texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\n}\n}\nreturn shadow / 9.0;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n}\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.001);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\n#if CC_RECEIVE_SHADOW\n{\nfloat pcf = cc_shadowWHPBInfo.z + 0.001;\nfloat shadowAttenuation = 0.0;\nfloat cosAngle = clamp(1.0 - dot(N, L.xyz), 0.0, 1.0);\nvec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\nvec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\nif (pcf > 2.0) shadowAttenuation = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 1.0) shadowAttenuation = CCGetShadowFactorSoft(pos);\nelse shadowAttenuation = CCGetShadowFactorHard(pos);\nvec3 shadowColor = cc_shadowColor.rgb * cc_shadowColor.a + dirlightContrib.rgb * (1.0 - cc_shadowColor.a);\nif (cc_shadowNFLSInfo.w > 0.000001) {\ndirlightContrib.rgb = shadowColor.rgb * shadowAttenuation + dirlightContrib.rgb * (1.0 - shadowAttenuation);\n} else {\ndirlightContrib.rgb = shadowColor.rgb * shadowAttenuation * NL + dirlightContrib.rgb * (1.0 - shadowAttenuation * NL);\n}\n}\n#endif\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\nfinalColor += (ambDiff.rgb * diffuse);\n#if CC_USE_IBL\nvec3 R = normalize(reflect(-V, N));\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\nfinalColor += env * cc_ambientSky.w * specular;\n#endif\nfinalColor = finalColor * s.occlusion;\n#if CC_USE_HDR\ns.emissive *= cc_exposure.w;\n#endif\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if !CC_USE_HDR\ncolor.rgb = sqrt(ACESToneMap(color.rgb));\n#endif\nreturn color;\n}\nin float v_fog_factor;\nin highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nin vec3 v_luv;\nuniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nin highp vec3 v_position;\nin mediump vec3 v_normal;\n#if USE_NORMALMAP\nin mediump vec3 v_tangent;\nin mediump vec3 v_binormal;\n#endif\nin mediump vec2 uvw;\nin mediump vec2 uv0;\nin mediump vec2 uv1;\nin mediump vec2 uv2;\nin mediump vec2 uv3;\nin mediump vec3 diffuse;\nin mediump vec3 luv;\nlayout(std140) uniform PbrParams {\nvec4 metallic;\nvec4 roughness;\n};\nuniform sampler2D weightMap;\nuniform sampler2D detailMap0;\nuniform sampler2D detailMap1;\nuniform sampler2D detailMap2;\nuniform sampler2D detailMap3;\nuniform sampler2D normalMap0;\nuniform sampler2D normalMap1;\nuniform sampler2D normalMap2;\nuniform sampler2D normalMap3;\nuniform sampler2D lightMap;\nvoid surf (out StandardSurface s) {\n#if LAYERS > 1\nvec4 w = texture(weightMap, uvw);\n#endif\nvec4 baseColor = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseColor = texture(detailMap0, uv0);\n#elif LAYERS == 2\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\nbaseColor += texture(detailMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\nbaseColor += texture(detailMap2, uv2) * w.b;\nbaseColor += texture(detailMap3, uv3) * w.a;\n#else\nbaseColor = texture(detailMap0, uv0);\n#endif\ns.position = v_position;\n#if USE_NORMALMAP\nvec4 baseNormal = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseNormal = texture(normalMap0, uv0);\n#elif LAYERS == 2\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\nbaseNormal += texture(normalMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\nbaseNormal += texture(normalMap2, uv2) * w.b;\nbaseNormal += texture(normalMap3, uv3) * w.a;\n#else\nbaseNormal = texture(normalMap0, uv0);\n#endif\nvec3 nmmp = baseNormal.xyz - vec3(0.5);\ns.normal =\nnmmp.x * normalize(v_tangent) +\nnmmp.y * normalize(v_binormal) +\nnmmp.z * normalize(v_normal);\n#else\ns.normal = v_normal;\n#endif\ns.albedo = vec4(SRGBToLinear(baseColor.rgb), 1.0);\ns.occlusion = 1.0;\n#if USE_PBR\ns.roughness = 0.0;\n#if LAYERS == 1\ns.roughness = roughness.x;\n#elif LAYERS == 2\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\n#elif LAYERS == 3\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\n#elif LAYERS == 4\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\ns.roughness += roughness.w * w.a;\n#else\ns.roughness = 1.0;\n#endif\ns.metallic = 0.0;\n#if LAYERS == 1\ns.metallic = metallic.x;\n#elif LAYERS == 2\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\n#elif LAYERS == 3\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\n#elif LAYERS == 4\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\ns.metallic += metallic.w * w.a;\n#else\ns.metallic = 0.0;\n#endif\n#else\ns.roughness = 1.0;\ns.metallic = 0.0;\n#endif\ns.emissive = vec3(0.0, 0.0, 0.0);\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture(lightMap, luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = luv.z;\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\nlayout(std140) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z + 0.001;\nfloat shadowAttenuation = 0.0;\nfloat cosAngle = clamp(1.0 - dot(N, normalize(cc_lightPos[i].xyz - s.position.xyz)), 0.0, 1.0);\nvec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\nvec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\nif (pcf > 2.0) shadowAttenuation = CCGetSpotLightShadowFactorSoft2X(pos, s.position);\nelse if (pcf > 1.0) shadowAttenuation = CCGetSpotLightShadowFactorSoft(pos, s.position);\nelse shadowAttenuation = CCGetSpotLightShadowFactorHard(pos, s.position);\nlightColor *= 1.0 - shadowAttenuation;\n}\n}\n#endif\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nfinalColor = finalColor * s.occlusion;\nreturn vec4(finalColor, 0.0);\n}\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\nfragColorX = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 0\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\nfragColorX = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nlayout(location = 0) out vec4 fragColor0;\nlayout(location = 1) out vec4 fragColor1;\nlayout(location = 2) out vec4 fragColor2;\nlayout(location = 3) out vec4 fragColor3;\nvoid main () {\nStandardSurface s; surf(s);\nfragColor0 = s.albedo;\nfragColor1 = vec4(s.position, s.roughness);\nfragColor2 = vec4(s.normal, s.metallic);\nfragColor3 = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nout vec2 v_clip_depth;\nvec4 vert () {\nvec4 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nworldPos.w = 1.0;\nvec4 clipPos = cc_matLightViewProj * worldPos;\nv_clip_depth = clipPos.zw;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 160581375.0) * depth;\nret = fract(ret);\nret -= ret.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\nreturn ret;\n}\nin vec2 v_clip_depth;\nvec4 frag () {\nreturn packDepthToRGBA(v_clip_depth.x / v_clip_depth.y * 0.5 + 0.5);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\n#if USE_INSTANCING\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nout float v_fog_factor;\n#if USE_VERTEX_COLOR\nin lowp vec4 a_color;\nout lowp vec4 v_color;\n#endif\n#if USE_TEXTURE\nout vec2 v_uv;\nlayout(std140) uniform TexCoords {\nvec4 tilingOffset;\n};\n#endif\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\n#if USE_TEXTURE\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\n#if CC_USE_FOG == 0\nv_fog_factor = LinearFog(matWorld * position);\n#elif CC_USE_FOG == 1\nv_fog_factor = ExpFog(matWorld * position);\n#elif CC_USE_FOG == 2\nv_fog_factor = ExpSquaredFog(matWorld * position);\n#elif CC_USE_FOG == 3\nv_fog_factor = LayeredFog(matWorld * position);\n#else\nv_fog_factor = 1.0;\n#endif\nreturn cc_matProj * (cc_matView * matWorld) * position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nin float v_fog_factor;\n#if USE_ALPHA_TEST\n#endif\n#if USE_TEXTURE\nin vec2 v_uv;\nuniform sampler2D mainTexture;\n#endif\nlayout(std140) uniform Constant {\nvec4 mainColor;\nvec4 colorScaleAndCutoff;\n};\n#if USE_VERTEX_COLOR\nin lowp vec4 v_color;\n#endif\nvec4 frag () {\nvec4 o = mainColor;\no.rgb *= colorScaleAndCutoff.xyz;\n#if USE_VERTEX_COLOR\no *= v_color;\n#endif\n#if USE_TEXTURE\no *= texture(mainTexture, v_uv);\n#endif\n#if USE_ALPHA_TEST\nif (o.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n#endif\no = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, o.rgb, v_fog_factor), o.a);\nreturn CCFragOutput(o);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nout vec2 v_uv;\nvoid main () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition.xy = cc_cameraPos.w == 0.0 ? vec2(position.xy.x, -position.xy.y) : position.xy;\ngl_Position = vec4(position.x, position.y, 1.0, 1.0);\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\n#if CC_RECEIVE_SHADOW\nuniform sampler2D cc_shadowMap;\nuniform sampler2D cc_spotLightingMap;\nfloat CCGetLinearDepth (vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nfloat dist = length(viewStartPos.xyz);\nreturn cc_shadowNFLSInfo.x + (-dist / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x));\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(closestDepth, clipPos.z- cc_shadowWHPBInfo.w);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z - cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock1 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock2 = step(dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock3 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\n} else {\nblock0 = step(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x, offsetDepth);\nblock1 = step(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x, offsetDepth);\nblock2 = step(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x, offsetDepth);\nblock3 = step(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x, offsetDepth);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat bias = cc_shadowWHPBInfo.w;\nfloat offsetDepth = clipPos.z - bias;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock1 = step(dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock2 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock3 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock4 = step(dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock5 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock6 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock7 = step(dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\nblock8 = step(dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0)), offsetDepth);\n} else {\nblock0 = step(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x, offsetDepth);\nblock1 = step(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x, offsetDepth);\nblock2 = step(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x, offsetDepth);\nblock3 = step(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x, offsetDepth);\nblock4 = step(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x, offsetDepth);\nblock5 = step(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x, offsetDepth);\nblock6 = step(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x, offsetDepth);\nblock7 = step(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x, offsetDepth);\nblock8 = step(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x, offsetDepth);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = 0.0;\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(closestDepth, depth - cc_shadowWHPBInfo.w);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat offsetx = 1.0 / cc_shadowWHPBInfo.x;\nfloat offsety = 1.0 / cc_shadowWHPBInfo.y;\nfloat shadow = 0.0;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nfloat closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n} else {\nfloat closestDepth = texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\nclosestDepth = texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\nreturn shadow / 5.0;\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\nfloat offsetx = 1.0 / cc_shadowWHPBInfo.x;\nfloat offsety = 1.0 / cc_shadowWHPBInfo.y;\nfloat shadow = 0.0;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nfor (int i = -1; i <= 1; i++) {\nfor (int j = -1; j <= 1; j++) {\nfloat closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\n}\n} else {\nfor (int i = -1; i <= 1; i++) {\nfor (int j = -1; j <= 1; j++) {\nfloat closestDepth = texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\nshadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n}\n}\n}\nreturn shadow / 9.0;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n}\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.001);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\n#if CC_RECEIVE_SHADOW\n{\nfloat pcf = cc_shadowWHPBInfo.z + 0.001;\nfloat shadowAttenuation = 0.0;\nfloat cosAngle = clamp(1.0 - dot(N, L.xyz), 0.0, 1.0);\nvec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\nvec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\nif (pcf > 2.0) shadowAttenuation = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 1.0) shadowAttenuation = CCGetShadowFactorSoft(pos);\nelse shadowAttenuation = CCGetShadowFactorHard(pos);\nvec3 shadowColor = cc_shadowColor.rgb * cc_shadowColor.a + dirlightContrib.rgb * (1.0 - cc_shadowColor.a);\nif (cc_shadowNFLSInfo.w > 0.000001) {\ndirlightContrib.rgb = shadowColor.rgb * shadowAttenuation + dirlightContrib.rgb * (1.0 - shadowAttenuation);\n} else {\ndirlightContrib.rgb = shadowColor.rgb * shadowAttenuation * NL + dirlightContrib.rgb * (1.0 - shadowAttenuation * NL);\n}\n}\n#endif\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\nfinalColor += (ambDiff.rgb * diffuse);\n#if CC_USE_IBL\nvec3 R = normalize(reflect(-V, N));\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\nfinalColor += env * cc_ambientSky.w * specular;\n#endif\nfinalColor = finalColor * s.occlusion;\n#if CC_USE_HDR\ns.emissive *= cc_exposure.w;\n#endif\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\nlayout(std140) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z + 0.001;\nfloat shadowAttenuation = 0.0;\nfloat cosAngle = clamp(1.0 - dot(N, normalize(cc_lightPos[i].xyz - s.position.xyz)), 0.0, 1.0);\nvec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\nvec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\nif (pcf > 2.0) shadowAttenuation = CCGetSpotLightShadowFactorSoft2X(pos, s.position);\nelse if (pcf > 1.0) shadowAttenuation = CCGetSpotLightShadowFactorSoft(pos, s.position);\nelse shadowAttenuation = CCGetSpotLightShadowFactorHard(pos, s.position);\nlightColor *= 1.0 - shadowAttenuation;\n}\n}\n#endif\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nfinalColor = finalColor * s.occlusion;\nreturn vec4(finalColor, 0.0);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if !CC_USE_HDR\ncolor.rgb = sqrt(ACESToneMap(color.rgb));\n#endif\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nin vec2 v_uv;\nuniform sampler2D cc_gbuffer_albedoMap;\nuniform sampler2D cc_gbuffer_positionMap;\nuniform sampler2D cc_gbuffer_normalMap;\nuniform sampler2D cc_gbuffer_emissiveMap;\nlayout(location = 0) out vec4 fragColor;\nvoid main () {\nStandardSurface s;\nvec4 albedoMap = texture(cc_gbuffer_albedoMap,v_uv);\nvec4 positionMap = texture(cc_gbuffer_positionMap,v_uv);\nvec4 normalMap = texture(cc_gbuffer_normalMap,v_uv);\nvec4 emissiveMap = texture(cc_gbuffer_emissiveMap,v_uv);\ns.albedo = albedoMap;\ns.position = positionMap.xyz;\ns.roughness = positionMap.w;\ns.normal = normalMap.xyz;\ns.metallic = normalMap.w;\ns.emissive = emissiveMap.xyz;\ns.occlusion = emissiveMap.w;\nfloat fogFactor;\n#if CC_USE_FOG == 0\nfogFactor = LinearFog(vec4(s.position, 1));\n#elif CC_USE_FOG == 1\nfogFactor = ExpFog(vec4(s.position, 1));\n#elif CC_USE_FOG == 2\nfogFactor = ExpSquaredFog(vec4(s.position, 1));\n#elif CC_USE_FOG == 3\nfogFactor = LayeredFog(vec4(s.position, 1));\n#else\nfogFactor = 1.0;\n#endif\nvec4 shadowPos;\nshadowPos = cc_matLightViewProj * vec4(s.position, 1);\nvec4 color = CCStandardShadingBase(s, shadowPos) +\nCCStandardShadingAdditive(s, shadowPos);\ncolor = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, fogFactor), color.a);\nfragColor = CCFragOutput(color);\n}"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\n#if USE_INSTANCING\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\nposition = cc_matProj * (cc_matView * cc_matLightPlaneProj * matWorld) * position;\nposition.z -= 0.0001;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nvec4 frag () {\nreturn CCFragOutput(cc_shadowColor);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nout vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nin vec2 v_uv;\nuniform sampler2D cc_lighting_resultMap;\nlayout(location = 0) out vec4 fragColor;\nvoid texcoords(vec2 fragCoord, vec2 resolution,\nout vec2 v_rgbNW, out vec2 v_rgbNE,\nout vec2 v_rgbSW, out vec2 v_rgbSE,\nout vec2 v_rgbM) {\nvec2 inverseVP = 1.0 / resolution.xy;\nv_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\nv_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\nv_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\nv_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\nv_rgbM = vec2(fragCoord * inverseVP);\n}\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\nvec2 v_rgbNW, vec2 v_rgbNE,\nvec2 v_rgbSW, vec2 v_rgbSE,\nvec2 v_rgbM) {\nvec4 color;\nmediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\nvec3 rgbNW = texture(tex, v_rgbNW).xyz;\nvec3 rgbNE = texture(tex, v_rgbNE).xyz;\nvec3 rgbSW = texture(tex, v_rgbSW).xyz;\nvec3 rgbSE = texture(tex, v_rgbSE).xyz;\nvec4 texColor = texture(tex, v_rgbM);\nvec3 rgbM  = texColor.xyz;\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat lumaNW = dot(rgbNW, luma);\nfloat lumaNE = dot(rgbNE, luma);\nfloat lumaSW = dot(rgbSW, luma);\nfloat lumaSE = dot(rgbSE, luma);\nfloat lumaM  = dot(rgbM,  luma);\nfloat lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\nfloat lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\nmediump vec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n(0.25 * (1.0 / 8.0)), (1.0/ 128.0));\nfloat rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\ndir = min(vec2(8.0, 8.0),\nmax(vec2(-8.0, -8.0),\ndir * rcpDirMin)) * inverseVP;\nvec3 rgbA = 0.5 * (\ntexture(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\ntexture(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture(tex, fragCoord * inverseVP + dir * -0.5).xyz +\ntexture(tex, fragCoord * inverseVP + dir * 0.5).xyz);\nfloat lumaB = dot(rgbB, luma);\nif ((lumaB < lumaMin) || (lumaB > lumaMax))\ncolor = vec4(rgbA, texColor.a);\nelse\ncolor = vec4(rgbB, texColor.a);\nreturn color;\n}\nvoid main () {\nmediump vec2 v_rgbNW;\nmediump vec2 v_rgbNE;\nmediump vec2 v_rgbSW;\nmediump vec2 v_rgbSE;\nmediump vec2 v_rgbM;\nvec2 resolution = cc_screenSize.xy;\nvec2 fragCoord = v_uv * resolution;\ntexcoords(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\nfragColor = fxaa(cc_lighting_resultMap, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n}"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\nout mediump vec4 viewDir;\nvec4 vert () {\nviewDir = vec4(a_position, 1.0);\nmat4 matViewRotOnly = mat4(mat3(cc_matView));\nmat4 matProj = cc_matProj;\nif (matProj[3].w > 0.0) {\nvec2 scale = vec2(48.0, 24.0);\nmatProj[0].xy *= scale;\nmatProj[1].xy *= scale;\nmatProj[2].zw = vec2(-1.0);\nmatProj[3].zw = vec2(0.0);\n}\nvec4 pos = matProj * matViewRotOnly * viewDir;\npos.z = 0.99999 * pos.w;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if !CC_USE_HDR\ncolor.rgb = sqrt(ACESToneMap(color.rgb));\n#endif\nreturn color;\n}\nin mediump vec4 viewDir;\nvec4 frag () {\n#if USE_RGBE_CUBEMAP\nvec3 c = unpackRGBE(texture(cc_environment, viewDir.xyz));\n#else\nvec3 c = SRGBToLinear(texture(cc_environment, viewDir.xyz).rgb);\n#endif\nreturn CCFragOutput(vec4(c * cc_ambientSky.w, 1.0));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec2 v_uv;\nlayout(std140) uniform Constants {\nvec4 offset;\n};\nlayout(std140) uniform PerFrameInfo {\nvec4 digits[8 * 10 / 4];\n};\nfloat getComponent(vec4 v, float i) {\nif (i < 1.0) { return v.x; }\nelse if (i < 2.0) { return v.y; }\nelse if (i < 3.0) { return v.z; }\nelse { return v.w; }\n}\nvec4 vert () {\nvec4 position = cc_matViewProj * vec4(a_position, 1.0);\nposition.xy += offset.xy;\nv_uv = a_color.xy;\nif (a_color.z >= 0.0) {\nfloat n = getComponent(digits[int(a_color.z)], a_color.w);\nv_uv += vec2(offset.z * n, 0.0);\n}\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n#endif\nreturn color;\n}\nin vec2 v_uv;\nuniform sampler2D mainTexture;\nvec4 frag () {\nreturn CCFragOutput(texture(mainTexture, v_uv));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nin vec2 a_position;\nin vec2 a_texCoord;\nout vec2 v_uv;\nout float v_percent;\nlayout(std140) uniform Constant {\nvec4 u_buffer0;\nvec4 u_buffer1;\nmat4 u_projection;\n};\nvec4 vert () {\nvec2 worldPos = a_position * u_buffer1.xy + u_buffer1.zw;\nvec2 clipSpace = worldPos / u_buffer0.xy * 2.0 - 1.0;\nvec4 screenPos = u_projection * vec4(clipSpace, 0.0, 1.0);\nv_uv = a_texCoord;\nv_percent = u_buffer0.z;\nreturn screenPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nin vec2 v_uv;\nin float v_percent;\nuniform sampler2D mainTexture;\nvec4 frag () {\nvec4 color = texture(mainTexture, v_uv);\nfloat precent = clamp(v_percent, 0.0, 1.0);\ncolor.xyz *= precent;\nreturn color;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}]]},ad=function(){function e(){this._device=null,this._resources={}}var t=e.prototype;return t.initBuiltinRes=function(e){var t=this;this._device=e;var n=this._resources,i=document.createElement("canvas"),o=i.getContext("2d"),a=new H_(i),r=i.width=i.height=2;o.fillStyle="#000",o.fillRect(0,0,r,r);var c=new Th;c._uuid="black-texture",c.image=a,n[c._uuid]=c,o.fillStyle="rgba(0,0,0,0)",o.fillRect(0,0,r,r);var l=new Th;l._uuid="empty-texture",l.image=a,n[l._uuid]=l;var f=new Ih;f._uuid="black-cube-texture",f.setMipFilter(Ih.Filter.NEAREST),f.image={front:new H_(i),back:new H_(i),left:new H_(i),right:new H_(i),top:new H_(i),bottom:new H_(i)},n[f._uuid]=f,o.fillStyle="#777",o.fillRect(0,0,r,r);var u=new Th;u._uuid="grey-texture",u.image=a,n[u._uuid]=u,o.fillStyle="#fff",o.fillRect(0,0,r,r);var _=new Th;_._uuid="white-texture",_.image=a,n[_._uuid]=_;var m=new Ih;m._uuid="white-cube-texture",m.setMipFilter(Ih.Filter.NEAREST),m.image={front:new H_(i),back:new H_(i),left:new H_(i),right:new H_(i),top:new H_(i),bottom:new H_(i)},n[m._uuid]=m,o.fillStyle="#7f7fff",o.fillRect(0,0,r,r);var h=new Th;h._uuid="normal-texture",h.image=a,n[h._uuid]=h,i.width=i.height=16,o.fillStyle="#ddd",o.fillRect(0,0,16,16),o.fillStyle="#555",o.fillRect(0,0,8,8),o.fillStyle="#555",o.fillRect(8,8,8,8);var d=new Th;d._uuid="default-texture",d.image=a,n[d._uuid]=d;var p=new Ih;if(p.setMipFilter(Ih.Filter.NEAREST),p._uuid="default-cube-texture",p.image={front:new H_(i),back:new H_(i),left:new H_(i),right:new H_(i),top:new H_(i),bottom:new H_(i)},n[p._uuid]=p,s.SpriteFrame){var v=new s.SpriteFrame,g=a._texture;v.texture=g,v._uuid="default-spriteframe",n[v._uuid]=v}var x=$h(e);if(!x)return Promise.reject(Error("Failed to initialize builtin shaders: unknown device."));var y=od[x];return y?Promise.resolve().then((function(){Nh.forEach((function(e,t){var n=Object.assign(new s.EffectAsset,e);n.shaders.forEach((function(e,n){var i=y[t][n];i&&(e[x]=i)})),n.hideInEditor=!0,n.onLoaded()})),t._initMaterials()})):Promise.reject(Error("Current device is requiring builtin shaders of version "+x+" but shaders of that version are not assembled in this build."))},t.get=function(e){return this._resources[e]},t._initMaterials=function(){var e=this._resources,t=[],n=new s.Material;n._uuid="standard-material",n.initialize({effectName:"standard"}),e[n._uuid]=n,t.push(n);var i=new s.Material;i._uuid="missing-effect-material",i.initialize({effectName:"unlit",defines:{USE_COLOR:!0}}),i.setProperty("mainColor",s.color("#ffff00")),e[i._uuid]=i,t.push(i);var o=new s.Material;o._uuid="missing-material",o.initialize({effectName:"unlit",defines:{USE_COLOR:!0}}),o.setProperty("mainColor",s.color("#ff00ff")),e[o._uuid]=o,t.push(o);var a=new s.Material;a._uuid="default-clear-stencil",a.initialize({defines:{USE_TEXTURE:!1},effectName:"clear-stencil"}),e[a._uuid]=a,t.push(a);var r=new s.Material;r._uuid="ui-base-material",r.initialize({defines:{USE_TEXTURE:!1},effectName:"sprite"}),e[r._uuid]=r,t.push(r);var c=new s.Material;c._uuid="ui-sprite-material",c.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"sprite"}),e[c._uuid]=c,t.push(c);var l=new s.Material;l._uuid="ui-alpha-test-material",l.initialize({defines:{USE_TEXTURE:!0,USE_ALPHA_TEST:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"sprite"}),e[l._uuid]=l,t.push(l);var f=new s.Material;f._uuid="ui-sprite-gray-material",f.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!0},effectName:"sprite"}),e[f._uuid]=f,t.push(f);var u=new s.Material;u._uuid="ui-sprite-alpha-sep-material",u.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!0,IS_GRAY:!1},effectName:"sprite"}),e[u._uuid]=u,t.push(u);var _=new s.Material;_._uuid="ui-sprite-gray-alpha-sep-material",_.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!0,IS_GRAY:!0},effectName:"sprite"}),e[_._uuid]=_,t.push(_);var m=new s.Material;m._uuid="ui-graphics-material",m.initialize({effectName:"graphics"}),e[m._uuid]=m,t.push(m);var h=new s.Material;h._uuid="default-particle-material",h.initialize({effectName:"particle"}),e[h._uuid]=h,t.push(h);var d=new s.Material;d._uuid="default-particle-gpu-material",d.initialize({effectName:"particle-gpu"}),e[d._uuid]=d,t.push(d);var p=new s.Material;p._uuid="default-trail-material",p.initialize({effectName:"particle-trail"}),e[p._uuid]=p,t.push(p);var v=new s.Material;v._uuid="default-billboard-material",v.initialize({effectName:"billboard"}),e[v._uuid]=v,t.push(v);var g=new s.Material;g._uuid="default-spine-material",g.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"spine"}),e[g._uuid]=g,t.push(g);var x=new s.Material;x._uuid="builtin-deferred-material",x.initialize({effectName:"deferred-lighting"}),e[x._uuid]=x,t.push(x);var y=new s.Material;y._uuid="builtin-post-process-material",y.initialize({effectName:"post-process"}),e[y._uuid]=y,t.push(y),s.game.on(s.Game.EVENT_GAME_INITED,(function(){for(var e=0;e<t.length;++e)for(var n=t[e],i=0;i<n.passes.length;++i)n.passes[i].tryCompile()}))},e}(),rd=e("es",s.builtinResMgr=new ad),sd=e("el",(td=new Map,nd=0,function(e){return"number"==typeof e?e:(td.has(e)||(td.set(e,1<<nd),nd++),td.get(e))})),cd=new Kr(nr.UNIFORM|nr.TRANSFER_DST,ar.HOST|ar.DEVICE),ld=new Jr(null),fd=new Cs(null);!function(e){e[e.INSTANCING=1]="INSTANCING",e[e.VB_MERGING=2]="VB_MERGING"}(id||(id=e("bK",{})));var ud=e("bL",function(){function e(e){this._rootBuffer=null,this._rootBufferDirty=!1,this._buffers=[],this._descriptorSet=null,this._priority=tf.DEFAULT,this._hash=0,this._pipelineLayout=null,this._primitiveMode=Sr.TRIANGLE_LIST,this._dynamicStates=Ir.NONE,this._stage=ef.DEFAULT,this._phase=sd("default"),this._batchingSchemes=0,this._passIndex=0,this._propertyIndex=0,this._programName="",this._dynamics={},this._propertyHandleMap={},this._rootBlock=null,this._blocks=[],this._shaderInfo=null,this._defines={},this._properties={},this._root=void 0,this._device=void 0,this._hShaderDefault=Co,this._handle=Co,this._bs=new sc,this._dss=new ac,this._rs=new oc,this._root=e,this._device=e.device}e.fillPipelineInfo=function(e,t){void 0!==t.priority&&(e.priority=t.priority),void 0!==t.primitive&&(e.primitive=t.primitive),void 0!==t.stage&&(e.stage=t.stage),void 0!==t.dynamicStates&&(e.dynamicStates=t.dynamicStates),void 0!==t.phase&&(e.phase=sd(t.phase));var n=e._bs;if(t.blendState){var i=t.blendState,o=i.targets;o&&o.forEach((function(e,t){n.setTarget(t,e)})),void 0!==i.isA2C&&(n.isA2C=i.isA2C),void 0!==i.isIndepend&&(n.isIndepend=i.isIndepend),void 0!==i.blendColor&&(n.blendColor=i.blendColor)}e._rs.assign(t.rasterizerState),e._dss.assign(t.depthStencilState)},e.getPassHash=function(e,t){var n,i=t+","+e.primitive+","+e.dynamicStates;return i+=function(e){for(var t,n=",bs,"+e.isA2C,i=ve(e.targets);!(t=i()).done;){var o=t.value;n+=",bt,"+o.blend+","+o.blendEq+","+o.blendAlphaEq+","+o.blendColorMask,n+=","+o.blendSrc+","+o.blendDst+","+o.blendSrcAlpha+","+o.blendDstAlpha}return n}(e._bs),i+=function(e){var t=",dss,"+e.depthTest+","+e.depthWrite+","+e.depthFunc;return t+=","+e.stencilTestFront+","+e.stencilFuncFront+","+e.stencilRefFront+","+e.stencilReadMaskFront,t+=","+e.stencilFailOpFront+","+e.stencilZFailOpFront+","+e.stencilPassOpFront+","+e.stencilWriteMaskFront,(t+=","+e.stencilTestBack+","+e.stencilFuncBack+","+e.stencilRefBack+","+e.stencilReadMaskBack)+","+e.stencilFailOpBack+","+e.stencilZFailOpBack+","+e.stencilPassOpBack+","+e.stencilWriteMaskBack}(e._dss),$s(i+=",rs,"+(n=e._rs).cullMode+","+n.depthBias+","+n.isFrontFaceCCW,666)};var t=e.prototype;return t.initialize=function(e){this._doInit(e),this.resetUBOs(),this.resetTextures(),this.tryCompile()},t.getHandle=function(e,t,n){void 0===t&&(t=0),void 0===n&&(n=tr.UNKNOWN);var i=this._propertyHandleMap[e];return i?(n?i=Hh(i,n):t&&(i=Hh(i,Uh(i)-t)),i+t):0},t.getBinding=function(t){var n=this.getHandle(t);return n?e.getBindingFromHandle(n):-1},t.setUniform=function(t,n){var i=e.getBindingFromHandle(t),o=e.getTypeFromHandle(t),a=e.getOffsetFromHandle(t),r=this._blocks[i];Vh[o](r,n,a),this._rootBufferDirty=!0},t.getUniform=function(t,n){var i=e.getBindingFromHandle(t),o=e.getTypeFromHandle(t),a=e.getOffsetFromHandle(t),r=this._blocks[i];return kh[o](r,n,a)},t.setUniformArray=function(t,n){for(var i=e.getBindingFromHandle(t),o=e.getTypeFromHandle(t),a=js(o)>>2,r=this._blocks[i],s=e.getOffsetFromHandle(t),c=0;c<n.length;c++,s+=a)null!==n[c]&&Vh[o](r,n[c],s);this._rootBufferDirty=!0},t.bindTexture=function(e,t,n){this._descriptorSet.bindTexture(e,t,n||0)},t.bindSampler=function(e,t,n){this._descriptorSet.bindSampler(e,t,n||0)},t.setDynamicState=function(e,t){var n=this._dynamics[e];n&&n.value===t||(n.value=t,n.dirty=!0)},t.overridePipelineStates=function(){console.warn("base pass cannot override states, please use pass instance instead.")},t.update=function(){this._descriptorSet?(this._rootBuffer&&this._rootBufferDirty&&(this._rootBuffer.update(this._rootBlock),this._rootBufferDirty=!1),this._descriptorSet.update()):b(12006)},t.destroy=function(){for(var e=0;e<this._shaderInfo.blocks.length;e++){var t=this._shaderInfo.blocks[e];this._buffers[t.binding].destroy()}this._buffers=[],this._rootBuffer&&(this._rootBuffer.destroy(),this._rootBuffer=null),this._descriptorSet=null,this._rs.destroy(),this._dss.destroy(),this._bs.destroy(),this._handle&&(Io.free(No.get(this._handle,Ao.DESCRIPTOR_SET)),No.free(this._handle),this._handle=Co)},t.resetUniform=function(t){var n=this.getHandle(t);if(n){var i=e.getTypeFromHandle(n),o=e.getBindingFromHandle(n),a=e.getOffsetFromHandle(n),r=this._blocks[o],s=this._properties[t],c=s&&s.value||Wh(i);Vh[i](r,c,a),this._rootBufferDirty=!0}},t.resetTexture=function(t,n){var i=this.getHandle(t);if(i){var o=e.getTypeFromHandle(i),a=e.getBindingFromHandle(i),r=this._properties[t],s=r&&r.value,c=s?s+"-texture":Wh(o),l=rd.get(c),f=l&&l.getGFXTexture(),u=r&&void 0!==r.samplerHash?r.samplerHash:l&&l.getSamplerHash(),_=rm.getSampler(this._device,u);this._descriptorSet.bindSampler(a,_,n),this._descriptorSet.bindTexture(a,f,n)}},t.resetUBOs=function(){for(var e=0;e<this._shaderInfo.blocks.length;e++)for(var t=this._shaderInfo.blocks[e],n=this._blocks[t.binding],i=0,o=0;o<t.members.length;o++){for(var a=t.members[o],r=this._properties[a.name],s=r&&r.value||Wh(a.type),c=(js(a.type)>>2)*a.count,l=0;l+s.length<=c;l+=s.length)n.set(s,i+l);i+=c}this._rootBufferDirty=!0},t.resetTextures=function(){for(var e=0;e<this._shaderInfo.samplerTextures.length;e++)for(var t=this._shaderInfo.samplerTextures[e],n=0;n<t.count;n++)this.resetTexture(t.name,n)},t.tryCompile=function(){var t=this._root.pipeline;return!!t&&(this._syncBatchingScheme(),this._hShaderDefault=ed.getGFXShader(this._device,this._programName,this._defines,t),this._hShaderDefault?(this.pipelineLayoutHandle=ed.getTemplateInfo(this._programName).hPipelineLayout,this.hash=e.getPassHash(this,this._hShaderDefault),!0):(console.warn("create shader "+this._programName+" failed"),!1))},t.getShaderVariant=function(e){if(void 0===e&&(e=null),!this._hShaderDefault&&!this.tryCompile())return console.warn("pass resources incomplete"),Co;if(!e)return this._hShaderDefault;for(var t=this._root.pipeline,n=0;n<e.length;n++){var i=e[n];this._defines[i.name]=i.value}for(var o=ed.getGFXShader(this._device,this._programName,this._defines,t),a=0;a<e.length;a++){var r=e[a];delete this._defines[r.name]}return o},t.beginChangeStatesSilently=function(){},t.endChangeStatesSilently=function(){},t._doInit=function(t,n){void 0===n&&(n=!1),this._handle=No.alloc(),this.priority=tf.DEFAULT,this.stage=ef.DEFAULT,this.phase=sd("default"),this.primitive=Sr.TRIANGLE_LIST,this.rasterizerState=this._rs,this.depthStencilState=this._dss,this.blendState=this._bs,this._passIndex=t.passIndex,this._propertyIndex=void 0!==t.propertyIndex?t.propertyIndex:t.passIndex,this._programName=t.program,this._defines=n?fe({},t.defines):t.defines,this._shaderInfo=ed.getTemplate(t.program),this._properties=t.properties||this._properties;var i=this._device;e.fillPipelineInfo(this,t),t.stateOverrides&&e.fillPipelineInfo(this,t.stateOverrides),fd.layout=ed.getDescriptorSetLayout(this._device,t.program),this.descriptorSetHandle=Io.alloc(this._device,fd);for(var o=this._shaderInfo.blocks,a=ed.getTemplateInfo(t.program),r=a.blockSizes,s=a.handleMap,c=i.capabilities.uboOffsetAlignment,l=[],f=0,u=0,_=0;_<o.length;_++){var m=r[_];l.push(u),u+=Math.ceil(m/c)*c,f=m}var h=l[l.length-1]+f;h&&(cd.size=16*Math.ceil(h/16),this._rootBuffer=i.createBuffer(cd),this._rootBlock=new ArrayBuffer(h));for(var d=0,p=0;d<o.length;d++){var v=o[d].binding,g=r[d];ld.buffer=this._rootBuffer,ld.offset=l[p++],ld.range=16*Math.ceil(g/16);var x=this._buffers[v]=i.createBuffer(ld);this._blocks[v]=new Float32Array(this._rootBlock,ld.offset,g/Float32Array.BYTES_PER_ELEMENT),this._descriptorSet.bindBuffer(v,x)}var y=this._propertyHandleMap=s,E={};for(var S in this._properties){var A=this._properties[S];A.handleInfo&&(E[S]=this.getHandle.apply(this,A.handleInfo))}Object.assign(y,E)},t._syncBatchingScheme=function(){this._defines.USE_INSTANCING?this._device.hasFeature(Za.INSTANCED_ARRAYS)?this.batchingScheme=id.INSTANCING:(this._defines.USE_INSTANCING=!1,this.batchingScheme=0):this._defines.USE_BATCHING?this.batchingScheme=id.VB_MERGING:this.batchingScheme=0},t._destroyHandle=function(){this._handle&&(No.free(this._handle),this._handle=Co)},t._initPassFromTarget=function(e,t,n,i){this._passIndex=e.passIndex,this._propertyIndex=e.propertyIndex,this._programName=e.program,this._defines=e.defines,this._shaderInfo=e._shaderInfo,this._properties=e._properties,this._hShaderDefault=e._hShaderDefault,this._blocks=e._blocks,this._dynamics=e._dynamics,this.priority=e.priority,this.stage=e.stage,this.phase=e.phase,this.batchingScheme=e.batchingScheme,this.primitive=e.primitive,this.dynamicStates=e.dynamicStates,this.hash=e.hash^i,this.rasterizerState=e.rasterizerState,this.blendState=n,this.depthStencilState=t,this.pipelineLayoutHandle=ed.getTemplateInfo(this._programName).hPipelineLayout,this.descriptorSetHandle=No.get(e.handle,Ao.DESCRIPTOR_SET)},le(e,[{key:"root",get:function(){return this._root}},{key:"device",get:function(){return this._device}},{key:"shaderInfo",get:function(){return this._shaderInfo}},{key:"localSetLayout",get:function(){return ed.getDescriptorSetLayout(this._device,this._programName,!0)}},{key:"program",get:function(){return this._programName}},{key:"properties",get:function(){return this._properties}},{key:"defines",get:function(){return this._defines}},{key:"passIndex",get:function(){return this._passIndex}},{key:"propertyIndex",get:function(){return this._propertyIndex}},{key:"dynamics",get:function(){return this._dynamics}},{key:"blocks",get:function(){return this._blocks}},{key:"rootBufferDirty",get:function(){return this._rootBufferDirty}},{key:"handle",get:function(){return this._handle}},{key:"priority",get:function(){return this._priority},set:function(e){this._priority=e,No.set(this._handle,Ao.PRIORITY,e)}},{key:"primitive",get:function(){return this._primitiveMode},set:function(e){this._primitiveMode=e,No.set(this._handle,Ao.PRIMITIVE,e)}},{key:"stage",get:function(){return this._stage},set:function(e){this._stage=e,No.set(this._handle,Ao.STAGE,e)}},{key:"phase",get:function(){return this._phase},set:function(e){this._phase=e,No.set(this._handle,Ao.PHASE,e)}},{key:"dynamicStates",get:function(){return this._dynamicStates},set:function(e){this._dynamicStates=e,No.set(this._handle,Ao.DYNAMIC_STATES,e)}},{key:"batchingScheme",get:function(){return this._batchingSchemes},set:function(e){this._batchingSchemes=e,No.set(this._handle,Ao.BATCHING_SCHEME,e)}},{key:"hash",get:function(){return this._hash},set:function(e){this._hash=e,No.set(this._handle,Ao.HASH,e)}},{key:"pipelineLayoutHandle",set:function(e){this._pipelineLayout=Po.get(e),No.set(this._handle,Ao.PIPELINE_LAYOUT,e)}},{key:"pipelineLayout",get:function(){return this._pipelineLayout}},{key:"descriptorSetHandle",set:function(e){this._descriptorSet=Io.get(e),No.set(this._handle,Ao.DESCRIPTOR_SET,e)}},{key:"descriptorSet",get:function(){return this._descriptorSet}},{key:"rasterizerState",get:function(){return this._rs},set:function(e){this._rs=e,No.set(this._handle,Ao.RASTERIZER_STATE,e.handle)}},{key:"depthStencilState",get:function(){return this._dss},set:function(e){this._dss=e,No.set(this._handle,Ao.DEPTH_STENCIL_STATE,e.handle)}},{key:"blendState",get:function(){return this._bs},set:function(e){this._bs=e,No.set(this._handle,Ao.BLEND_STATE,e.handle)}}]),e}());function _d(e,t){for(var n,i=ve(t);!(n=i()).done;){var o=n.value;Array.isArray(o)?_d(e,o):e.push(o)}}function md(e){var t=[];return _d(t,e),t.join("")}ud.PropertyType=bh,ud.getPropertyTypeFromHandle=Fh,ud.getTypeFromHandle=Uh,ud.getBindingFromHandle=Bh,ud.getOffsetFromHandle=Gh;var hd=li.Flags.Destroyed,dd=li.Flags.PersistentMask,pd=fn.IDENTIFIER_RE,vd="var ",gd="o",xd={"cc.ClickEvent":!1,"cc.PrefabInfo":!1},yd=fn.escapeForJS,Ed=function(){function e(e,t){this.varName=void 0,this.expression=void 0,this.varName=e,this.expression=t}return e.prototype.toString=function(){return vd+this.varName+"="+this.expression+";"},e}();function Sd(e,t){return t instanceof Ed?new Ed(t.varName,e+t.expression):e+t}function Ad(e,t,n){Array.isArray(n)?(n[0]=Sd(t,n[0]),e.push(n)):e.push(Sd(t,n)+";")}var Cd=function(){function e(e){this._exps=void 0,this._targetExp=void 0,this._exps=[],this._targetExp=e}var t=e.prototype;return t.append=function(e,t){this._exps.push([e,t])},t.writeCode=function(e){var t;if(this._exps.length>1)e.push("t="+this._targetExp+";"),t="t";else{if(1!==this._exps.length)return;t=this._targetExp}for(var n=0;n<this._exps.length;n++){var i=this._exps[n];Ad(e,t+Td(i[0])+"=",i[1])}},e}();function Td(e){return pd.test(e)?"."+e:"["+yd(e)+"]"}Cd.pool=void 0,Cd.pool=new _t((function(e){e._exps.length=0,e._targetExp=null}),1),Cd.pool.get=function(e){var t=this._get()||new Cd;return t._targetExp=e,t};var Id=function(){function e(e,t){var n;this.parent=void 0,this.objsToClear_iN$t=void 0,this.codeArray=void 0,this.objs=void 0,this.funcs=void 0,this.funcModuleCache=void 0,this.globalVariables=void 0,this.globalVariableId=void 0,this.localVariableId=void 0,this.result=void 0,this.parent=t,this.objsToClear_iN$t=[],this.codeArray=[],this.objs=[],this.funcs=[],this.funcModuleCache=Ue(),Ke(this.funcModuleCache,xd),this.globalVariables=[],this.globalVariableId=0,this.localVariableId=0,this.codeArray.push("var o,t;","if(R){","o=R;","}else{","o=R=new "+this.getFuncModule(e.constructor,!0)+"();","}"),e._iN$t={globalVar:"R"},this.objsToClear_iN$t.push(e),this.enumerateObject(this.codeArray,e),this.globalVariables.length>0&&(n=vd+this.globalVariables.join(",")+";");var i=md(["return (function(R){",n||[],this.codeArray,"return o;","})"]);this.result=Function("O","F",i)(this.objs,this.funcs);for(var o=0,a=this.objsToClear_iN$t.length;o<a;++o)this.objsToClear_iN$t[o]._iN$t=null;this.objsToClear_iN$t.length=0}var t=e.prototype;return t.getFuncModule=function(e,t){var n=Be(e);if(n){var i=this.funcModuleCache[n];if(i)return i;if(void 0===i){var o=-1!==n.indexOf(".");if(o)try{if(o=e===Function("return "+n)())return this.funcModuleCache[n]=n,n}catch(e){}}}var a=this.funcs.indexOf(e);a<0&&(a=this.funcs.length,this.funcs.push(e));var r="F["+a+"]";return t&&(r="("+r+")"),this.funcModuleCache[n]=r,r},t.getObjRef=function(e){var t=this.objs.indexOf(e);return t<0&&(t=this.objs.length,this.objs.push(e)),"O["+t+"]"},t.setValueType=function(e,t,n,i){var o=Cd.pool.get(i),a=t.constructor.__props__;a||(a=Object.keys(t));for(var r=0;r<a.length;r++){var s=a[r],c=n[s];if(t[s]!==c){var l=this.enumerateField(n,s,c);o.append(s,l)}}o.writeCode(e),Cd.pool.put(o)},t.enumerateCCClass=function(e,t,n){for(var i=n.__values__,o=Gt(n),a=0;a<i.length;a++){var r=i[a],c=t[r],l=o[r+"$_$default"];if(!Pd(l,c))if("object"==typeof c&&c instanceof s.ValueType&&(l=fn.getDefault(l))&&l.constructor===c.constructor){var f=gd+Td(r);this.setValueType(e,l,c,f)}else this.setObjProp(e,t,r,c)}},t.instantiateArray=function(e){if(0===e.length)return"[]";var t="a"+ ++this.localVariableId,n=[new Ed(t,"new Array("+e.length+")")];e._iN$t={globalVar:"",source:n},this.objsToClear_iN$t.push(e);for(var i=0;i<e.length;++i)Ad(n,t+"["+i+"]=",this.enumerateField(e,i,e[i]));return n},t.instantiateTypedArray=function(e){var t=e.constructor.name;if(0===e.length)return"new "+t;var n="a"+ ++this.localVariableId,i=[new Ed(n,"new "+t+"("+e.length+")")];e._iN$t={globalVar:"",source:i},this.objsToClear_iN$t.push(e);for(var o=0;o<e.length;++o)0!==e[o]&&Ad(i,n+"["+o+"]=",e[o]);return i},t.enumerateField=function(e,t,n){if("object"==typeof n&&n){var i=n._iN$t;if(i){var o=i.globalVar;if(!o){o=i.globalVar="v"+ ++this.globalVariableId,this.globalVariables.push(o);var a=i.source[0];i.source[0]=Sd(o+"=",a)}return o}return ArrayBuffer.isView(n)?this.instantiateTypedArray(n):Array.isArray(n)?this.instantiateArray(n):this.instantiateObj(n)}return"function"==typeof n?this.getFuncModule(n):"string"==typeof n?yd(n):("_objFlags"===t&&e instanceof li&&(n&=dd),n)},t.setObjProp=function(e,t,n,i){Ad(e,gd+Td(n)+"=",this.enumerateField(t,n,i))},t.enumerateObject=function(e,t){var n=t.constructor;if(s.Class._isCCClass(n))this.enumerateCCClass(e,t,n);else for(var i in t)if(t.hasOwnProperty(i)&&(95!==i.charCodeAt(0)||95!==i.charCodeAt(1)||"__type__"===i)){var o=t[i];"object"==typeof o&&o&&o===t._iN$t||this.setObjProp(e,t,i,o)}},t.instantiateObj=function(e){if(e instanceof s.ValueType)return fn.getNewValueTypeCode(e);if(e instanceof s.Asset)return this.getObjRef(e);if(e._objFlags&hd)return null;var t,n=e.constructor;if(s.Class._isCCClass(n)){if(this.parent)if(this.parent instanceof s.Component){if(e instanceof s._BaseNode||e instanceof s.Component)return this.getObjRef(e)}else if(this.parent instanceof s._BaseNode)if(e instanceof s._BaseNode){if(!e.isChildOf(this.parent))return this.getObjRef(e)}else if(e instanceof s.Component&&!e.node.isChildOf(this.parent))return this.getObjRef(e);t=new Ed(gd,"new "+this.getFuncModule(n,!0)+"()")}else if(n===Object)t=new Ed(gd,"{}");else{if(n)return this.getObjRef(e);t=new Ed(gd,"Object.create(null)")}var i=[t];return e._iN$t={globalVar:"",source:i},this.objsToClear_iN$t.push(e),this.enumerateObject(i,e),["(function(){",i,"return o;})();"]},e}();function Pd(e,t){if("function"==typeof e)try{e=e()}catch(e){return!1}if(e===t)return!0;if(e&&t&&"object"==typeof e&&"object"==typeof t&&e.constructor===t.constructor)if(e instanceof s.ValueType){if(e.equals(t))return!0}else{if(Array.isArray(e))return 0===e.length&&0===t.length;if(e.constructor===Object)return Oe(e)&&Oe(t)}return!1}var wd,Rd=function(){function e(e){this._uiComp=null,this.opacity=1,this.localOpacity=1,this._uiTransformComp=null,this._node=void 0,this.uiTransformDirty=!0,this._node=e}return le(e,[{key:"uiTransformComp",get:function(){return this._uiTransformComp||(this._uiTransformComp=this._node.getComponent("cc.UITransform")),this._uiTransformComp},set:function(e){this._uiTransformComp=e}},{key:"uiComp",get:function(){return this._uiComp},set:function(e){this._uiComp&&e?w(12002):this._uiComp=e}}]),e}();!function(e){e.TOUCH_START="touch-start",e.TOUCH_MOVE="touch-move",e.TOUCH_END="touch-end",e.TOUCH_CANCEL="touch-cancel",e.MOUSE_DOWN="mouse-down",e.MOUSE_MOVE="mouse-move",e.MOUSE_UP="mouse-up",e.MOUSE_WHEEL="mouse-wheel",e.MOUSE_ENTER="mouse-enter",e.MOUSE_LEAVE="mouse-leave",e.KEY_DOWN="keydown",e.KEY_UP="keyup",e.DEVICEMOTION="devicemotion",e.TRANSFORM_CHANGED="transform-changed",e.SCENE_CHANGED_FOR_PERSISTS="scene-changed-for-persists",e.SIZE_CHANGED="size-changed",e.ANCHOR_CHANGED="anchor-changed",e.COLOR_CHANGED="color-changed",e.CHILD_ADDED="child-added",e.CHILD_REMOVED="child-removed",e.PARENT_CHANGED="parent-changed",e.NODE_DESTROYED="node-destroyed",e.LAYER_CHANGED="layer-changed",e.SIBLING_ORDER_CHANGED="sibling-order-changed"}(wd||(wd=e("ej",{}))),xt(wd),s.SystemEventType=wd;var bd=e("eY",function(){function e(e,t,n){this._cameraPriority=0,this.owner=null,this.mask=null,this._previousIn=!1,this._target=null,this._onEvent=void 0,this._type=void 0,this._listenerID=void 0,this._registered=!1,this._fixedPriority=0,this._node=null,this._paused=!0,this._isEnabled=!0,this._onEvent=n,this._type=e||0,this._listenerID=t||""}e.create=function(e){M(e&&e.event,1900);var t=e.event;delete e.event;var n=null;if(t===s.EventListener.TOUCH_ONE_BY_ONE?n=new Dd:t===s.EventListener.TOUCH_ALL_AT_ONCE?n=new Md:t===s.EventListener.MOUSE?n=new Od:t===s.EventListener.KEYBOARD?n=new zd:t===s.EventListener.ACCELERATION&&(n=new Ld(e.callback),delete e.callback),n)for(var i=0,o=Object.keys(e);i<o.length;i++){var a=o[i];n[a]=e[a]}return n};var t=e.prototype;return t._setPaused=function(e){this._paused=e},t._isPaused=function(){return this._paused},t._setRegistered=function(e){this._registered=e},t._isRegistered=function(){return this._registered},t._getType=function(){return this._type},t._getListenerID=function(){return this._listenerID},t._setFixedPriority=function(e){this._fixedPriority=e},t._getFixedPriority=function(){return this._fixedPriority},t._setSceneGraphPriority=function(e){this._target=e,this._node=e},t._getSceneGraphPriority=function(){return this._node},t.checkAvailable=function(){return null!==this._onEvent},t.clone=function(){return null},t.setEnabled=function(e){this._isEnabled=e},t.isEnabled=function(){return this._isEnabled},le(e,[{key:"onEvent",get:function(){return this._onEvent}}]),e}());bd.UNKNOWN=0,bd.TOUCH_ONE_BY_ONE=1,bd.TOUCH_ALL_AT_ONCE=2,bd.KEYBOARD=3,bd.MOUSE=4,bd.ACCELERATION=6,bd.CUSTOM=8,bd.ListenerID={MOUSE:"__cc_mouse",TOUCH_ONE_BY_ONE:"__cc_touch_one_by_one",TOUCH_ALL_AT_ONCE:"__cc_touch_all_at_once",KEYBOARD:"__cc_keyboard",ACCELERATION:"__cc_acceleration"};var Nd=bd.ListenerID,Od=function(e){function t(){var t;return(t=e.call(this,bd.MOUSE,Nd.MOUSE,null)||this).onMouseDown=null,t.onMouseUp=null,t.onMouseMove=null,t.onMouseScroll=null,t._onEvent=function(e){return t._callback(e)},t}ue(t,e);var n=t.prototype;return n._callback=function(e){switch(e.eventType){case wd.MOUSE_DOWN:this.onMouseDown&&this.onMouseDown(e);break;case wd.MOUSE_UP:this.onMouseUp&&this.onMouseUp(e);break;case wd.MOUSE_MOVE:this.onMouseMove&&this.onMouseMove(e);break;case wd.MOUSE_WHEEL:this.onMouseScroll&&this.onMouseScroll(e)}},n.clone=function(){var e=new t;return e.onMouseDown=this.onMouseDown,e.onMouseUp=this.onMouseUp,e.onMouseMove=this.onMouseMove,e.onMouseScroll=this.onMouseScroll,e},n.checkAvailable=function(){return!0},t}(bd),Dd=function(e){function t(){var t;return(t=e.call(this,bd.TOUCH_ONE_BY_ONE,Nd.TOUCH_ONE_BY_ONE,null)||this).swallowTouches=!1,t.onTouchBegan=null,t.onTouchMoved=null,t.onTouchEnded=null,t.onTouchCancelled=null,t._claimedTouches=[],t}ue(t,e);var n=t.prototype;return n.setSwallowTouches=function(e){this.swallowTouches=e},n.isSwallowTouches=function(){return this.swallowTouches},n.clone=function(){var e=new t;return e.onTouchBegan=this.onTouchBegan,e.onTouchMoved=this.onTouchMoved,e.onTouchEnded=this.onTouchEnded,e.onTouchCancelled=this.onTouchCancelled,e.swallowTouches=this.swallowTouches,e},n.checkAvailable=function(){return!!this.onTouchBegan||(I(1801),!1)},t}(bd),Md=function(e){function t(){var t;return(t=e.call(this,bd.TOUCH_ALL_AT_ONCE,Nd.TOUCH_ALL_AT_ONCE,null)||this).onTouchesBegan=null,t.onTouchesMoved=null,t.onTouchesEnded=null,t.onTouchesCancelled=null,t}ue(t,e);var n=t.prototype;return n.clone=function(){var e=new t;return e.onTouchesBegan=this.onTouchesBegan,e.onTouchesMoved=this.onTouchesMoved,e.onTouchesEnded=this.onTouchesEnded,e.onTouchesCancelled=this.onTouchesCancelled,e},n.checkAvailable=function(){return null!==this.onTouchesBegan||null!==this.onTouchesMoved||null!==this.onTouchesEnded||null!==this.onTouchesCancelled||(I(1802),!1)},t}(bd),Ld=function(e){function t(t){var n;return(n=e.call(this,bd.ACCELERATION,Nd.ACCELERATION,null)||this)._onAccelerationEvent=null,n._onEvent=function(e){return n._callback(e)},n._onAccelerationEvent=t,n}ue(t,e);var n=t.prototype;return n._callback=function(e){this._onAccelerationEvent&&this._onAccelerationEvent(e.acc,e)},n.checkAvailable=function(){return M(this._onAccelerationEvent,1803),!0},n.clone=function(){return new t(this._onAccelerationEvent)},t}(bd),zd=function(e){function t(){var t;return(t=e.call(this,bd.KEYBOARD,Nd.KEYBOARD,null)||this).onKeyPressed=null,t.onKeyReleased=null,t._onEvent=function(e){return t._callback(e)},t}ue(t,e);var n=t.prototype;return n._callback=function(e){e.isPressed?this.onKeyPressed&&this.onKeyPressed(e.keyCode,e):this.onKeyReleased&&this.onKeyReleased(e.keyCode,e)},n.clone=function(){var e=new t;return e.onKeyPressed=this.onKeyPressed,e.onKeyReleased=this.onKeyReleased,e},n.checkAvailable=function(){return null!==this.onKeyPressed||null!==this.onKeyReleased||(I(1800),!1)},t}(bd);s.EventListener=bd;var Fd=bd.ListenerID,Ud=function(){function e(){this.gt0Index=0,this._fixedListeners=[],this._sceneGraphListeners=[]}var t=e.prototype;return t.size=function(){return this._fixedListeners.length+this._sceneGraphListeners.length},t.empty=function(){return 0===this._fixedListeners.length&&0===this._sceneGraphListeners.length},t.push=function(e){0===e._getFixedPriority()?this._sceneGraphListeners.push(e):this._fixedListeners.push(e)},t.clearSceneGraphListeners=function(){this._sceneGraphListeners.length=0},t.clearFixedListeners=function(){this._fixedListeners.length=0},t.clear=function(){this._sceneGraphListeners.length=0,this._fixedListeners.length=0},t.getFixedPriorityListeners=function(){return this._fixedListeners},t.getSceneGraphPriorityListeners=function(){return this._sceneGraphListeners},e}(),Bd=function(){function e(){this._listenersMap={},this._priorityDirtyFlagMap={},this._nodeListenersMap={},this._toAddedListeners=[],this._toRemovedListeners=[],this._dirtyListeners={},this._inDispatch=0,this._isEnabled=!1,this._internalCustomListenerIDs=[],this._currentTouch=null,this._currentTouchListener=null}var t=e.prototype;return t.pauseTarget=function(e,t){if(void 0===t&&(t=!1),e instanceof s._BaseNode){var n=this._nodeListenersMap[e.uuid];if(n)for(var i=0;i<n.length;++i)n[i]._setPaused(!0);if(!0===t){var o=e.children;if(o)for(var a=0;a<o.length;++a){var r=o[a];this.pauseTarget(r,!0)}}}else w(3506)},t.resumeTarget=function(e,t){if(void 0===t&&(t=!1),e instanceof s._BaseNode){var n=this._nodeListenersMap[e.uuid];if(n)for(var i=0;i<n.length;++i)n[i]._setPaused(!1);if(this._setDirtyForNode(e),!0===t&&e.children.length>0){var o=e.children;if(o)for(var a=0;a<o.length;++a){var r=o[a];this.resumeTarget(r,!0)}}}else w(3506)},t.frameUpdateListeners=function(){var e=this._listenersMap,t=this._priorityDirtyFlagMap;for(var n in e)e[n].empty()&&(delete t[n],delete e[n]);var i=this._toAddedListeners;if(0!==i.length){for(var o=0,a=i.length;o<a;o++)this._forceAddEventListener(i[o]);i.length=0}0!==this._toRemovedListeners.length&&this._cleanToRemovedListeners()},t.hasEventListener=function(e){return!!this._getListeners(e)},t.addListener=function(e,t){if(M(e&&t,3503),!(s.js.isNumber(t)||t instanceof s._BaseNode))return w(3506),null;if(e instanceof s.EventListener){if(e._isRegistered())return I(3505),null}else M(!s.js.isNumber(t),3504),e=s.EventListener.create(e);if(!e.checkAvailable())return null;if(s.js.isNumber(t)){if(0===t)return I(3500),null;e._setSceneGraphPriority(null),e._setFixedPriority(t),e._setRegistered(!0),e._setPaused(!1),this._addListener(e)}else{if(!(n=t)||!n.getComponent("cc.UITransform"))return I(3512),null;e._setSceneGraphPriority(t),e._setFixedPriority(0),e._setRegistered(!0),this._addListener(e)}var n;return e},t.addCustomListener=function(e,t){var n=bd.create({event:s.EventListener.CUSTOM,eventName:e,callback:t});return this.addListener(n,1),n},t.removeListener=function(e){if(null!=e){var t=!1,n=this._listenersMap;for(var i in e===this._currentTouchListener&&(this._currentTouchListener=this._currentTouch=null),n){var o=n[i],a=o.getFixedPriorityListeners(),r=o.getSceneGraphPriorityListeners();if((t=this._removeListenerInVector(r,e))?this._setDirty(e._getListenerID(),2):(t=this._removeListenerInVector(a,e))&&this._setDirty(e._getListenerID(),1),o.empty()&&(delete this._priorityDirtyFlagMap[e._getListenerID()],delete n[i]),t)break}if(!t)for(var c=this._toAddedListeners,l=c.length-1;l>=0;l--){var f=c[l];if(f===e){s.js.array.removeAt(c,l),f._setRegistered(!1);break}}}},t.removeListeners=function(e,t){if(void 0===t&&(t=!1),s.js.isNumber(e)||e instanceof s._BaseNode)if(void 0!==e._id){var n=this._nodeListenersMap[e._id];if(n){for(var i=s.js.array.copy(n),o=0;o<i.length;++o){var a=i[o];this.removeListener(a)}delete this._nodeListenersMap[e._id]}for(var r=this._toAddedListeners,c=0;c<r.length;){var l=r[c];l._getSceneGraphPriority()===e?(l._setSceneGraphPriority(null),l._setRegistered(!1),r.splice(c,1)):++c}if(!0===t)for(var f=e.getChildren(),u=0;u<f.length;++u){var _=f[u];this.removeListeners(_,!0)}}else e===s.EventListener.TOUCH_ONE_BY_ONE?this._removeListenersForListenerID(Fd.TOUCH_ONE_BY_ONE):e===s.EventListener.TOUCH_ALL_AT_ONCE?this._removeListenersForListenerID(Fd.TOUCH_ALL_AT_ONCE):e===s.EventListener.MOUSE?this._removeListenersForListenerID(Fd.MOUSE):e===s.EventListener.ACCELERATION?this._removeListenersForListenerID(Fd.ACCELERATION):e===s.EventListener.KEYBOARD?this._removeListenersForListenerID(Fd.KEYBOARD):I(3501);else w(3506)},t.removeCustomListeners=function(e){this._removeListenersForListenerID(e)},t.removeAllListeners=function(){var e=this._listenersMap,t=this._internalCustomListenerIDs;for(var n in e)-1===t.indexOf(n)&&this._removeListenersForListenerID(n)},t.setPriority=function(e,t){if(null!=e){var n=this._listenersMap;for(var i in n){var o=n[i].getFixedPriorityListeners();if(o&&-1!==o.indexOf(e))return null!=e._getSceneGraphPriority()&&I(3502),void(e._getFixedPriority()!==t&&(e._setFixedPriority(t),this._setDirty(e._getListenerID(),1)))}}},t.setEnabled=function(e){this._isEnabled=e},t.isEnabled=function(){return this._isEnabled},t.dispatchEvent=function(e){if(this._isEnabled)if(this._updateDirtyFlagForSceneGraph(),this._inDispatch++,e&&e.getType){if(e.getType().startsWith(s.Event.TOUCH))return this._dispatchTouchEvent(e),void this._inDispatch--;var t=function(e){var t=R_,n=e.type;return n===t.ACCELERATION?Fd.ACCELERATION:n===t.KEYBOARD?Fd.KEYBOARD:n.startsWith(t.MOUSE)?Fd.MOUSE:(n.startsWith(t.TOUCH)&&I(2e3),"")}(e);this._sortEventListeners(t);var n=this._listenersMap[t];null!=n&&(this._dispatchEventToListeners(n,this._onListenerCallback,e),this._onUpdateListeners(n)),this._inDispatch--}else b(3511)},t._onListenerCallback=function(e,t){t.currentTarget=e._target;var n=e.onEvent;return n&&n(t),t.isStopped()},t.dispatchCustomEvent=function(e,t){var n=new s.Event.EventCustom(e);n.setUserData(t),this.dispatchEvent(n)},t._setDirtyForNode=function(e){var t=this._nodeListenersMap[e._id];if(void 0!==t)for(var n=0,i=t.length;n<i;n++){var o=t[n]._getListenerID();this._dirtyListeners[o]||(this._dirtyListeners[o]=!0)}if(e.children.length>0)for(var a=e.children,r=0,s=a?a.length:0;r<s;r++)this._setDirtyForNode(a[r])},t._addListener=function(e){0===this._inDispatch?this._forceAddEventListener(e):this._toAddedListeners.push(e)},t._forceAddEventListener=function(e){var t=e._getListenerID(),n=this._listenersMap[t];if(n||(n=new Ud,this._listenersMap[t]=n),n.push(e),0===e._getFixedPriority()){this._setDirty(t,2);var i=e._getSceneGraphPriority();null===i&&I(3507),this._associateNodeAndEventListener(i,e),i.activeInHierarchy&&this.resumeTarget(i)}else this._setDirty(t,1)},t._getListeners=function(e){return this._listenersMap[e]},t._updateDirtyFlagForSceneGraph=function(){var e=this._dirtyListeners;for(var t in e)this._setDirty(t,2),e[t]=!1},t._removeAllListenersInVector=function(e){if(e)for(var t,n=e.length-1;n>=0;n--)(t=e[n])._setRegistered(!1),null!=t._getSceneGraphPriority()&&(this._dissociateNodeAndEventListener(t._getSceneGraphPriority(),t),t._setSceneGraphPriority(null)),0===this._inDispatch&&s.js.array.removeAt(e,n)},t._removeListenersForListenerID=function(e){var t=this._listenersMap[e];if(t){var n=t.getFixedPriorityListeners(),i=t.getSceneGraphPriorityListeners();this._removeAllListenersInVector(i),this._removeAllListenersInVector(n),delete this._priorityDirtyFlagMap[e],this._inDispatch||(t.clear(),delete this._listenersMap[e])}for(var o=this._toAddedListeners,a=o.length-1;a>=0;a--){var r=o[a];r&&r._getListenerID()===e&&s.js.array.removeAt(o,a)}},t._sortEventListeners=function(e){var t=0,n=this._priorityDirtyFlagMap;n[e]&&(t=n[e]),0!==t&&(n[e]=0,1&t&&this._sortListenersOfFixedPriority(e),2&t&&s.director.getScene()&&this._sortListenersOfSceneGraphPriority(e))},t._sortListenersOfSceneGraphPriority=function(e){var t=this._getListeners(e);if(t){var n=t.getSceneGraphPriorityListeners();if(n&&0!==n.length){var i=t.getSceneGraphPriorityListeners();i.forEach((function(e){var t=e._getSceneGraphPriority()._uiProps.uiTransformComp;e._cameraPriority=t.cameraPriority})),i.sort(this._sortEventListenersOfSceneGraphPriorityDes)}}},t._sortEventListenersOfSceneGraphPriorityDes=function(e,t){var n=e._getSceneGraphPriority(),i=t._getSceneGraphPriority();if(!(t&&i&&i._activeInHierarchy&&i._uiProps.uiTransformComp))return-1;if(!(e&&n&&n._activeInHierarchy&&n._uiProps.uiTransformComp))return 1;var o=n,a=i,r=!1;if(e._cameraPriority!==t._cameraPriority)return t._cameraPriority-e._cameraPriority;for(;o.parent._id!==a.parent._id;)o=null===o.parent.parent?(r=!0)&&i:o.parent,a=null===a.parent.parent?(r=!0)&&n:a.parent;if(o._id===a._id){if(o._id===i._id)return-1;if(o._id===n._id)return 1}var s=o.getSiblingIndex(),c=a.getSiblingIndex();return r?s-c:c-s},t._sortListenersOfFixedPriority=function(e){var t=this._listenersMap[e];if(t){var n=t.getFixedPriorityListeners();if(n&&0!==n.length){n.sort(this._sortListenersOfFixedPriorityAsc);for(var i=0,o=n.length;i<o&&!(n[i]._getFixedPriority()>=0);)++i;t.gt0Index=i}}},t._sortListenersOfFixedPriorityAsc=function(e,t){return e._getFixedPriority()-t._getFixedPriority()},t._onUpdateListeners=function(e){var t=e.getFixedPriorityListeners(),n=e.getSceneGraphPriorityListeners(),i=this._toRemovedListeners;if(n)for(var o=n.length-1;o>=0;o--){var a=n[o];if(!a._isRegistered()){s.js.array.removeAt(n,o);var r=i.indexOf(a);-1!==r&&i.splice(r,1)}}if(t)for(var c=t.length-1;c>=0;c--){var l=t[c];if(!l._isRegistered()){s.js.array.removeAt(t,c);var f=i.indexOf(l);-1!==f&&i.splice(f,1)}}n&&0===n.length&&e.clearSceneGraphListeners(),t&&0===t.length&&e.clearFixedListeners()},t._updateTouchListeners=function(){var e=this._inDispatch;if(M(e>0,3508),!(e>1)){var t;(t=this._listenersMap[Fd.TOUCH_ONE_BY_ONE])&&this._onUpdateListeners(t),(t=this._listenersMap[Fd.TOUCH_ALL_AT_ONCE])&&this._onUpdateListeners(t),M(1===e,3509);var n=this._toAddedListeners;if(0!==n.length){for(var i=0,o=n.length;i<o;i++)this._forceAddEventListener(n[i]);this._toAddedListeners.length=0}0!==this._toRemovedListeners.length&&this._cleanToRemovedListeners()}},t._cleanToRemovedListeners=function(){for(var e=this._toRemovedListeners,t=0;t<e.length;++t){var n=e[t],i=this._listenersMap[n._getListenerID()];if(i){var o=i.getFixedPriorityListeners(),a=i.getSceneGraphPriorityListeners();if(a){var r=a.indexOf(n);-1!==r&&a.splice(r,1)}if(o){var s=o.indexOf(n);-1!==s&&o.splice(s,1)}}}e.length=0},t._onTouchEventCallback=function(e,t){if(!e._isRegistered())return!1;var n=t.event,i=n.touch;n.currentTarget=e._getSceneGraphPriority();var o=!1,a=-1,r=n.getEventCode();if(r===wd.TOUCH_START){if(!Et.ENABLE_MULTI_TOUCH&&Gd._currentTouch){var s=Gd._currentTouchListener._node;if(!s||s.activeInHierarchy)return!1}e.onTouchBegan&&(o=e.onTouchBegan(i,n))&&e._isRegistered()&&!e._isPaused()&&(e._claimedTouches.push(i),!Et.ENABLE_MULTI_TOUCH&&Gd._currentTouch||(Gd._currentTouch=i),Gd._currentTouchListener=e)}else if(e._claimedTouches.length>0&&-1!==(a=e._claimedTouches.indexOf(i))){if(o=!0,!Et.ENABLE_MULTI_TOUCH&&Gd._currentTouch&&Gd._currentTouch!==i)return!1;r===wd.TOUCH_MOVE&&e.onTouchMoved?e.onTouchMoved(i,n):r===wd.TOUCH_END?(e.onTouchEnded&&e.onTouchEnded(i,n),e._isRegistered()&&e._claimedTouches.splice(a,1),(Et.ENABLE_MULTI_TOUCH||Gd._currentTouch===i)&&(Gd._currentTouch=null),Gd._currentTouchListener=null):r===wd.TOUCH_CANCEL&&(e.onTouchCancelled&&e.onTouchCancelled(i,n),e._isRegistered()&&e._claimedTouches.splice(a,1),(Et.ENABLE_MULTI_TOUCH||Gd._currentTouch===i)&&(Gd._currentTouch=null),Gd._currentTouchListener=null)}return n.isStopped()?(Gd._updateTouchListeners(n),!0):!!(o&&e._isRegistered()&&e.swallowTouches)&&(t.needsMutableSet&&t.touches.splice(i,1),!0)},t._dispatchTouchEvent=function(e){this._sortEventListeners(Fd.TOUCH_ONE_BY_ONE),this._sortEventListeners(Fd.TOUCH_ALL_AT_ONCE);var t=this._getListeners(Fd.TOUCH_ONE_BY_ONE),n=this._getListeners(Fd.TOUCH_ALL_AT_ONCE);if(null!==t||null!==n){var i=e.getTouches(),o=s.js.array.copy(i),a={event:e,needsMutableSet:t&&n,touches:o,selTouch:null};if(t)for(var r=0;r<i.length;++r){var c=i[r];e.touch=c,e.propagationStopped=e.propagationImmediateStopped=!1,this._dispatchEventToListeners(t,this._onTouchEventCallback,a)}n&&o.length>0&&(this._dispatchEventToListeners(n,this._onTouchesEventCallback,{event:e,touches:o}),e.isStopped())||this._updateTouchListeners(e)}},t._onTouchesEventCallback=function(e,t){if(!e._isRegistered())return!1;var n=t.event,i=t.touches,o=n.getEventCode();return n.currentTarget=e._getSceneGraphPriority(),o===wd.TOUCH_START&&e.onTouchesBegan?e.onTouchesBegan(i,n):o===wd.TOUCH_MOVE&&e.onTouchesMoved?e.onTouchesMoved(i,n):o===wd.TOUCH_END&&e.onTouchesEnded?e.onTouchesEnded(i,n):o===wd.TOUCH_CANCEL&&e.onTouchesCancelled&&e.onTouchesCancelled(i,n),!!n.isStopped()&&(Gd._updateTouchListeners(n),!0)},t._associateNodeAndEventListener=function(e,t){var n=this._nodeListenersMap[e.uuid];n||(n=[],this._nodeListenersMap[e.uuid]=n),n.push(t)},t._dissociateNodeAndEventListener=function(e,t){var n=this._nodeListenersMap[e.uuid];n&&(s.js.array.remove(n,t),0===n.length&&delete this._nodeListenersMap[e.uuid])},t._dispatchEventToListeners=function(e,t,n){var i=!1,o=e.getFixedPriorityListeners(),a=e.getSceneGraphPriorityListeners(),r=0;if(o&&0!==o.length)for(;r<e.gt0Index;++r){var s=o[r];if(s.isEnabled()&&!s._isPaused()&&s._isRegistered()&&t(s,n)){i=!0;break}}if(a&&!i)for(var c=0;c<a.length;++c){var l=a[c];if(l.isEnabled()&&!l._isPaused()&&l._isRegistered()&&t(l,n)){i=!0;break}}if(o&&!i)for(;r<o.length;++r){var f=o[r];if(f.isEnabled()&&!f._isPaused()&&f._isRegistered()&&t(f,n)){i=!0;break}}},t._setDirty=function(e,t){var n=this._priorityDirtyFlagMap;null==n[e]?n[e]=t:n[e]|=t},t._sortNumberAsc=function(e,t){return e-t},t._removeListenerInCallback=function(e,t){if(null==e)return!1;for(var n=e.length-1;n>=0;n--){var i=e[n];if(i._onCustomEvent===t||i.onEvent===t)return i._setRegistered(!1),null!=i._getSceneGraphPriority()&&(this._dissociateNodeAndEventListener(i._getSceneGraphPriority(),i),i._setSceneGraphPriority(null)),0===this._inDispatch?s.js.array.removeAt(e,n):this._toRemovedListeners.push(i),!0}return!1},t._removeListenerInVector=function(e,t){if(null==e)return!1;for(var n=e.length-1;n>=0;n--){var i=e[n];if(i===t)return i._setRegistered(!1),null!=i._getSceneGraphPriority()&&(this._dissociateNodeAndEventListener(i._getSceneGraphPriority(),i),i._setSceneGraphPriority(null)),0===this._inDispatch?s.js.array.removeAt(e,n):this._toRemovedListeners.push(i),!0}return!1},e}(),Gd=e("ei",new Bd);s.eventManager=Gd,li.Flags.Destroying;var Hd,kd,Vd,jd,Wd,qd,Yd,Xd,Kd,Jd=li.Flags.Destroying,Qd=li.Flags.DontDestroy,Zd=li.Flags.Deactivating,$d=new Ie("Node");function ep(e){return e?"string"==typeof e?ft(e):e:(b(3804),null)}var tp=e("em",Ou("cc.BaseNode")((Kd=Xd=function(e){ue(i,e),i._setScene=function(e){e._updateScene()},i._findComponent=function(e,t){var n=t,i=e._components;if(n._sealed)for(var o=0;o<i.length;++o){var a=i[o];if(a.constructor===t)return a}else for(var r=0;r<i.length;++r){var s=i[r];if(s instanceof t)return s}return null},i._findComponents=function(e,t,n){var i=t,o=e._components;if(i._sealed)for(var a=0;a<o.length;++a){var r=o[a];r.constructor===t&&n.push(r)}else for(var s=0;s<o.length;++s){var c=o[s];c instanceof t&&n.push(c)}},i._findChildComponent=function(e,t){for(var n=0;n<e.length;++n){var o=e[n],a=i._findComponent(o,t);if(a)return a;if(o._children.length>0&&(a=i._findChildComponent(o._children,t)))return a}return null},i._findChildComponents=function(e,t,n){for(var o=0;o<e.length;++o){var a=e[o];i._findComponents(a,t,n),a._children.length>0&&i._findChildComponents(a._children,t,n)}};var n=i.prototype;function i(t){var n;return ge(n=e.call(this,t)||this,"_parent",Vd,de(n)),ge(n,"_children",jd,de(n)),ge(n,"_active",Wd,de(n)),ge(n,"_components",qd,de(n)),ge(n,"_prefab",Yd,de(n)),n._scene=null,n._activeInHierarchy=!1,n._id=$d.getNewId(),n._name=void 0,n._eventProcessor=new s.NodeEventProcessor(de(n)),n._eventMask=0,n._siblingIndex=0,n._originalSceneId="",n._registerIfAttached=void 0,n._name=void 0!==t?t:"New Node",n}return n._updateScene=function(){null==this._parent?x("Node %s(%s) has not attached to a scene.",this.name,this.uuid):this._scene=this._parent._scene},n.attr=function(e){Ke(this,e)},n.getParent=function(){return this._parent},n.setParent=function(e,t){if(void 0===t&&(t=!1),this._parent!==e){var n=this._parent,i=e;if(this._parent=i,this._siblingIndex=0,this._onSetParent(n,t),this.emit&&this.emit(wd.PARENT_CHANGED,n),n&&!(n._objFlags&Jd)){var o=n._children.indexOf(this);n._children.splice(o,1),n._updateSiblingIndex(),n.emit&&n.emit(wd.CHILD_REMOVED,this)}i&&(i._children.push(this),this._siblingIndex=i._children.length-1,i.emit&&i.emit(wd.CHILD_ADDED,this)),this._onHierarchyChanged(n)}},n.getChildByUuid=function(e){if(!e)return v("Invalid uuid"),null;for(var t=this._children,n=0,i=t.length;n<i;n++)if(t[n]._id===e)return t[n];return null},n.getChildByName=function(e){if(!e)return v("Invalid name"),null;for(var t=this._children,n=0,i=t.length;n<i;n++)if(t[n]._name===e)return t[n];return null},n.getChildByPath=function(e){for(var t=e.split("/"),n=this,i=function(e){var i=t[e];if(0===i.length)return"continue";var o=n.children.find((function(e){return e.name===i}));if(!o)return{v:null};n=o},o=0;o<t.length;++o){var a=i(o);if("continue"!==a&&"object"==typeof a)return a.v}return n},n.addChild=function(e){e.setParent(this)},n.insertChild=function(e,t){e.parent=this,e.setSiblingIndex(t)},n.getSiblingIndex=function(){return this._siblingIndex},n.setSiblingIndex=function(e){if(this._parent)if(this._parent._objFlags&Zd)b(3821);else{var t=this._parent._children;e=-1!==e?e:t.length-1;var n=t.indexOf(this);e!==n&&(t.splice(n,1),e<t.length?t.splice(e,0,this):t.push(this),this._parent._updateSiblingIndex(),this._onSiblingIndexChanged&&this._onSiblingIndexChanged(e))}},n.walk=function(e,t){var n=1,o=null,a=null,r=0,s=i._stacks[i._stackId];s||(s=[],i._stacks.push(s)),i._stackId++,s.length=0,s[0]=this;for(var c=null,l=!1;n;)if(a=s[--n])if(!l&&e?e(a):l&&t&&t(a),s[n]=null,l){if(c===this._parent)break;if(l=!1,o)if(o[++r])s[n]=o[r],n++;else if(c&&(s[n]=c,n++,l=!0,c._parent?(r=(o=c._parent._children).indexOf(c),c=c._parent):(c=null,o=null),r<0))break}else a._children.length>0?(c=a,o=a._children,r=0,s[n]=o[r],n++):(s[n]=a,n++,l=!0);s.length=0,i._stackId--},n.removeFromParent=function(){this._parent&&this._parent.removeChild(this)},n.removeChild=function(e){this._children.indexOf(e)>-1&&(e.parent=null)},n.removeAllChildren=function(){for(var e=this._children,t=e.length-1;t>=0;t--){var n=e[t];n&&(n.parent=null)}this._children.length=0},n.isChildOf=function(e){var t=this;do{if(t===e)return!0;t=t._parent}while(t);return!1},n.getComponent=function(e){var t=ep(e);return t?i._findComponent(this,t):null},n.getComponents=function(e){var t=ep(e),n=[];return t&&i._findComponents(this,t,n),n},n.getComponentInChildren=function(e){var t=ep(e);return t?i._findChildComponent(this._children,t):null},n.getComponentsInChildren=function(e){var t=ep(e),n=[];return t&&(i._findComponents(this,t,n),i._findChildComponents(this._children,t,n)),n},n.addComponent=function(e){var t;if("string"==typeof e){if(!(t=ft(e)))throw s._RF.peek()&&b(3808,e),TypeError(L(3807,e))}else{if(!e)throw TypeError(L(3804));t=e}if("function"!=typeof t)throw TypeError(L(3809));if(!Ze(t,s.Component))throw TypeError(L(3810));var n=t._requireComponent;n&&!this.getComponent(n)&&this.addComponent(n);var i=new t;return i.node=this,this._components.push(i),this._activeInHierarchy&&s.director._nodeActivator.activateComp(i),i},n.removeComponent=function(e){if(e){var t=null;(t=e instanceof Om?e:this.getComponent(e))&&t.destroy()}else b(3813)},n.on=function(e,t,n,i){switch(void 0===i&&(i=!1),e){case wd.TRANSFORM_CHANGED:this._eventMask|=1}this._eventProcessor.on(e,t,n,i)},n.off=function(e,t,n,i){if(void 0===i&&(i=!1),this._eventProcessor.off(e,t,n,i),!this._eventProcessor.hasEventListener(e))switch(e){case wd.TRANSFORM_CHANGED:this._eventMask&=-2}},n.once=function(e,t,n,i){this._eventProcessor.once(e,t,n,i)},n.emit=function(e,t,n,i,o,a){this._eventProcessor.emit(e,t,n,i,o,a)},n.dispatchEvent=function(e){this._eventProcessor.dispatchEvent(e)},n.hasEventListener=function(e,t,n){return this._eventProcessor.hasEventListener(e,t,n)},n.targetOff=function(e){this._eventProcessor.targetOff(e),1&this._eventMask&&!this._eventProcessor.hasEventListener(wd.TRANSFORM_CHANGED)&&(this._eventMask&=-2)},n.destroy=function(){return!!e.prototype.destroy.call(this)&&(this.active=!1,!0)},n.destroyAllChildren=function(){for(var e=this._children,t=0;t<e.length;++t)e[t].destroy()},n._removeComponent=function(e){if(e){if(!(this._objFlags&Jd)){var t=this._components.indexOf(e);-1!==t?this._components.splice(t,1):e.node!==this&&b(3815)}}else b(3814)},n._updateSiblingIndex=function(){for(var e=0;e<this._children.length;++e)this._children[e]._siblingIndex=e;this.emit(wd.SIBLING_ORDER_CHANGED)},n._onSetParent=function(e){this._parent&&(null!=e&&e._scene===this._parent._scene||null==this._parent._scene||this.walk(i._setScene))},n._onPostActivated=function(){},n._onBatchCreated=function(){this._parent&&(this._siblingIndex=this._parent.children.indexOf(this))},n._onPreDestroy=function(){this._onPreDestroyBase()},n._onHierarchyChanged=function(e){return this._onHierarchyChangedBase(e)},n._instantiate=function(e,t){return e||(e=s.instantiate._clone(this,this)),e._prefab,e._parent=null,e._onBatchCreated(t),e},n._onHierarchyChangedBase=function(){var e=this._parent;!this._persistNode||e instanceof s.Scene||s.game.removePersistRootNode(this);var t=this._active&&!(!e||!e._activeInHierarchy);this._activeInHierarchy!==t&&s.director._nodeActivator.activateNode(this,t)},n._onPreDestroyBase=function(){this._objFlags|=Jd;var e=this._parent,n=!!e&&0!=(e._objFlags&Jd);if(!n&&t&&this._registerIfAttached(!1),this._persistNode&&s.game.removePersistRootNode(this),!n&&e){this.emit(wd.PARENT_CHANGED,this);var i=e._children.indexOf(this);e._children.splice(i,1),this._siblingIndex=0,e._updateSiblingIndex(),e.emit&&e.emit(wd.CHILD_REMOVED,this)}this.emit(wd.NODE_DESTROYED,this),this._eventProcessor.destroy();for(var o=this._children,a=0;a<o.length;++a)o[a]._destroyImmediate();for(var r=this._components,c=0;c<r.length;++c)r[c]._destroyImmediate();return n},le(i,[{key:"components",get:function(){return this._components}},{key:"_persistNode",get:function(){return(this._objFlags&Qd)>0},set:function(e){e?this._objFlags|=Qd:this._objFlags&=~Qd}},{key:"name",get:function(){return this._name},set:function(e){this._name=e}},{key:"uuid",get:function(){return this._id}},{key:"children",get:function(){return this._children}},{key:"active",get:function(){return this._active},set:function(e){if(this._active!==e){this._active=e;var t=this._parent;t&&t._activeInHierarchy&&s.director._nodeActivator.activateNode(this,e)}}},{key:"activeInHierarchy",get:function(){return this._activeInHierarchy}},{key:"parent",get:function(){return this._parent},set:function(e){this.setParent(e)}},{key:"scene",get:function(){return this._scene}},{key:"eventProcessor",get:function(){return this._eventProcessor}}]),i}(li),Xd.idGenerator=$d,Xd._stacks=[[]],Xd._stackId=0,xe((kd=Kd).prototype,"_persistNode",[zu],Object.getOwnPropertyDescriptor(kd.prototype,"_persistNode"),kd.prototype),xe(kd.prototype,"name",[qu],Object.getOwnPropertyDescriptor(kd.prototype,"name"),kd.prototype),xe(kd.prototype,"children",[qu],Object.getOwnPropertyDescriptor(kd.prototype,"children"),kd.prototype),xe(kd.prototype,"active",[qu],Object.getOwnPropertyDescriptor(kd.prototype,"active"),kd.prototype),xe(kd.prototype,"activeInHierarchy",[qu],Object.getOwnPropertyDescriptor(kd.prototype,"activeInHierarchy"),kd.prototype),xe(kd.prototype,"parent",[qu],Object.getOwnPropertyDescriptor(kd.prototype,"parent"),kd.prototype),Vd=xe(kd.prototype,"_parent",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),jd=xe(kd.prototype,"_children",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Wd=xe(kd.prototype,"_active",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),qd=xe(kd.prototype,"_components",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Yd=xe(kd.prototype,"_prefab",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Hd=kd))||Hd);s._BaseNode=tp;var np=Object.freeze({__proto__:null,ccclass:Ou,property:zu,requireComponent:Du,executionOrder:Mu,disallowMultiple:Lu,executeInEditMode:Gu,menu:Hu,playOnFocus:ku,inspector:Vu,icon:ju,help:Wu,type:i_,integer:$u,float:e_,boolean:t_,string:n_});e("dN",np);var ip,op,ap,rp,sp,cp,lp,fp,up,_p,mp,hp=li.Flags.Destroyed,dp=li.Flags.PersistentMask,pp=[];function vp(e){var t;if(e instanceof li){if(e._instantiate)return s.game._isCloning=!0,t=e._instantiate(null,!0),s.game._isCloning=!1,t;if(e instanceof s.Asset)throw new TypeError(L(6903))}return s.game._isCloning=!0,t=gp(e),s.game._isCloning=!1,t}function gp(e,t){var n;xp(e,n=e._iN$t?e._iN$t:e.constructor?new(0,e.constructor):Object.create(null),t);for(var i=0,o=pp.length;i<o;++i)pp[i]._iN$t=null;return pp.length=0,n}function xp(e,t,n){ht.value(e,"_iN$t",t,!0),pp.push(e);var i=e.constructor;if(s.Class._isCCClass(i))!function(e,t,n,i){for(var o=e.__values__,a=0;a<o.length;a++){var r=o[a],s=t[r];if("object"==typeof s&&s){var c=n[r];c instanceof yt&&c.constructor===s.constructor?c.set(s):n[r]=s._iN$t||yp(s,i)}else n[r]=s}}(i,e,t,n);else for(var o in e)if(e.hasOwnProperty(o)&&(95!==o.charCodeAt(0)||95!==o.charCodeAt(1)||"__type__"===o)){var a=e[o];if("object"==typeof a&&a){if(a===t)continue;t[o]=a._iN$t||yp(a,n)}else t[o]=a}e instanceof li&&(t._objFlags&=dp)}function yp(e,t){if(e instanceof yt)return e.clone();if(e instanceof s.Asset)return e;var n;if(ArrayBuffer.isView(e)){var i=e.length;n=new e.constructor(i),e._iN$t=n,pp.push(e);for(var o=0;o<i;++o)n[o]=e[o];return n}if(Array.isArray(e)){var a=e.length;n=new Array(a),e._iN$t=n,pp.push(e);for(var r=0;r<a;++r){var c=e[r];n[r]="object"==typeof c&&c?c._iN$t||yp(c,t):c}return n}if(e._objFlags&hp)return null;var l=e.constructor;if(s.Class._isCCClass(l)){if(t)if(t instanceof s.Component){if(e instanceof s._BaseNode||e instanceof s.Component)return e}else if(t instanceof s._BaseNode)if(e instanceof s._BaseNode){if(!e.isChildOf(t))return e}else if(e instanceof s.Component&&e.node&&!e.node.isChildOf(t))return e;n=new l}else if(l===Object)n={};else{if(l)return e;n=Object.create(null)}return xp(e,n,t),n}function Ep(e,t){return(t<<3)+e}function Sp(e){return Lp[e]}function Ap(e){switch(e){case _p.Uint8:return Uint8Array;case _p.Uint16:return Uint16Array;case _p.Uint32:return Uint32Array;case _p.Int8:return Int8Array;case _p.Int16:return Int16Array;case _p.Int32:return Int32Array;case _p.Float32:return Float32Array;case _p.Float64:return Float64Array}}vp._clone=gp,s.instantiate=vp,function(e){e[e.Uint8=0]="Uint8",e[e.Uint16=1]="Uint16",e[e.Uint32=2]="Uint32",e[e.Int8=3]="Int8",e[e.Int16=4]="Int16",e[e.Int32=5]="Int32",e[e.Float32=6]="Float32",e[e.Float64=7]="Float64"}(_p||(_p={})),function(e){e[e.Scalar=0]="Scalar",e[e.Vec2=1]="Vec2",e[e.Vec3=2]="Vec3",e[e.Vec4=3]="Vec4",e[e.Quat=4]="Quat",e[e.Mat4=5]="Mat4"}(mp||(mp={})),e("dY",Ou("cc.CompactValueTypeArray")((fp=lp=function(){function e(){ge(this,"_byteOffset",ap,this),ge(this,"_unitCount",rp,this),ge(this,"_unitElement",sp,this),ge(this,"_length",cp,this)}return e.lengthFor=function(e,t,n){return Sp(t).requiredUnits*e.length*Ap(n).BYTES_PER_ELEMENT},e.compress=function(t,n,i,o,a,r){for(var s=Sp(n),c=Ap(i),l=s.requiredUnits*t.length,f=new c(o,a,l),u=0;u<t.length;++u)s.compress(f,u,t[u]);var _=new e;return _._unitElement=Ep(i,n),_._byteOffset=r,_._unitCount=l,_._length=t.length,_},e.prototype.decompress=function(e){for(var t,n={storageUnit:7&(t=this._unitElement),elementType:t>>3},i=n.storageUnit,o=Sp(n.elementType),a=new(Ap(i))(e,this._byteOffset,this._unitCount),r=new Array(this._length),s=0;s<this._length;++s)r[s]=o.decompress(a,s);return r},e}(),lp.StorageUnit=_p,lp.ElementType=mp,ap=xe((op=fp).prototype,"_byteOffset",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),rp=xe(op.prototype,"_unitCount",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),sp=xe(op.prototype,"_unitElement",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Ep(_p.Uint8,mp.Scalar)}}),cp=xe(op.prototype,"_length",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ip=op))||ip);var Cp,Tp,Ip,Pp,wp,Rp,bp,Np,Op,Dp,Mp,Lp=((up={})[mp.Scalar]={requiredUnits:1,compress:function(e,t,n){e[t]=n},decompress:function(e,t){return e[t]}},up[mp.Vec2]={requiredUnits:2,compress:function(e,t,n){e[2*t]=n.x,e[2*t+1]=n.y},decompress:function(e,t){return new Rn(e[2*t],e[2*t+1])}},up[mp.Vec3]={requiredUnits:3,compress:function(e,t,n){e[3*t]=n.x,e[3*t+1]=n.y,e[3*t+2]=n.z},decompress:function(e,t){return new Rn(e[3*t],e[3*t+1],e[3*t+2])}},up[mp.Vec4]={requiredUnits:4,compress:function(e,t,n){e[4*t]=n.x,e[4*t+1]=n.y,e[4*t+2]=n.z,e[4*t+3]=n.w},decompress:function(e,t){return new Zn(e[4*t],e[4*t+1],e[4*t+2],e[4*t+3])}},up[mp.Quat]={requiredUnits:4,compress:function(e,t,n){e[4*t]=n.x,e[4*t+1]=n.y,e[4*t+2]=n.z,e[4*t+3]=n.w},decompress:function(e,t){return new zn(e[4*t],e[4*t+1],e[4*t+2],e[4*t+3])}},up[mp.Mat4]={requiredUnits:16,compress:function(e,t,n){jn.toArray(e,n,16*t)},decompress:function(e,t){return jn.fromArray(new jn,e,16*t)}},up);function zp(e){var t=e._prefab;if(t&&t.instance){if(!t.asset)return b(3701,e.name),void(t.instance=void 0);var n=e._objFlags,i=e._parent,o=e._id,a=e._prefab;s.game._isCloning=!0;var r=t.asset.data;r._iN$t=e,s.instantiate._clone(r,r),s.game._isCloning=!1,e._objFlags=n,e._parent=i,e._id=o,e._prefab&&(e._prefab.instance=null==a?void 0:a.instance)}}function Fp(e,t,n){var i;if(t){var o=t,a=null===(i=e._prefab)||void 0===i?void 0:i.instance;!n&&a&&(t[a.fileId]={},o=t[a.fileId]);var r=e._prefab;r&&(o[r.fileId]=e);for(var s=e.components,c=0;c<s.length;c++){var l=s[c];l.__prefab&&(o[l.__prefab.fileId]=l)}for(var f=0;f<e.children.length;f++)Fp(e.children[f],o,!1)}}function Up(e,t){if(!e)return null;for(var n=t,i=0;i<e.length;i++){if(!n)return null;n=n[e[i]]}return n}function Bp(e,t,n){if(t)for(var i=0;i<t.length;i++){var o=t[i];if(o&&o.targetInfo){var a=Up(o.targetInfo.localID,n);if(!a)continue;var r=n,s=o.targetInfo.localID;if(s.length>0)for(var c=0;c<s.length-1;c++)r=r[s[c]];if(o.nodes)for(var l=0;l<o.nodes.length;l++){var f=o.nodes[l];f&&(a._children.push(f),f._parent=a,Fp(f,r,!1),f._siblingIndex=a._children.length-1,f._onBatchCreated(!1))}}}}function Gp(e,t,n){if(t)for(var i=0;i<t.length;i++){var o=t[i];if(o&&o.targetInfo){var a=Up(o.targetInfo.localID,n);if(!a)continue;if(o.components)for(var r=0;r<o.components.length;r++){var s=o.components[r];s&&(s.node=a,a._components.push(s))}}}}function Hp(e,t,n){if(t)for(var i=0;i<t.length;i++){var o=t[i];if(o){var a=Up(o.localID,n);if(!a||!a.node)continue;var r=a.node.components.indexOf(a);r>=0&&a.node._components.splice(r,1)}}}function kp(e,t,n){if(!(t.length<=0))for(var i=null,o=0;o<t.length;o++){var a=t[o];if(a&&a.targetInfo){if(!(i=Up(a.targetInfo.localID,n)))continue;var r=i,s=a.propertyPath.slice();if(s.length>0){var c=s.pop();if(!c)continue;for(var l=0;l<s.length&&(r=r[s[l]]);l++);if(!r)continue;if(Array.isArray(r))if("length"===c)r[c]=a.value;else{var f=Number.parseInt(c);Number.isInteger(f)&&f<r.length&&(r[c]=a.value)}else r[c]=a.value}}}}function Vp(e){var t,n=null===(t=e._prefab)||void 0===t?void 0:t.targetOverrides;if(n)for(var i=0;i<n.length;i++){var o,a,r=n[i],s=r.source,c=r.sourceInfo;if(c){var l,f,u=null===(l=r.source)||void 0===l||null===(f=l._prefab)||void 0===f?void 0:f.instance;u&&u.targetMap&&(s=Up(c.localID,u.targetMap))}if(s){var _,m=r.targetInfo;if(m){var h=null===(o=r.target)||void 0===o||null===(a=o._prefab)||void 0===a?void 0:a.instance;if(h&&h.targetMap&&(_=Up(m.localID,h.targetMap))){var d=r.propertyPath.slice(),p=s;if(d.length>0){var v=d.pop();if(!v)return;for(var g=0;g<d.length&&(p=p[d[g]]);g++);if(!p)continue;p[v]=_}}}}}}s._decorator=np;var jp=new Rn,Wp=new zn,qp=new zn,Yp=new zn,Xp=new Dn,Kp=new Dn,Jp=new jn,Qp=[],Zp=function(){function e(){this._chunkHandles=[],this._chunks=[],this._freelists=[],this._createChunk()}var t=e.prototype;return t.alloc=function(){for(var e=this._freelists.length,t=0;t<e;++t)if(this._freelists[t].length)return this._createView(t);return this._createChunk(),this._createView(e)},t.free=function(e,t){for(var n=this._freelists.length,i=0;i<n;++i)if(this._chunks[i]===e)return void this._freelists[i].push(t)},t.clear=function(){for(var e=this._chunks.length,t=0;t<e;++t)this._chunks[t].fill(0)},t._createChunk=function(){var t=wo.alloc(4*e.CAPACITY_PER_CHUNK);this._chunkHandles.push(t),this._chunks.push(new Uint32Array(wo.getBuffer(t)));for(var n=[],i=0;i<e.CAPACITY_PER_CHUNK;++i)n.push(i);this._freelists.push(n)},t._createView=function(t){var n=this._chunks[t],i=this._freelists[t].pop(),o=this._chunkHandles[t];return[n,i,o+=i<<e.BIT_SHIFT]},e}();Zp.CAPACITY_PER_CHUNK=256,Zp.BIT_SHIFT=16;var $p,ev,tv,nv,iv,ov,av,rv,sv,cv,lv,fv,uv,_v,mv,hv,dv,pv,vv,gv,xv,yv,Ev,Sv,Av,Cv,Tv,Iv,Pv,wv,Rv,bv,Nv,Ov,Dv,Mv,Lv,zv,Fv,Uv,Bv,Gv,Hv,kv,Vv,jv,Wv,qv,Yv,Xv,Kv,Jv,Qv,Zv,$v,eg,tg,ng,ig,og,ag,rg,sg,cg,lg,fg,ug,_g,mg,hg=new Zp,dg=e("en",(Cp=Ou("cc.Node"),Tp=i_(Rn),Cp((Mp=Dp=function(e){function t(t){var n;(n=e.call(this,t)||this)._uiProps=new Rd(de(n)),n._static=!1,n._pos=new Rn,n._rot=new zn,n._scale=new Rn(1,1,1),n._mat=new jn,ge(n,"_lpos",wp,de(n)),ge(n,"_lrot",Rp,de(n)),ge(n,"_lscale",bp,de(n)),ge(n,"_layer",Np,de(n)),ge(n,"_euler",Op,de(n)),n._dirtyFlags=xu.NONE,n._hasChangedFlagsChunk=void 0,n._hasChangedFlagsOffset=void 0,n._eulerDirty=!1,n._poolHandle=Co,n._poolHandle=qo.alloc(),qo.set(n._poolHandle,ko.LAYER,n._layer);var i=hg.alloc(),o=i[0],a=i[1],r=i[2];return n._hasChangedFlagsChunk=o,n._hasChangedFlagsOffset=a,qo.set(n._poolHandle,ko.HAS_CHANGED_FLAGS,r),n}ue(t,e),t.isNode=function(e){return e instanceof t&&(e.constructor===t||!(e instanceof s.Scene))};var n=t.prototype;return n.destroy=function(){return this._poolHandle&&(qo.free(this._poolHandle),this._poolHandle=Co),hg.free(this._hasChangedFlagsChunk,this._hasChangedFlagsOffset),e.prototype.destroy.call(this)},n.setParent=function(t,n){void 0===n&&(n=!1),n&&this.updateWorldTransform(),e.prototype.setParent.call(this,t,n)},n._onSetParent=function(t,n){if(e.prototype._onSetParent.call(this,t,n),n){var i=this._parent;i?(i.updateWorldTransform(),jn.multiply(Jp,jn.invert(Jp,i._mat),this._mat),jn.toRTS(Jp,this._lrot,this._lpos,this._lscale)):(Rn.copy(this._lpos,this._pos),zn.copy(this._lrot,this._rot),Rn.copy(this._lscale,this._scale)),this._eulerDirty=!0}this.invalidateChildren(xu.TRS)},n._onHierarchyChanged=function(t){this.eventProcessor.reattach(),e.prototype._onHierarchyChangedBase.call(this,t)},n._onBatchCreated=function(e){var t;qo.set(this._poolHandle,ko.LAYER,this._layer),qo.setVec3(this._poolHandle,ko.WORLD_SCALE,this._scale);var n=null===(t=this._prefab)||void 0===t?void 0:t.instance;!e&&n&&zp(this),this.hasChangedFlags=xu.TRS,this._dirtyFlags=xu.TRS,this._uiProps.uiTransformDirty=!0;for(var i=this._children.length,o=0;o<i;++o)this._children[o]._siblingIndex=o,this._children[o]._onBatchCreated(e);if(!e&&n){var a={};n.targetMap=a,Fp(this,a,!0),Bp(0,n.mountedChildren,a),Hp(0,n.removedComponents,a),Gp(0,n.mountedComponents,a),kp(0,n.propertyOverrides,a)}Vp(this)},n._onBeforeSerialize=function(){this.eulerAngles},n._onPostActivated=function(e){e?(Gd.resumeTarget(this),this.invalidateChildren(xu.TRS)):Gd.pauseTarget(this)},n.translate=function(e,t){var n=t||gu.LOCAL;if(n===gu.LOCAL)Rn.transformQuat(jp,e,this._lrot),this._lpos.x+=jp.x,this._lpos.y+=jp.y,this._lpos.z+=jp.z;else if(n===gu.WORLD)if(this._parent){zn.invert(Wp,this._parent.worldRotation),Rn.transformQuat(jp,e,Wp);var i=this.worldScale;this._lpos.x+=jp.x/i.x,this._lpos.y+=jp.y/i.y,this._lpos.z+=jp.z/i.z}else this._lpos.x+=e.x,this._lpos.y+=e.y,this._lpos.z+=e.z;this.invalidateChildren(xu.POSITION),1&this._eventMask&&this.emit(wd.TRANSFORM_CHANGED,xu.POSITION),qo.setVec3(this._poolHandle,ko.WORLD_POSITION,this.worldPosition)},n.rotate=function(e,t){var n=t||gu.LOCAL;if(zn.normalize(Wp,e),n===gu.LOCAL)zn.multiply(this._lrot,this._lrot,Wp);else if(n===gu.WORLD){var i=this.worldRotation;zn.multiply(qp,Wp,i),zn.invert(Wp,i),zn.multiply(qp,Wp,qp),zn.multiply(this._lrot,this._lrot,qp)}this._eulerDirty=!0,this.invalidateChildren(xu.ROTATION),1&this._eventMask&&this.emit(wd.TRANSFORM_CHANGED,xu.ROTATION),qo.setVec4(this._poolHandle,ko.WORLD_ROTATION,this.worldRotation)},n.lookAt=function(e,t){this.getWorldPosition(jp),Rn.subtract(jp,jp,e),Rn.normalize(jp,jp),zn.fromViewUp(Wp,jp,t),this.setWorldRotation(Wp)},n.invalidateChildren=function(e){var t=e|xu.POSITION;Qp[0]=this;for(var n=0;n>=0;){var i=Qp[n--],o=i.hasChangedFlags;if(i.isValid&&(i._dirtyFlags&o&e)!==e){i._dirtyFlags|=e,i._uiProps.uiTransformDirty=!0,i._hasChangedFlagsChunk[i._hasChangedFlagsOffset]=o|e;for(var a=i._children,r=a.length,s=0;s<r;++s)Qp[++n]=a[s]}e=t}},n.updateWorldTransform=function(){if(this._dirtyFlags){for(var e,t=this,n=0;t&&t._dirtyFlags;)Qp[n++]=t,t=t._parent;for(var i,o,a,r,s=0;n;)s|=(e=Qp[--n])._dirtyFlags,t?(s&xu.POSITION&&(i=e._mat,o=t._mat,a=e._pos,r=e._lpos,e._rot,Rn.transformMat4(a,r,o),i.m12=a.x,i.m13=a.y,i.m14=a.z,qo.setVec3(e._poolHandle,ko.WORLD_POSITION,a)),s&xu.RS&&(jn.fromRTS(e._mat,e._lrot,e._lpos,e._lscale),jn.multiply(e._mat,t._mat,e._mat),s&xu.ROTATION&&(zn.multiply(e._rot,t._rot,e._lrot),qo.setVec4(e._poolHandle,ko.WORLD_ROTATION,e._rot)),Dn.fromQuat(Xp,zn.conjugate(Yp,e._rot)),Dn.multiplyMat4(Xp,Xp,e._mat),e._scale.x=Xp.m00,e._scale.y=Xp.m04,e._scale.z=Xp.m08,qo.setVec3(e._poolHandle,ko.WORLD_SCALE,e._scale))):(s&xu.POSITION&&(Rn.copy(e._pos,e._lpos),e._mat.m12=e._pos.x,e._mat.m13=e._pos.y,e._mat.m14=e._pos.z,qo.setVec3(e._poolHandle,ko.WORLD_POSITION,e._pos)),s&xu.RS&&(s&xu.ROTATION&&(zn.copy(e._rot,e._lrot),qo.setVec4(e._poolHandle,ko.WORLD_ROTATION,e._rot)),s&xu.SCALE&&(Rn.copy(e._scale,e._lscale),qo.setVec3(e._poolHandle,ko.WORLD_SCALE,e._scale),jn.fromRTS(e._mat,e._rot,e._pos,e._scale)))),s!==xu.NONE&&qo.setMat4(e._poolHandle,ko.WORLD_MATRIX,e._mat),e._dirtyFlags=xu.NONE,t=e}},n.setPosition=function(e,t,n){void 0===t&&void 0===n?Rn.copy(this._lpos,e):void 0===n?Rn.set(this._lpos,e,t,this._lpos.z):Rn.set(this._lpos,e,t,n),this.invalidateChildren(xu.POSITION),1&this._eventMask&&this.emit(wd.TRANSFORM_CHANGED,xu.POSITION)},n.getPosition=function(e){return e?Rn.set(e,this._lpos.x,this._lpos.y,this._lpos.z):Rn.copy(new Rn,this._lpos)},n.setRotation=function(e,t,n,i){void 0===t||void 0===n||void 0===i?zn.copy(this._lrot,e):zn.set(this._lrot,e,t,n,i),this._eulerDirty=!0,this.invalidateChildren(xu.ROTATION),1&this._eventMask&&this.emit(wd.TRANSFORM_CHANGED,xu.ROTATION)},n.setRotationFromEuler=function(e,t,n){var i=void 0===n?this._euler.z:n;void 0===t?(Rn.copy(this._euler,e),zn.fromEuler(this._lrot,e.x,e.y,e.z)):(Rn.set(this._euler,e,t,i),zn.fromEuler(this._lrot,e,t,i)),this._eulerDirty=!1,this.invalidateChildren(xu.ROTATION),1&this._eventMask&&this.emit(wd.TRANSFORM_CHANGED,xu.ROTATION)},n.getRotation=function(e){return e?zn.set(e,this._lrot.x,this._lrot.y,this._lrot.z,this._lrot.w):zn.copy(new zn,this._lrot)},n.setScale=function(e,t,n){void 0===t&&void 0===n?Rn.copy(this._lscale,e):void 0===n?Rn.set(this._lscale,e,t,this._lscale.z):Rn.set(this._lscale,e,t,n),this.invalidateChildren(xu.SCALE),1&this._eventMask&&this.emit(wd.TRANSFORM_CHANGED,xu.SCALE)},n.getScale=function(e){return e?Rn.set(e,this._lscale.x,this._lscale.y,this._lscale.z):Rn.copy(new Rn,this._lscale)},n.inverseTransformPoint=function(e,t){Rn.copy(e,t);for(var n=this,i=0;n._parent;)Qp[i++]=n,n=n._parent;for(;i>=0;)Rn.transformInverseRTS(e,e,n._lrot,n._lpos,n._lscale),n=Qp[--i];return e},n.setWorldPosition=function(e,t,n){void 0===t||void 0===n?Rn.copy(this._pos,e):Rn.set(this._pos,e,t,n),qo.setVec3(this._poolHandle,ko.WORLD_POSITION,this._pos);var i=this._parent,o=this._lpos;i?(i.updateWorldTransform(),Rn.transformMat4(o,this._pos,jn.invert(Jp,i._mat))):Rn.copy(o,this._pos),this.invalidateChildren(xu.POSITION),1&this._eventMask&&this.emit(wd.TRANSFORM_CHANGED,xu.POSITION)},n.getWorldPosition=function(e){return this.updateWorldTransform(),e?Rn.copy(e,this._pos):Rn.copy(new Rn,this._pos)},n.setWorldRotation=function(e,t,n,i){void 0===t||void 0===n||void 0===i?zn.copy(this._rot,e):zn.set(this._rot,e,t,n,i),qo.setVec4(this._poolHandle,ko.WORLD_ROTATION,this._rot),this._parent?(this._parent.updateWorldTransform(),zn.multiply(this._lrot,zn.conjugate(this._lrot,this._parent._rot),this._rot)):zn.copy(this._lrot,this._rot),this._eulerDirty=!0,this.invalidateChildren(xu.ROTATION),1&this._eventMask&&this.emit(wd.TRANSFORM_CHANGED,xu.ROTATION)},n.setWorldRotationFromEuler=function(e,t,n){zn.fromEuler(this._rot,e,t,n),this._parent?(this._parent.updateWorldTransform(),zn.multiply(this._lrot,zn.conjugate(this._lrot,this._parent._rot),this._rot)):zn.copy(this._lrot,this._rot),this._eulerDirty=!0,this.invalidateChildren(xu.ROTATION),1&this._eventMask&&this.emit(wd.TRANSFORM_CHANGED,xu.ROTATION)},n.getWorldRotation=function(e){return this.updateWorldTransform(),e?zn.copy(e,this._rot):zn.copy(new zn,this._rot)},n.setWorldScale=function(e,t,n){void 0===t||void 0===n?Rn.copy(this._scale,e):Rn.set(this._scale,e,t,n),qo.setVec3(this._poolHandle,ko.WORLD_SCALE,this._scale);var i=this._parent;i?(i.updateWorldTransform(),Dn.fromQuat(Xp,zn.conjugate(Yp,i._rot)),Dn.multiplyMat4(Xp,Xp,i._mat),Kp.m00=this._scale.x,Kp.m04=this._scale.y,Kp.m08=this._scale.z,Dn.multiply(Xp,Kp,Dn.invert(Xp,Xp)),this._lscale.x=Rn.set(jp,Xp.m00,Xp.m01,Xp.m02).length(),this._lscale.y=Rn.set(jp,Xp.m03,Xp.m04,Xp.m05).length(),this._lscale.z=Rn.set(jp,Xp.m06,Xp.m07,Xp.m08).length()):Rn.copy(this._lscale,this._scale),this.invalidateChildren(xu.SCALE),1&this._eventMask&&this.emit(wd.TRANSFORM_CHANGED,xu.SCALE)},n.getWorldScale=function(e){return this.updateWorldTransform(),e?Rn.copy(e,this._scale):Rn.copy(new Rn,this._scale)},n.getWorldMatrix=function(e){this.updateWorldTransform();var t=e||new jn;return jn.copy(t,this._mat)},n.getWorldRS=function(e){this.updateWorldTransform();var t=e||new jn;return jn.copy(t,this._mat),t.m12=0,t.m13=0,t.m14=0,t},n.getWorldRT=function(e){this.updateWorldTransform();var t=e||new jn;return jn.fromRT(t,this._rot,this._pos)},n.setRTS=function(e,t,n){var i=0;e&&(i|=xu.ROTATION,void 0!==e.w?(zn.copy(this._lrot,e),this._eulerDirty=!0):(Rn.copy(this._euler,e),zn.fromEuler(this._lrot,e.x,e.y,e.z),this._eulerDirty=!1)),t&&(Rn.copy(this._lpos,t),i|=xu.POSITION),n&&(Rn.copy(this._lscale,n),i|=xu.SCALE),i&&(this.invalidateChildren(i),1&this._eventMask&&this.emit(wd.TRANSFORM_CHANGED,i))},n.pauseSystemEvents=function(e){Gd.pauseTarget(this,e)},n.resumeSystemEvents=function(e){Gd.resumeTarget(this,e)},t.resetHasChangedFlags=function(){hg.clear()},t.clearNodeArray=function(){t.ClearFrame<t.ClearRound?t.ClearFrame++:(t.ClearFrame=0,Qp.length=0)},n.syncToNativeTransform=function(){var e=this.hasChangedFlags;e&&(e&xu.POSITION&&qo.setVec3(this._poolHandle,ko.WORLD_POSITION,this.worldPosition),e&xu.ROTATION&&qo.setVec4(this._poolHandle,ko.WORLD_ROTATION,this.worldRotation),e&xu.SCALE&&qo.setVec3(this._poolHandle,ko.WORLD_SCALE,this.worldScale))},n.syncFromNativeTransform=function(){var e=this.hasChangedFlags;e&&(e&xu.POSITION&&(qo.getVec3(this._poolHandle,ko.WORLD_POSITION,jp),this.setWorldPosition(jp)),e&xu.ROTATION&&(qo.getVec4(this._poolHandle,ko.WORLD_ROTATION,Wp),this.setWorldRotation(Wp)),e&xu.SCALE&&(qo.getVec3(this._poolHandle,ko.WORLD_SCALE,jp),this.setWorldScale(jp)))},le(t,[{key:"handle",get:function(){return this._poolHandle}},{key:"position",get:function(){return this._lpos},set:function(e){this.setPosition(e)}},{key:"worldPosition",get:function(){return this.updateWorldTransform(),this._pos},set:function(e){this.setWorldPosition(e)}},{key:"rotation",get:function(){return this._lrot},set:function(e){this.setRotation(e)}},{key:"eulerAngles",get:function(){return this._eulerDirty&&(zn.toEuler(this._euler,this._lrot),this._eulerDirty=!1),this._euler},set:function(e){this.setRotationFromEuler(e.x,e.y,e.z)}},{key:"angle",get:function(){return this._euler.z},set:function(e){Rn.set(this._euler,0,0,e),zn.fromAngleZ(this._lrot,e),this._eulerDirty=!1,this.invalidateChildren(xu.ROTATION),1&this._eventMask&&this.emit(wd.TRANSFORM_CHANGED,xu.ROTATION)}},{key:"worldRotation",get:function(){return this.updateWorldTransform(),this._rot},set:function(e){this.setWorldRotation(e)}},{key:"scale",get:function(){return this._lscale},set:function(e){this.setScale(e)}},{key:"worldScale",get:function(){return this.updateWorldTransform(),this._scale},set:function(e){this.setWorldScale(e)}},{key:"matrix",set:function(e){jn.toRTS(e,this._lrot,this._lpos,this._lscale),this.invalidateChildren(xu.TRS),this._eulerDirty=!0,1&this._eventMask&&this.emit(wd.TRANSFORM_CHANGED,xu.TRS)}},{key:"worldMatrix",get:function(){return this.updateWorldTransform(),this._mat}},{key:"forward",get:function(){return Rn.transformQuat(new Rn,Rn.FORWARD,this.worldRotation)},set:function(e){var t=e.length();Rn.multiplyScalar(jp,e,-1/t),zn.fromViewUp(Wp,jp),this.setWorldRotation(Wp)}},{key:"layer",get:function(){return this._layer},set:function(e){this._layer=e,qo.set(this._poolHandle,ko.LAYER,this._layer),this.emit(wd.LAYER_CHANGED,this._layer)}},{key:"hasChangedFlags",get:function(){return this._hasChangedFlagsChunk[this._hasChangedFlagsOffset]},set:function(e){this._hasChangedFlagsChunk[this._hasChangedFlagsOffset]=e}}]),t}(tp),Dp.EventType=wd,Dp.NodeSpace=gu,Dp.TransformDirtyBit=xu,Dp.TransformBit=xu,Dp.ClearFrame=0,Dp.ClearRound=1e3,wp=xe((Pp=Mp).prototype,"_lpos",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Rn}}),Rp=xe(Pp.prototype,"_lrot",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new zn}}),bp=xe(Pp.prototype,"_lscale",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Rn(1,1,1)}}),Np=xe(Pp.prototype,"_layer",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return $l.Enum.DEFAULT}}),Op=xe(Pp.prototype,"_euler",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Rn}}),xe(Pp.prototype,"eulerAngles",[Tp],Object.getOwnPropertyDescriptor(Pp.prototype,"eulerAngles"),Pp.prototype),xe(Pp.prototype,"angle",[qu],Object.getOwnPropertyDescriptor(Pp.prototype,"angle"),Pp.prototype),xe(Pp.prototype,"layer",[qu],Object.getOwnPropertyDescriptor(Pp.prototype,"layer"),Pp.prototype),Ip=Pp))||Ip));s.Node=dg;var pg=Ou("cc.TargetInfo")((tv=xe((ev=function(){ge(this,"localID",tv,this)}).prototype,"localID",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),$p=ev))||$p,vg=(nv=Ou("cc.TargetOverrideInfo"),iv=i_(li),ov=i_(pg),av=i_(dg),rv=i_(pg),nv((lv=xe((cv=function(){ge(this,"source",lv,this),ge(this,"sourceInfo",fv,this),ge(this,"propertyPath",uv,this),ge(this,"target",_v,this),ge(this,"targetInfo",mv,this)}).prototype,"source",[Fu,iv],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),fv=xe(cv.prototype,"sourceInfo",[Fu,ov],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),uv=xe(cv.prototype,"propertyPath",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),_v=xe(cv.prototype,"target",[Fu,av],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),mv=xe(cv.prototype,"targetInfo",[Fu,rv],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),sv=cv))||sv),gg=Ou("cc.CompPrefabInfo")((pv=xe((dv=function(){ge(this,"fileId",pv,this)}).prototype,"fileId",[Fu,qu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),hv=dv))||hv,xg=(vv=Ou("CCPropertyOverrideInfo"),gv=i_(pg),vv((Cv=function(){function e(){ge(this,"targetInfo",Ev,this),ge(this,"propertyPath",Sv,this),ge(this,"value",Av,this)}return e.prototype.isTarget=function(){},e}(),Ev=xe((yv=Cv).prototype,"targetInfo",[Fu,gv],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Sv=xe(yv.prototype,"propertyPath",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Av=xe(yv.prototype,"value",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),xv=yv))||xv),yg=(Tv=Ou("cc.MountedChildrenInfo"),Iv=i_(pg),Pv=i_([dg]),Tv((Ov=function(){function e(){ge(this,"targetInfo",bv,this),ge(this,"nodes",Nv,this)}return e.prototype.isTarget=function(){},e}(),bv=xe((Rv=Ov).prototype,"targetInfo",[Fu,Iv],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Nv=xe(Rv.prototype,"nodes",[Fu,Pv],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),wv=Rv))||wv),Eg=(Dv=Ou("cc.MountedComponentsInfo"),Mv=i_(pg),Lv=i_([Om]),Dv((Gv=function(){function e(){ge(this,"targetInfo",Uv,this),ge(this,"components",Bv,this)}return e.prototype.isTarget=function(){},e}(),Uv=xe((Fv=Gv).prototype,"targetInfo",[Fu,Mv],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bv=xe(Fv.prototype,"components",[Fu,Lv],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),zv=Fv))||zv),Sg=(Hv=Ou("cc.PrefabInstance"),kv=i_(dg),Vv=i_([yg]),jv=i_([Eg]),Wv=i_([xg]),qv=i_([pg]),Hv((tg=function(){function e(){ge(this,"fileId",Kv,this),ge(this,"prefabRootNode",Jv,this),ge(this,"mountedChildren",Qv,this),ge(this,"mountedComponents",Zv,this),ge(this,"propertyOverrides",$v,this),ge(this,"removedComponents",eg,this),this.targetMap={}}var t=e.prototype;return t.findPropertyOverride=function(){},t.removePropertyOverride=function(){},e}(),Kv=xe((Xv=tg).prototype,"fileId",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),Jv=xe(Xv.prototype,"prefabRootNode",[Fu,kv],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Qv=xe(Xv.prototype,"mountedChildren",[Fu,Vv],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Zv=xe(Xv.prototype,"mountedComponents",[Fu,jv],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),$v=xe(Xv.prototype,"propertyOverrides",[Fu,Wv],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),eg=xe(Xv.prototype,"removedComponents",[Fu,qv],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Yv=Xv))||Yv),Ag=(ng=Ou("cc.PrefabInfo"),ig=i_(dg),og=i_(s.Prefab),ag=i_(Sg),rg=i_([vg]),ng((lg=xe((cg=function(){ge(this,"root",lg,this),ge(this,"asset",fg,this),ge(this,"fileId",ug,this),ge(this,"instance",_g,this),ge(this,"targetOverrides",mg,this)}).prototype,"root",[Fu,ig],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),fg=xe(cg.prototype,"asset",[Fu,og],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ug=xe(cg.prototype,"fileId",[Fu,qu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),_g=xe(cg.prototype,"instance",[Fu,ag],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),mg=xe(cg.prototype,"targetOverrides",[Fu,rg],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),sg=cg))||sg);s._PrefabInfo=Ag;var Cg,Tg,Ig,Pg,wg,Rg,bg,Ng,Og,Dg,Mg,Lg,zg,Fg=Object.freeze({__proto__:null,TargetInfo:pg,TargetOverrideInfo:vg,CompPrefabInfo:gg,PropertyOverrideInfo:xg,MountedChildrenInfo:yg,MountedComponentsInfo:Eg,PrefabInstance:Sg,PrefabInfo:Ag,createNodeWithPrefab:zp,generateTargetMap:Fp,getTarget:Up,applyMountedChildren:Bp,applyMountedComponents:Gp,applyRemovedComponents:Hp,applyPropertyOverrides:kp,applyTargetOverrides:Vp}),Ug=pt({AUTO:0,SINGLE_INSTANCE:1,MULTI_INSTANCE:2}),Bg=e("e2",Ou("cc.Prefab")((Rg=wg=function(e){function t(){var t;return ge(t=e.call(this)||this,"data",Ig,de(t)),ge(t,"optimizationPolicy",Pg,de(t)),t._createFunction=void 0,t._instantiatedTimes=void 0,t._createFunction=null,t._instantiatedTimes=0,t}ue(t,e);var n=t.prototype;return n.createNode=function(e){var t=s.instantiate(this);t.name=this.name,e(null,t)},n.compileCreateFunction=function(){var e,t;this._createFunction=(t=(e=this.data)instanceof s._BaseNode&&e,new Id(e,t).result)},n._doInstantiate=function(e){return this.data._prefab||w(3700),this._createFunction||this.compileCreateFunction(),this._createFunction(e)},n._instantiate=function(){var e;return e=this.data._instantiate(),++this._instantiatedTimes,e},n.initDefault=function(t){e.prototype.initDefault.call(this,t),this.data=new dg,this.data.name="(Missing Node)";var n=new Ag;n.asset=this,n.root=this.data,this.data._prefab=n},n.validate=function(){return!!this.data},t}(b_),wg.OptimizationPolicy=Ug,wg.OptimizationPolicyThreshold=3,Ig=xe((Tg=Rg).prototype,"data",[Fu,qu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Pg=xe(Tg.prototype,"optimizationPolicy",[Fu,qu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Ug.AUTO}}),Cg=Tg))||Cg);ht.value(Bg,"_utils",Fg),s.Prefab=Bg,Ge(s,"cc._Prefab","Prefab"),e("dE",(bg=Ou("cc.PrefabLink"),Ng=i_(Bg),Og=Yu(),bg((zg=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ge(t=e.call.apply(e,[this].concat(i))||this,"prefab",Lg,de(t)),t}return ue(t,e),t}(Om),Lg=xe((Mg=zg).prototype,"prefab",[Ng,Fu,Og],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Dg=Mg))||Dg));var Gg=new Rn;function Hg(e,t,n,i){i||(i=new Rn),e.convertToUINode(t,n,i);var o=n.position;return i.add(o),i}function kg(e,t,n){return n||(n=new Rn),e.worldToScreen(t,n),n.x/=s.view.getScaleX(),n.y/=s.view.getScaleY(),n}var Vg=e("dM",{WorldNode3DToLocalNodeUI:Hg,WorldNode3DToWorldNodeUI:kg});s.pipelineUtils=Vg,ee(s.pipelineUtils,"cc.pipelineUtils",[{name:"WorldNode3DToLocalNodeUI",newName:"convertToUINode",targetName:"cc.Camera.prototype",customFunction:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var i=t[0],o=t[3]||Gg;return i.convertToUINode(t[1],t[2],o),o.add(t[2].position),t[3]||o.clone()}}]);var jg,Wg,qg,Yg,Xg,Kg,Jg,Qg,Zg=Ri.getViewSize(),$g=Ri.pixelRatio,ex=e("eg",{NetworkType:Ai,Language:Si,OS:Ci,Platform:Ti,BrowserType:yi,isNative:Ri.isNative,isBrowser:Ri.isBrowser,isMobile:Ri.isMobile,isLittleEndian:Ri.isLittleEndian,platform:Ri.platform,language:Ri.language,languageCode:Ri.nativeLanguage,os:Ri.os,osVersion:Ri.osVersion,osMainVersion:Ri.osMainVersion,browserType:Ri.browserType,browserVersion:Ri.browserVersion,windowPixelResolution:{width:Zg.width*$g,height:Zg.height*$g},capabilities:{canvas:Ri.supportCapability.canvas,opengl:Ri.supportCapability.gl,webp:Ri.supportCapability.webp,imageBitmap:Ri.supportCapability.imageBitmap,touches:!1,mouse:!1,keyboard:!1,accelerometer:!1},localStorage:null,getNetworkType:function(){return Ri.networkType},getBatteryLevel:function(){return Ri.getBatteryLevel()},garbageCollect:function(){Ri.triggerGC()},isObjectValid:function(e){return null!=e},dump:function(){var e="";e+="isMobile : "+this.isMobile+"\r\n",e+="language : "+this.language+"\r\n",e+="browserType : "+this.browserType+"\r\n",e+="browserVersion : "+this.browserVersion+"\r\n",e+="capabilities : "+JSON.stringify(this.capabilities)+"\r\n",e+="os : "+this.os+"\r\n",e+="osVersion : "+this.osVersion+"\r\n",e+="platform : "+this.platform+"\r\n",v(e+="Using "+(s.game.renderType===s.game.RENDER_TYPE_WEBGL?"WEBGL":"CANVAS")+" renderer.\r\n")},openURL:function(e){Ri.openURL(e)},now:function(){return Ri.now()},restartVM:function(){Ri.restartJSVM()},getSafeAreaRect:function(){var e=s.view,t=Ri.getSafeAreaEdge(),n=Ri.getViewSize(),i=new Xn(t.left,n.height-t.bottom),o=new Xn(n.width-t.right,t.top),a={left:0,top:0,width:n.width,height:n.height};e.convertToLocationInView(i.x,i.y,a,i),e.convertToLocationInView(o.x,o.y,a,o),e._convertPointWithScale(i),e._convertPointWithScale(o);var r=i.x,c=i.y,l=o.x-i.x,f=o.y-i.y;return new ii(r,c,l,f)},__init:function(){try{var e=ex.localStorage=window.localStorage;e.setItem("storage",""),e.removeItem("storage"),e=null}catch(e){var t=function(){w(5200)};ex.localStorage={getItem:t,setItem:t,removeItem:t,clear:t}}var n=window,i=n.navigator,o=document,a=o.documentElement,r=ex.capabilities;(void 0!==a.ontouchstart||void 0!==o.ontouchstart||i.msPointerEnabled)&&(r.touches=!0),void 0!==a.onmouseup&&(r.mouse=!0),void 0!==a.onkeyup&&(r.keyboard=!0),(n.DeviceMotionEvent||n.DeviceOrientationEvent)&&(r.accelerometer=!0),ex.__isWebIOS14OrIPadOS14Env=(ex.os===Ci.IOS||ex.os===Ci.OSX)&&Ri.isBrowser&&/(OS 1[4-9])|(Version\/1[4-9])/.test(window.navigator.userAgent),Ri.onViewResize((function(){var e=Ri.getViewSize();ex.windowPixelResolution={width:Math.round(e.width*$g),height:Math.round(e.height*$g)}}))}});ex.__init(),s.sys=ex;var tx,nx,ix,ox,ax,rx,sx,cx,lx,fx,ux=e("e6",Ou("cc.EffectAsset")((Qg=Jg=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ge(t=e.call.apply(e,[this].concat(i))||this,"techniques",qg,de(t)),ge(t,"shaders",Yg,de(t)),ge(t,"combinations",Xg,de(t)),ge(t,"hideInEditor",Kg,de(t)),t}ue(t,e),t.register=function(e){t._effects[e.name]=e},t.remove=function(e){if(t._effects[e])delete t._effects[e];else for(var n in t._effects)if(t._effects[n]._uuid===e)return void delete t._effects[n]},t.get=function(e){if(t._effects[e])return t._effects[e];for(var n in t._effects)if(t._effects[n]._uuid===e)return t._effects[n];return null},t.getAll=function(){return t._effects};var n=t.prototype;return n.onLoaded=function(){ed.register(this),t.register(this),s.game.once(s.Game.EVENT_ENGINE_INITED,this._precompile,this)},n._precompile=function(){for(var e=this,t=s.director.root,n=function(n){var i=e.shaders[n],o=e.combinations[n];if(!o)return"continue";Object.keys(o).reduce((function(e,t){return e.reduce((function(e,n){for(var i=o[t],a=0;a<i.length;++a){var r=fe({},n);r[t]=i[a],e.push(r)}return e}),[])}),[{}]).forEach((function(e){return ed.getGFXShader(t.device,i.name,e,t.pipeline)}))},i=0;i<this.shaders.length;i++)n(i)},n.destroy=function(){return t.remove(this.name),e.prototype.destroy.call(this)},n.initDefault=function(n){e.prototype.initDefault.call(this,n);var i=t.get("unlit");this.name="unlit",this.shaders=i.shaders,this.combinations=i.combinations,this.techniques=i.techniques},n.validate=function(){return this.techniques.length>0&&this.shaders.length>0},t}(b_),Jg._effects={},qg=xe((Wg=Qg).prototype,"techniques",[Fu,qu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Yg=xe(Wg.prototype,"shaders",[Fu,qu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Xg=xe(Wg.prototype,"combinations",[Fu,qu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Kg=xe(Wg.prototype,"hideInEditor",[Fu,Uu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),jg=Wg))||jg);s.EffectAsset=ux;var _x=new Ie("RenderTex"),mx=new ds;mx.endAccesses=[yr.FRAGMENT_SHADER_READ_TEXTURE];var hx,dx,px,vx,gx,xx,yx,Ex,Sx,Ax,Cx=new gs([mx],new ps),Tx={width:1,height:1,renderPassInfo:Cx},Ix=e("e8",(tx=Ou("cc.RenderTexture"),nx=Ju(),ix=Qu(),ox=Ju(),ax=Qu(),tx((fx=function(e){function t(){var t;return ge(t=e.call(this)||this,"_width",cx,de(t)),ge(t,"_height",lx,de(t)),t._textureHash=0,t._id=void 0,t._window=null,t._id=_x.getNewId(),t._textureHash=$s(t._id,666),t}ue(t,e);var n=t.prototype;return n.getHash=function(){return this._textureHash},n.initialize=function(e){this._name=e.name||"",this._width=e.width,this._height=e.height,this._initWindow(e)},n.reset=function(e){this.initialize(e)},n.destroy=function(){return this._window&&(s.director.root.destroyWindow(this._window),this._window=null),e.prototype.destroy.call(this)},n.resize=function(e,t){this._width=e,this._height=t,this._window&&this._window.resize(e,t),this.emit("resize",this._window)},n.getGFXTexture=function(){return this._window&&this._window.framebuffer.colorTextures[0]},n.getGFXSampler=function(){var e=s.director.root;return rm.getSampler(e.device,V_)},n.getSamplerHash=function(){return V_},n.onLoaded=function(){this._initWindow(),this.loaded=!0,this.emit("load")},n._initWindow=function(e){var t=s.director.root;Tx.title=this._name,Tx.width=this._width,Tx.height=this._height,Tx.renderPassInfo=e&&e.passInfo?e.passInfo:Cx,this._window?(this._window.destroy(),this._window.initialize(t.device,Tx)):this._window=t.createWindow(Tx)},n.initDefault=function(t){e.prototype.initDefault.call(this,t),this._width=this._height=1,this._initWindow()},n.validate=function(){return this.width>=1&&this.width<=2048&&this.height>=1&&this.height<=2048},le(t,[{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}},{key:"window",get:function(){return this._window}}]),t}(b_),cx=xe((sx=fx).prototype,"_width",[Fu,nx,ix],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),lx=xe(sx.prototype,"_height",[Fu,ox,ax],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),rx=sx))||rx));s.RenderTexture=Ix;var Px=e("e7",(hx=Ou("cc.Material"),dx=i_(ux),hx((Ax=function(e){function t(){var t;return ge(t=e.call(this)||this,"_effectAsset",gx,de(t)),ge(t,"_techIdx",xx,de(t)),ge(t,"_defines",yx,de(t)),ge(t,"_states",Ex,de(t)),ge(t,"_props",Sx,de(t)),t._passes=[],t._hash=0,t.loaded=!1,t}ue(t,e),t.getHash=function(e){for(var t,n=0,i=ve(e.passes);!(t=i()).done;)n^=t.value.hash;return n};var n=t.prototype;return n.initialize=function(e){this._passes.length?w(12005):(this._defines||(this._defines=[]),this._states||(this._states=[]),this._props||(this._props=[]),void 0!==e.technique&&(this._techIdx=e.technique),e.effectAsset?this._effectAsset=e.effectAsset:e.effectName&&(this._effectAsset=ux.get(e.effectName)),e.defines&&this._prepareInfo(e.defines,this._defines),e.states&&this._prepareInfo(e.states,this._states),this._update())},n.reset=function(e){this.initialize(e)},n.destroy=function(){return this._doDestroy(),e.prototype.destroy.call(this)},n.recompileShaders=function(){console.warn("Shaders in material asset '"+this.name+"' cannot be modified at runtime, please instantiate the material first.")},n.overridePipelineStates=function(){console.warn("Pipeline states in material asset '"+this.name+"' cannot be modified at runtime, please instantiate the material first.")},n.onLoaded=function(){this._update(),this.loaded=!0,this.emit("load")},n.resetUniforms=function(e){void 0===e&&(e=!0),this._props.length=this._passes.length;for(var t=0;t<this._props.length;t++)this._props[t]={};if(e)for(var n,i=ve(this._passes);!(n=i()).done;){var o=n.value;o.resetUBOs(),o.resetTextures()}},n.setProperty=function(e,t,n){var i=!1;if(void 0===n)for(var o=this._passes,a=o.length,r=0;r<a;r++){var s=o[r];this._uploadProperty(s,e,t)&&(this._props[s.propertyIndex][e]=t,i=!0)}else{if(n>=this._passes.length)return void console.warn("illegal pass index: "+n+".");var c=this._passes[n];this._uploadProperty(c,e,t)&&(this._props[c.propertyIndex][e]=t,i=!0)}i||console.warn("illegal property name: "+e+".")},n.getProperty=function(e,t){if(void 0===t)for(var n=this._props,i=n.length,o=0;o<i;o++){var a=n[o];if(e in a)return a[e]}else{if(t>=this._props.length)return console.warn("illegal pass index: "+t+"."),null;var r=this._props[this._passes[t].propertyIndex];if(e in r)return r[e]}return null},n.copy=function(e){this._techIdx=e._techIdx,this._props.length=e._props.length;for(var t=0;t<e._props.length;t++)this._props[t]=fe({},e._props[t]);this._defines.length=e._defines.length;for(var n=0;n<e._defines.length;n++)this._defines[n]=fe({},e._defines[n]);this._states.length=e._states.length;for(var i=0;i<e._states.length;i++)this._states[i]=fe({},e._states[i]);this._effectAsset=e._effectAsset,this._update()},n._prepareInfo=function(e,t){var n=e;if(!Array.isArray(n)){var i=this._effectAsset?this._effectAsset.techniques[this._techIdx].passes.length:1;n=Array(i).fill(n)}for(var o=0;o<n.length;++o)Object.assign(t[o]||(t[o]={}),n[o])},n._createPasses=function(){var e=this._effectAsset.techniques[this._techIdx||0];if(!e)return[];for(var t=e.passes.length,n=[],i=0;i<t;++i){var o=e.passes[i],a=o.passIndex=i,r=o.defines=this._defines[a]||(this._defines[a]={}),c=o.stateOverrides=this._states[a]||(this._states[a]={});if(void 0!==o.propertyIndex&&(Object.assign(r,this._defines[o.propertyIndex]),Object.assign(c,this._states[o.propertyIndex])),void 0!==o.embeddedMacros&&Object.assign(r,o.embeddedMacros),!o.switch||r[o.switch]){var l=new ud(s.director.root);l.initialize(o),n.push(l)}}return n},n._update=function(e){var n=this;if(void 0===e&&(e=!0),this._effectAsset){this._passes=this._createPasses();var i=this._effectAsset.techniques[this._techIdx].passes.length;if(this._props.length=i,e)this._passes.forEach((function(e,t){var i=n._props[t];for(var o in i||(i=n._props[t]={}),void 0!==e.propertyIndex&&Object.assign(i,n._props[e.propertyIndex]),i)n._uploadProperty(e,o,i[o])}));else for(var o=0;o<this._props.length;o++)this._props[o]={}}this._hash=t.getHash(this)},n._uploadProperty=function(e,t,n){var i=e.getHandle(t);if(!i)return!1;var o=ud.getPropertyTypeFromHandle(i);if(o===bh.BUFFER)Array.isArray(n)?e.setUniformArray(i,n):null!==n?e.setUniform(i,n):e.resetUniform(t);else if(o===bh.TEXTURE)if(Array.isArray(n))for(var a=0;a<n.length;a++)this._bindTexture(e,i,n[a],a);else n?this._bindTexture(e,i,n):e.resetTexture(t);return!0},n._bindTexture=function(e,t,n,i){var o=ud.getBindingFromHandle(t);if(n instanceof hc)e.bindTexture(o,n,i);else if(n instanceof um||n instanceof Ix){var a=n.getGFXTexture();if(!a||!a.width||!a.height)return;e.bindTexture(o,a,i),e.bindSampler(o,n.getGFXSampler(),i)}},n._doDestroy=function(){if(this._passes&&this._passes.length)for(var e,t=ve(this._passes);!(e=t()).done;)e.value.destroy();this._passes.length=0},n.initDefault=function(t){e.prototype.initDefault.call(this,t),this.initialize({effectName:"unlit",defines:{USE_COLOR:!0}}),this.setProperty("mainColor",new Pn("#ff00ff"))},n.validate=function(){return!!this._effectAsset&&!this._effectAsset.isDefault&&this.passes.length>0},le(t,[{key:"effectAsset",get:function(){return this._effectAsset}},{key:"effectName",get:function(){return this._effectAsset?this._effectAsset.name:""}},{key:"technique",get:function(){return this._techIdx}},{key:"passes",get:function(){return this._passes}},{key:"hash",get:function(){return this._hash}},{key:"parent",get:function(){return null}},{key:"owner",get:function(){return null}}]),t}(b_),gx=xe((vx=Ax).prototype,"_effectAsset",[dx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),xx=xe(vx.prototype,"_techIdx",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),yx=xe(vx.prototype,"_defines",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Ex=xe(vx.prototype,"_states",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Sx=xe(vx.prototype,"_props",[Fu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),px=vx))||px));s.Material=Px;var Rx=e("bv",pt({Planar:0,ShadowMap:1})),bx=(e("bw",pt({HARD:0,SOFT:1,SOFT_2X:2})),Rx.ShadowMap+1),Nx=e("bx",function(){function e(){this.sphere=new Or(0,0,0,.01),this.maxReceived=4,this._normal=new Rn(0,1,0),this._shadowColor=new Pn(0,0,0,76),this._matLight=new jn,this._material=null,this._instancingMaterial=null,this._size=new Xn(512,512),this._handle=Co,this._handle=fa.alloc()}var t=e.prototype;return t.getPlanarShader=function(e){return this._material||(this._material=new Px,this._material.initialize({effectName:"planar-shadow"}),fa.set(this._handle,ra.PLANAR_PASS,this._material.passes[0].handle)),this._material.passes[0].getShaderVariant(e)},t.getPlanarInstanceShader=function(e){return this._instancingMaterial||(this._instancingMaterial=new Px,this._instancingMaterial.initialize({effectName:"planar-shadow",defines:{USE_INSTANCING:!0}}),fa.set(this._handle,ra.INSTANCE_PASS,this._instancingMaterial.passes[0].handle)),this._instancingMaterial.passes[0].getShaderVariant(e)},t.initialize=function(e){fa.set(this._handle,ra.TYPE,e.enabled?e.type:bx),fa.set(this._handle,ra.NEAR,e.near),fa.set(this._handle,ra.FAR,e.far),fa.set(this._handle,ra.ASPECT,e.aspect),fa.set(this._handle,ra.ORTHO_SIZE,e.orthoSize),this._size=e.shadowMapSize,fa.setVec2(this._handle,ra.SIZE,this._size),fa.set(this._handle,ra.PCF_TYPE,e.pcf),Rn.copy(this._normal,e.normal),fa.setVec3(this._handle,ra.NORMAL,this._normal),fa.set(this._handle,ra.DISTANCE,e.distance),this._shadowColor.set(e.shadowColor),fa.setVec4(this._handle,ra.COLOR,this._shadowColor),fa.set(this._handle,ra.BIAS,e.bias),fa.set(this._handle,ra.PACKING,e.packing?1:0),fa.set(this._handle,ra.LINEAR,e.linear?1:0),fa.set(this._handle,ra.SELF_SHADOW,e.selfShadow?1:0),fa.set(this._handle,ra.NORMAL_BIAS,e.normalBias),fa.set(this._handle,ra.ENABLE,e.enabled?1:0),this.maxReceived=e.maxReceived,fa.set(this._handle,ra.AUTO_ADAPT,e.autoAdapt?1:0)},t.activate=function(){if(this.enabled)this.type===Rx.ShadowMap?this._updatePipeline():this._updatePlanarInfo();else{var e=s.director.root;e.pipeline.macros.CC_RECEIVE_SHADOW=0,e.onGlobalPipelineStateChanged()}},t._updatePlanarInfo=function(){this._material||(this._material=new Px,this._material.initialize({effectName:"planar-shadow"}),fa.set(this._handle,ra.PLANAR_PASS,this._material.passes[0].handle)),this._instancingMaterial||(this._instancingMaterial=new Px,this._instancingMaterial.initialize({effectName:"planar-shadow",defines:{USE_INSTANCING:!0}}),fa.set(this._handle,ra.INSTANCE_PASS,this._instancingMaterial.passes[0].handle));var e=s.director.root;e.pipeline.macros.CC_RECEIVE_SHADOW=0,e.onGlobalPipelineStateChanged()},t._updatePipeline=function(){var e=s.director.root;e.pipeline.macros.CC_RECEIVE_SHADOW=1,e.onGlobalPipelineStateChanged()},t.destroy=function(){this._material&&this._material.destroy(),this._instancingMaterial&&this._instancingMaterial.destroy(),this._handle&&(fa.free(this._handle),this._handle=Co),this.sphere.destroy()},le(e,[{key:"enabled",get:function(){return!!fa.get(this._handle,ra.ENABLE)},set:function(e){fa.set(this._handle,ra.ENABLE,e?1:0),e||fa.set(this._handle,ra.TYPE,bx),this.activate()}},{key:"normal",get:function(){return this._normal},set:function(e){Rn.copy(this._normal,e),fa.setVec3(this._handle,ra.NORMAL,this._normal)}},{key:"distance",get:function(){return fa.get(this._handle,ra.DISTANCE)},set:function(e){fa.set(this._handle,ra.DISTANCE,e)}},{key:"shadowColor",get:function(){return this._shadowColor},set:function(e){this._shadowColor=e,fa.setVec4(this._handle,ra.COLOR,e)}},{key:"type",get:function(){return fa.get(this._handle,ra.TYPE)},set:function(e){fa.set(this._handle,ra.TYPE,this.enabled?e:bx),this.activate()}},{key:"near",get:function(){return fa.get(this._handle,ra.NEAR)},set:function(e){fa.set(this._handle,ra.NEAR,e)}},{key:"far",get:function(){return fa.get(this._handle,ra.FAR)},set:function(e){fa.set(this._handle,ra.FAR,e)}},{key:"aspect",get:function(){return fa.get(this._handle,ra.ASPECT)},set:function(e){fa.set(this._handle,ra.ASPECT,e)}},{key:"orthoSize",get:function(){return fa.get(this._handle,ra.ORTHO_SIZE)},set:function(e){fa.set(this._handle,ra.ORTHO_SIZE,e)}},{key:"size",get:function(){return this._size},set:function(e){this._size=e,fa.setVec2(this._handle,ra.SIZE,this._size)}},{key:"pcf",get:function(){return fa.get(this._handle,ra.PCF_TYPE)},set:function(e){fa.set(this._handle,ra.PCF_TYPE,e)}},{key:"shadowMapDirty",get:function(){return!!fa.get(this._handle,ra.SHADOW_MAP_DIRTY)},set:function(e){fa.set(this._handle,ra.SHADOW_MAP_DIRTY,e?1:0)}},{key:"bias",get:function(){return fa.get(this._handle,ra.BIAS)},set:function(e){fa.set(this._handle,ra.BIAS,e)}},{key:"packing",get:function(){return!!fa.get(this._handle,ra.PACKING)},set:function(e){fa.set(this._handle,ra.PACKING,e?1:0)}},{key:"linear",get:function(){return!!fa.get(this._handle,ra.LINEAR)},set:function(e){fa.set(this._handle,ra.LINEAR,e?1:0)}},{key:"selfShadow",get:function(){return!!fa.get(this._handle,ra.SELF_SHADOW)},set:function(e){fa.set(this._handle,ra.SELF_SHADOW,e?1:0)}},{key:"normalBias",get:function(){return fa.get(this._handle,ra.NORMAL_BIAS)},set:function(e){fa.set(this._handle,ra.NORMAL_BIAS,e)}},{key:"autoAdapt",get:function(){return!!fa.get(this._handle,ra.AUTO_ADAPT)},set:function(e){fa.set(this._handle,ra.AUTO_ADAPT,e?1:0)}},{key:"matLight",get:function(){return this._matLight}},{key:"material",get:function(){return this._material}},{key:"instancingMaterial",get:function(){return this._instancingMaterial}},{key:"handle",get:function(){return this._handle}}]),e}());Nx.MAX_FAR=2e3,Nx.COEFFICIENT_OF_EXPANSION=2*Math.sqrt(3),s.Shadows=Nx;var Ox=e("eC",pt({LINEAR:0,EXP:1,EXP_SQUARED:2,LAYERED:3})).LAYERED+1,Dx=e("f6",function(){function e(){this._fogColor=new Pn("#C8C8C8"),this._colorArray=new Float32Array([.2,.2,.2,1]),this._handle=Co,this._handle=sa.alloc()}var t=e.prototype;return t.initialize=function(e){sa.set(this._handle,ia.ENABLE,e.enabled?1:0),sa.set(this._handle,ia.TYPE,e.enabled?e.type:Ox),this._fogColor.set(e.fogColor),Pn.toArray(this._colorArray,this._fogColor),sa.setVec4(this._handle,ia.COLOR,this._fogColor),sa.set(this._handle,ia.DENSITY,e.fogDensity),sa.set(this._handle,ia.START,e.fogStart),sa.set(this._handle,ia.END,e.fogEnd),sa.set(this._handle,ia.ATTEN,e.fogAtten),sa.set(this._handle,ia.TOP,e.fogTop),sa.set(this._handle,ia.RANGE,e.fogRange)},t.activate=function(){this._updatePipeline()},t._updatePipeline=function(){var e=s.director.root,t=this.enabled?this.type:Ox,n=e.pipeline;n.macros.CC_USE_FOG!==t&&(n.macros.CC_USE_FOG=t,e.onGlobalPipelineStateChanged())},t.destroy=function(){this._handle&&(sa.free(this._handle),this._handle=Co)},le(e,[{key:"enabled",get:function(){return sa.get(this._handle,ia.ENABLE)},set:function(e){sa.set(this._handle,ia.ENABLE,e?1:0),e||sa.set(this._handle,ia.TYPE,Ox),e?this.activate():this._updatePipeline()}},{key:"fogColor",get:function(){return this._fogColor},set:function(e){this._fogColor.set(e),Pn.toArray(this._colorArray,this._fogColor),sa.setVec4(this._handle,ia.COLOR,this._fogColor)}},{key:"type",get:function(){return sa.get(this._handle,ia.TYPE)},set:function(e){sa.set(this._handle,ia.TYPE,this.enabled?e:Ox),this.enabled&&this._updatePipeline()}},{key:"fogDensity",get:function(){return sa.get(this._handle,ia.DENSITY)},set:function(e){sa.set(this._handle,ia.DENSITY,e)}},{key:"fogStart",get:function(){return sa.get(this._handle,ia.START)},set:function(e){sa.set(this._handle,ia.START,e)}},{key:"fogEnd",get:function(){return sa.get(this._handle,ia.END)},set:function(e){sa.set(this._handle,ia.END,e)}},{key:"fogAtten",get:function(){return sa.get(this._handle,ia.ATTEN)},set:function(e){sa.set(this._handle,ia.ATTEN,e)}},{key:"fogTop",get:function(){return sa.get(this._handle,ia.TOP)},set:function(e){sa.set(this._handle,ia.TOP,e)}},{key:"fogRange",get:function(){return sa.get(this._handle,ia.RANGE)},set:function(e){sa.set(this._handle,ia.RANGE,e)}},{key:"colorArray",get:function(){return this._colorArray}},{key:"handle",get:function(){return this._handle}}]),e}());s.Fog=Dx}}}));
